{"version":3,"sources":["services/api.js","services/auth.js","components/NavLinks.js","containers/AddAdoption.js","containers/AddApplication.js","containers/AddDog.js","containers/AnimalControlReport.js","containers/DogDashboard.js","containers/DogDetails.js","containers/ExpenseAnalysis.js","containers/Login.js","containers/MonthlyAdoptionReport.js","containers/Reports.js","containers/ReviewApplications.js","containers/VolunteerLookup.js","App.js","index.js"],"names":["sendData","data","path","method","Promise","resolve","reject","request","XMLHttpRequest","onload","event","onerror","error","open","send","JSON","stringify","getData","isLoggedIn","document","cookie","split","reduce","accumulator","pair","key","NavLinks","isTrustedVolunteer","titleOnly","useState","loginRedirect","state","setState","useEffect","hasOwnProperty","to","pathname","className","AddAdoption","locationState","useLocation","approvedApplicants","approvedApplicantLastNameFragment","timeout","latestApplication","dog","dateAdopted","dashboardRedirect","errorMessage","totalExpenses","expenses","sum","current","amountInCents","animalControlPays","surrenderedByAnimalControl","adoptionFee","adoptionFeeCents","Math","round","adoptionFeeDollars","floor","from","id","htmlFor","onChange","target","clearTimeout","setTimeout","value","then","parse","response","status","console","log","catch","length","map","applicant","index","type","onClick","params","query","Object","keys","filter","join","getLatestApplication","applicantId","coApplicantFirstName","coApplicantLastName","firstName","lastName","street","city","zip","email","phoneNumber","Date","date","toString","zipCode","expense","vendor","description","adoption","applicationNumberFk","dogIdFk","adoptionDate","AddApplication","showModal","applicationId","setApplicant","applicantIdFk","application","setApplication","updateApplicant","attribute","updatedState","assign","updateApplication","postApplication","style","display","flexDirection","alignItems","justifyContent","overflow","position","top","right","bottom","left","zIndex","backgroundColor","opacity","marginLeft","marginBottom","height","width","margin","AddDog","pageState","setPageState","useReducer","action","dogName","payload","newBreed","breed","checked","querySelector","sex","alterationStatus","dateOfBirth","microchipId","surrenderDate","surrenderReason","availableBreeds","detailRedirect","Error","dispatch","validateDog","toLowerCase","isError","forEach","b","indexOf","clear","disabled","paddingLeft","name","volunteerId","localStorage","getItem","dogData","color","AnimalControlReport","datum","month","year","dogsTotalCount","dogsSixtyDaysCount","styles","ControlPanel","addApplication","addDog","availableSpaces","showAvailable","setShowAvailable","showUnavailable","setShowUnavailable","logout","DogDashboard","dogs","addDogRedirect","addApplicationRedirect","dogDetailRedirect","now","years","yearsStr","months","monthsStr","isAvailable","String","toDateString","DogDetails","dogId","useParams","falseBreeds","breeds","canEditBreeds","canEditSex","canEditAlterationStatus","canEditMicrochipId","showAddExpenseForm","newExpense","expenseErrorMessage","addAdoptionRedirect","isAdoptable","breedsObj","Checkbox","location","reload","totalExpense","currentExpense","step","min","ExpenseAnalysis","totalSpending","Login","password","redirect","autoComplete","form","volunteer","setItem","isTrusted","MonthlyAdoptionReport","UpdateTables","ind","dataDict","i","indices","push","indx","offset","today","setMonth","getMonth","monthNum","getMonthName","getFullYear","GetMonthOffset","expenseCents","cents","Expenses","Float64","expenseDollars","AdoptionFees","profitCents","Profit","profitDollars","SurrenderCount","AdoptionCount","getTableValues","Reports","ReviewApplications","applications","setApplications","submitDecision","decision","updatedApplicationState","remainingApplications","class","VolunteerLookup","volunteerName","setVolunteerName","finally","cell","App","Routes","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.55f35468.chunk.js","sourcesContent":["const sendData = (data, path, method = \"post\") => {\n    return new Promise((resolve, reject) => {\n        const API = \"http://localhost:8080/api\";\n        const request = new XMLHttpRequest();\n\n        request.onload = event => {\n            resolve(event);\n        }\n\n        request.onerror = error => {\n            reject(error);\n        }\n\n        request.open(method, API + path);\n\n        request.send(JSON.stringify(data));\n    });\n}\n\nconst getData = path => {\n    return new Promise((resolve, reject) => {\n        const API = \"http://localhost:8080/api\";\n        const request = new XMLHttpRequest();\n\n        request.onload = data => {\n            resolve(data);\n        }\n\n        request.onerror = error => {\n            reject(error);\n        }\n\n        request.open(\"get\", API + path);\n\n        request.send();\n    });\n}\n\nexport {\n    sendData,\n    getData\n};","const isLoggedIn = () => {\n    const cookiePairs = document.cookie.split(\";\");\n    const cookie = cookiePairs.reduce((accumulator, pair) => {\n        const [key, value] = pair.split(\"=\");\n        switch (value) {\n            case \"true\":\n                accumulator[key] = true;\n                return accumulator;\n            case \"false\":\n                accumulator[key] = false;\n                return accumulator;\n            default:\n                accumulator[key] = null;\n                return accumulator;\n        }\n    }, {});\n    return cookie;\n}\n\nexport { isLoggedIn };","import React, { useEffect, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nimport { isLoggedIn } from \"../services/auth\";\n\nexport default function NavLinks({ isTrustedVolunteer, titleOnly = false }) {\n    const [state, setState] = useState({\n        loginRedirect: false,\n        cookie: {}\n    });\n\n    // check auth\n    useEffect(() => {\n        const cookie = isLoggedIn();\n        if (cookie.hasOwnProperty(\"isTrustedVolunteer\") && cookie.isTrustedVolunteer !== null) {\n            setState({ ...state, cookie });\n        } else {\n            setState({ ...state, loginRedirect: true });\n        }\n        /* eslint-disable react-hooks/exhaustive-deps */\n    }, []);\n\n    return (\n        <>\n            {state.loginRedirect && <Redirect to={{ pathname: \"/login\" }} />}\n            <nav className=\"container\">\n                <h1>Mo's Mutt House</h1>\n                {!titleOnly && (\n                    <ul>\n                        <li className=\"nav-link form-unit log-out\">\n                            <Link to=\"/login\">Logout</Link>\n                        </li>\n                        {isTrustedVolunteer && (\n                            <>\n                                <li className=\"nav-link form-unit\">\n                                    <Link to=\"/reports\">Reports</Link>\n                                </li>\n                                <li className=\"nav-link form-unit\">\n                                    <Link to=\"/review-applications\">Review Applications</Link>\n                                </li>\n                            </>\n                        )}\n\n                        <li className=\"nav-link form-unit\">\n                            <Link to=\"/add-application\">Add Application</Link>\n                        </li>\n                        <li className=\"nav-link form-unit\">\n                            <Link to=\"/add-dog\">Add Dog</Link>\n                        </li>\n                        <li className=\"nav-link form-unit\">\n                            <Link to=\"/dog-dashboard\">Dog Dashboard</Link>\n                        </li>\n                    </ul>\n                )}\n            </nav>\n        </>\n    );\n}","import React, { useEffect, useState } from \"react\";\nimport { Redirect, useLocation } from \"react-router-dom\";\n\nimport { getData, sendData } from \"../services/api\";\nimport { isLoggedIn } from \"../services/auth\";\nimport { NavLinks } from \"../components\";\n\nconst AddAdoption = () => {\n    const locationState = useLocation().state;\n    const [state, setState] = useState({\n        approvedApplicants: [],\n        approvedApplicantLastNameFragment: \"\",\n        timeout: -1,\n        latestApplication: {},\n        dog: locationState && locationState.dog,\n        dateAdopted: \"\",\n        dashboardRedirect: false,\n        errorMessage: \"\",\n        cookie: {}\n    });\n\n    // check auth\n    useEffect(() => {\n        const cookie = isLoggedIn();\n        if (cookie.hasOwnProperty(\"isTrustedVolunteer\") && cookie.isTrustedVolunteer) {\n            setState({ ...state, cookie });\n        }\n        /* eslint-disable react-hooks/exhaustive-deps */\n    }, []);\n\n    // Don't pre-populate\n    // useEffect(() => {\n    //     if (state.cookie.hasOwnProperty(\"isTrustedVolunteer\") && state.cookie.isTrustedVolunteer) {\n    //         getData(`/applicant?status=approved`)\n    //             .then(({ target }) => {\n    //                 setState({ ...state, approvedApplicants: JSON.parse(target.response) });\n    //             })\n    //             .catch(error => {\n    //                 console.log(error);\n    //             })\n    //     }\n    // }, [state.cookie]);\n\n    const getLatestApplication = (params, applicant) => {\n        const query = Object.keys(params)\n            .filter(key => params[key])\n            .map((key, index) => `${index ? \"&\" : \"?\"}${key}=${params[key]}`)\n            .join(\"\")\n\n        getData(`/application${query}`)\n            .then(({ target }) => {\n                if (target.status === 200) {\n                    const latestApplication = JSON.parse(target.response)[0]\n                    latestApplication.applicant = applicant;\n                    setState({ ...state, latestApplication });\n                } else {\n                    console.log(target);\n                }\n\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    const submitAdoption = () => {\n        const adoption = {\n            dateAdopted: state.dateAdopted,\n            applicationNumberFk: +state.latestApplication.id,\n            dogIdFk: state.dog.id\n        }\n        sendData(adoption, \"/adoption\")\n            .then(data => {\n                const { target } = data;\n                if (target.status === 201) {\n                    // show success modal\n                    setState({ ...state, dashboardRedirect: true });\n                } else {\n                    console.log(\"error adding dog (non-201):\", target.response);\n                    setState({ ...state, errorMessage: target.response });\n                }\n            })\n            .catch(error => {\n                // show error modal\n                console.log(\"error adding dog (catch):\", error);\n                setState({ ...state, errorMessage: error });\n            });\n    }\n\n    const totalExpenses = state.dog && state.dog.expenses.reduce((sum, current) => sum + (current.amountInCents / 100), 0);\n\n    const animalControlPays = state.dog && ((state.dog.surrenderedByAnimalControl && totalExpenses) || 0);\n\n    const adoptionFee = (1.15 * totalExpenses) - animalControlPays;\n\n    const adoptionFeeCents = Math.round((adoptionFee % 1) * 100); // round to nearest cent\n\n    const adoptionFeeDollars = Math.floor(adoptionFee); // round down to nearest dollar\n\n    return (\n        <>\n            {state.dashboardRedirect && <Redirect to={{ pathname: \"/dog-dashboard\", state: { from: \"/add-adoption\" } }} />}\n            <NavLinks isTrustedVolunteer={state.cookie.isTrustedVolunteer} />\n            <main className=\"container\">\n                <h1>Add Adoption</h1>\n                {!state.latestApplication.id && <form>\n                    <div className=\"form-unit\">\n                        <label htmlFor=\"approved-applicant-last-name\">Search by approved applicant last name:</label>\n                        <input\n                            id=\"approved-applicant-last-name\"\n                            onChange={({ target }) => {\n                                clearTimeout(state.timeout);\n                                setState({\n                                    ...state, timeout: setTimeout(() => {\n                                        // make http call for approved applicants like\n                                        getData(`/applicant?like=${target.value}`)\n                                            .then(({ target }) => {\n                                                let approvedApplicants = JSON.parse(target.response);\n                                                if (target.status === 200) {\n                                                    setState({ ...state, approvedApplicants });\n                                                }\n                                                else {\n                                                    console.log(target);\n                                                }\n                                            })\n                                            .catch(error => {\n                                                console.log(error);\n                                            })\n                                    }, 400)\n                                });\n                            }}\n                        />\n                    </div>\n\n                </form>}\n                <div>\n\n                </div>\n\n\n                {!state.latestApplication.id && state.approvedApplicants.length && (\n                    <>\n                        <h3>Select Applicant</h3>\n                        <table>\n                            <thead>\n                                <tr>\n                                    <th></th>\n                                    <th>First Name</th>\n                                    <th>Last Name</th>\n                                    <th>Street</th>\n                                    <th>City</th>\n                                    <th>State</th>\n                                    <th>Zip</th>\n                                    <th>Email</th>\n                                    <th>Phone Number</th>\n                                    <th>Co-applicant Name</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {state.approvedApplicants.map((applicant, index) => {\n                                    return (\n                                        <tr key={index} >\n                                            <td>\n                                                <button type=\"button\" onClick={() => {\n                                                    getLatestApplication({ applicantId: applicant.id, coApplicantFirstName: applicant.coApplicantFirstName, coApplicantLastName: applicant.coApplicantLastName }, applicant);\n                                                }}>Select</button>\n                                            </td>\n                                            <td>{applicant.firstName}</td>\n                                            <td>{applicant.lastName}</td>\n                                            <td>{applicant.street}</td>\n                                            <td>{applicant.city}</td>\n                                            <td>{applicant.state}</td>\n                                            <td>{applicant.zip}</td>\n                                            <td>{applicant.email}</td>\n                                            <td>{applicant.phoneNumber}</td>\n                                            <td>{`${applicant.coApplicantFirstName || \"\"} ${applicant.coApplicantLastName || \"\"}`}</td>\n                                        </tr>\n                                    );\n\n                                })}\n                            </tbody>\n                        </table>\n                    </>\n                )}\n                {!state.latestApplication.id && !state.approvedApplicants.length && (<h3>There are not currently any approved applications.</h3>)}\n                {state.latestApplication.id && (\n                    <>\n                        <h3>Selected Application</h3>\n                        <div className=\"form-unit\">Application Number: {state.latestApplication.id}</div>\n                        <div className=\"form-unit\">Date: {new Date(state.latestApplication.date).toString()}</div>\n                        <div className=\"form-unit\">Applicant Name: {state.latestApplication.applicant.firstName} {state.latestApplication.applicant.lastName}</div>\n                        <div className=\"form-unit\">Applicant Address: {state.latestApplication.applicant.street}, {state.latestApplication.applicant.city}, {state.latestApplication.applicant.state}  {state.latestApplication.applicant.zipCode}</div>\n                        <div className=\"form-unit\">Email: {state.latestApplication.applicant.email}</div>\n                        <div className=\"form-unit\">Phone Number: {state.latestApplication.applicant.phoneNumber}</div>\n                        {(state.latestApplication.coApplicantFirstName || state.latestApplication.coApplicantLastName) && <div className=\"form-unit\">Co-Applicant: {state.latestApplication.coApplicantFirstName} {state.latestApplication.coApplicantLastName}</div>}\n                        <h3>Expenses</h3>\n                        {state.dog.expenses.map(expense => (\n                            <div className=\"form-unit\" key={expense.vendor + expense.date}>\n                                <div>Vendor: {expense.vendor}</div>\n                                <div>Amount: ${expense.amountInCents / 100}</div>\n                                <div>Description: {expense.description}</div>\n                                <div>Date: {expense.date}</div>\n                            </div>\n                        ))}\n                        <h3>Total Expenses: ${totalExpenses}</h3>\n                        <h3>Animal Control pays: ${animalControlPays}</h3>\n                        <h3>Adoption Fee: ${adoptionFeeDollars}.{adoptionFeeCents}</h3>\n                        <div>\n                            <label htmlFor=\"adoption-date\">Adoption Date:</label>\n                            <input type=\"date\" onChange={({ target }) => setState({ ...state, dateAdopted: target.value })} />\n                        </div>\n                        {state.dateAdopted && <div>\n                            <span>I confirm every looks correct: </span><button type=\"button\" onClick={submitAdoption}>Complete Adoption</button><button type=\"button\" onClick={() => setState({ ...state, latestApplication: {}, adoptionDate: \"\" })}>Cancel</button>\n                        </div>}\n                    </>\n                )}\n            </main>\n        </>\n    )\n\n\n}\n\nexport default AddAdoption;","import React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { getData, sendData } from \"../services/api\";\nimport { isLoggedIn } from \"../services/auth\";\nimport { NavLinks } from \"../components\";\n\nconst AddApplication = () => {\n    const [state, setState] = useState({\n        showModal: false,\n        dashboardRedirect: false,\n        errorMessage: \"\",\n        timeout: -1,\n        applicationId: \"\",\n        loginRedirect: false,\n        cookie: {}\n    });\n\n    // check auth\n    useEffect(() => {\n        const cookie = isLoggedIn();\n        if (cookie.hasOwnProperty(\"isTrustedVolunteer\") && cookie.isTrustedVolunteer !== null) {\n            setState({ ...state, cookie });\n        }\n        /* eslint-disable react-hooks/exhaustive-deps */\n    }, []);\n\n    const [applicant, setApplicant] = useState({\n        city: \"\",\n        email: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        phoneNumber: \"\",\n        state: \"\",\n        street: \"\",\n        zip: \"\"\n    });\n\n    const [application, setApplication] = useState({\n        coApplicantFirstName: \"\",\n        coApplicantLastName: \"\",\n        applicantIdFk: \"\",\n        date: \"\",\n        state: \"\"\n    });\n\n    const updateApplicant = (attribute) => {\n        let updatedState = applicant;\n        Object.assign(updatedState, attribute);\n        setApplicant({ ...updatedState });\n    };\n\n    const updateApplication = (attribute) => {\n        let updatedState = application;\n        Object.assign(updatedState, attribute);\n        setApplication({ ...updatedState });\n    };\n\n    const postApplicant = () => {\n        sendData(applicant, `/applicant`)\n            .then(({ target }) => {\n                const applicant = JSON.parse(target.response);\n                if (target.status === 201 && applicant.email) {\n                    // show success modal\n                    setApplicant(applicant)\n                    updateApplication({ applicantIdFk: applicant.id })\n                    postApplication()\n                } else {\n                    console.log(\"error adding application (non-201):\", target.response);\n                    setState({ ...state, \"errorMessage\": target.response });\n                }\n            })\n            .catch(error => {\n                // show error modal\n                console.log(\"error adding application (catch):\", error);\n                setState({ ...state, \"errorMessage\": error });\n            });\n    };\n\n    const postApplication = () => {\n        sendData(application, `/application`)\n            .then(({ target }) => {\n                if (target.status === 201) {\n                    // show success modal\n                    setState({ ...state, applicationId: JSON.parse(target.response).id, showModal: true });\n                } else {\n                    console.log(\"error adding application (non-201):\", target.response);\n                    setState({ ...state, \"errorMessage\": target.response });\n                }\n            })\n            .catch(error => {\n                // show error modal\n                console.log(\"error adding application (catch):\", error);\n                setState({ ...state, \"errorMessage\": error });\n            });\n    };\n\n    const submitApplication = () => {\n        if (application.applicantIdFk) {\n            postApplication();\n        } else {\n            postApplicant();\n        }\n    };\n\n    const resetPage = () => {\n        setApplicant({\n            city: \"\",\n            email: \"\",\n            firstName: \"\",\n            lastName: \"\",\n            phoneNumber: \"\",\n            state: \"\",\n            street: \"\",\n            zip: \"\"\n        });\n\n        setApplication({\n            coApplicantFirstName: \"\",\n            coApplicantLastName: \"\",\n            applicantIdFk: \"\",\n            date: \"\",\n            state: \"\"\n        });\n\n        setState({\n            showModal: false,\n            dashboardRedirect: false,\n            errorMessage: \"\",\n            timeout: -1,\n            applicationId: \"\",\n            loginRedirect: false\n        });\n    }\n\n    return (\n        <>\n            {state.dashboardRedirect && <Redirect to={{ pathname: \"/dog-dashboard\", state: { from: \"/add-dog\" } }} />}\n            <NavLinks isTrustedVolunteer={state.cookie.isTrustedVolunteer} />\n            <main className=\"container\">\n                <h1>Add Application</h1>\n                <form>\n                    <div className=\"form-unit\">\n                        <label htmlFor=\"\">Applicant Email Address:</label>\n                        <input\n                            type=\"text\"\n                            id=\"applicant-email\"\n                            value={applicant.email}\n                            onChange={({ target }) => {\n                                updateApplicant({ \"email\": target.value })\n                                // debounce for 300 milliseconds\n                                clearTimeout(state.timeout);\n                                setState({\n                                    ...state, timeout: setTimeout(() => {\n                                        // make http call for applicant\n                                        getData(`/applicant/${applicant.email}`)\n                                            .then(({ target }) => {\n                                                let applicant = JSON.parse(target.response);\n                                                if (target.status === 200 && applicant.email) {\n                                                    setApplicant(applicant);\n                                                    updateApplication({ applicantIdFk: applicant.id })\n                                                }\n                                            })\n                                            .catch(error => {\n                                                console.log(error);\n                                            })\n                                    }, 400)\n                                });\n                            }}\n                        />\n                    </div>\n                    <div className=\"form-unit\">\n                        <label htmlFor=\"\">Applicant First Name:</label>\n                        <input\n                            type=\"text\"\n                            id=\"applicant-first-name\"\n                            value={applicant.firstName}\n                            onChange={({ target }) => updateApplicant({ \"firstName\": target.value })}\n                        />\n                    </div>\n                    <div className=\"form-unit\">\n                        <label htmlFor=\"\">Applicant Last Name:</label>\n                        <input\n                            type=\"text\"\n                            id=\"applicant-last-name\"\n                            value={applicant.lastName}\n                            onChange={({ target }) => updateApplicant({ \"lastName\": target.value })}\n                        />\n                    </div>\n                    <div className=\"form-unit\">\n                        <label htmlFor=\"\">Street Address:</label>\n                        <input\n                            type=\"text\"\n                            id=\"applicant-stree-address\"\n                            value={applicant.street}\n                            onChange={({ target }) => updateApplicant({ \"street\": target.value })}\n                        />\n                    </div>\n                    <div className=\"form-unit\">\n                        <label htmlFor=\"\">City:</label>\n                        <input\n                            type=\"text\"\n                            id=\"applicant-city\"\n                            value={applicant.city}\n                            onChange={({ target }) => updateApplicant({ \"city\": target.value })}\n                        />\n                    </div>\n                    <div className=\"form-unit\">\n                        <label htmlFor=\"\">State: (2 Letters)</label>\n                        <input\n                            type=\"text\"\n                            id=\"applicant-state\"\n                            value={applicant.state}\n                            onChange={({ target }) => updateApplicant({ \"state\": target.value })}\n                        />\n                    </div>\n                    <div className=\"form-unit\">\n                        <label htmlFor=\"\">Zip Code:</label>\n                        <input\n                            type=\"text\"\n                            id=\"applicant-zip-code\"\n                            value={applicant.zip}\n                            onChange={({ target }) => updateApplicant({ \"zip\": target.value })}\n                        />\n                    </div>\n                    <div className=\"form-unit\">\n                        <label htmlFor=\"\">Phone Number:</label>\n                        <input\n                            type=\"text\"\n                            id=\"applicant-phone-number\"\n                            value={applicant.phoneNumber}\n                            onChange={({ target }) => updateApplicant({ \"phoneNumber\": target.value })}\n                        />\n                    </div>\n                    <div className=\"form-unit\">\n                        <label htmlFor=\"\">Co-Applicant First Name:</label>\n                        <input\n                            type=\"text\"\n                            id=\"applicant-co-applicant-first-name\"\n                            value={applicant.coApplicantFirstName}\n                            onChange={({ target }) => updateApplication({ \"coApplicantFirstName\": target.value })}\n                        />\n                    </div>\n                    <div className=\"form-unit\">\n                        <label htmlFor=\"\">Co-Applicant Last Name:</label>\n                        <input\n                            type=\"text\"\n                            id=\"applicant-co-applicant-last-name\"\n                            value={applicant.coApplicantLastName}\n                            onChange={({ target }) => updateApplication({ \"coApplicantLastName\": target.value })}\n                        />\n                    </div>\n                    <button type=\"button\" onClick={submitApplication}>Submit Application</button>\n                </form>\n                {state.showModal && (\n                    <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\", overflow: \"hidden\" }}>\n                        <div style={{ position: \"fixed\", top: 0, right: 0, bottom: 0, left: 0, zIndex: 10, backgroundColor: \"black\", opacity: 0.5 }}></div>\n                        <div style={{ position: \"fixed\", left: \"50%\", bottom: \"50%\", marginLeft: \"-300px\", marginBottom: \"-150px\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\", zIndex: 100, height: \"300px\", width: \"600px\", backgroundColor: \"white\" }}>\n                            <div style={{ marginBottom: \"20px\" }}>\n                                <span>Application successfully created.</span>\n                            </div>\n                            <div style={{ marginBottom: \"20px\" }}>\n                                <span>Application #{state.applicationId}</span>\n                            </div>\n                            <div style={{ margin: \"20px\" }}>Would you like to go to</div>\n                            <div>\n                                <button onClick={resetPage}>Add another application</button>\n                                <span style={{ margin: \"20px\" }}> or </span>\n                                <button onClick={() => setState({ ...state, dashboardRedirect: true })}>Back to Dog Dashboard</button>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </main>\n        </>\n    )\n\n\n}\n\nexport default AddApplication;","import React, { useEffect, useReducer, useState } from \"react\"\nimport { Redirect } from \"react-router-dom\"\n\nimport { getData, sendData } from \"../services/api\";\nimport { isLoggedIn } from \"../services/auth\";\nimport { NavLinks } from \"../components\";\n\nconst AddDog = () => {\n    const [pageState, setPageState] = useState({\n        loginRedirect: false,\n        cookie: {}\n    });\n\n    // check auth\n    useEffect(() => {\n        const cookie = isLoggedIn();\n        if (cookie.hasOwnProperty(\"isTrustedVolunteer\") && cookie.isTrustedVolunteer !== null) {\n            setPageState({ ...pageState, cookie });\n        }\n        /* eslint-disable react-hooks/exhaustive-deps */\n    }, []);\n\n    const reducer = (state, action) => {\n        switch (action.type) {\n            case \"dogName\":\n                return { ...state, dogName: action.payload };\n            case \"breed\":\n                let newBreed = state.breed;\n                if (action.payload.checked) {\n                    newBreed[action.payload.breed] = true;\n                    if (action.payload.breed === \"Mixed\" || action.payload.breed === \"Unknown\") {\n                        // delete all other breeds\n                        for (const key in newBreed) {\n                            if (key !== action.payload.breed) {\n                                delete newBreed[key];\n                                document.querySelector(`#${key.split(\" \").join(\"-\")}`).checked = false;\n                            }\n                        }\n                    }\n                } else {\n                    delete newBreed[action.payload.breed];\n                }\n                return { ...state, breed: newBreed };\n            case \"sex\":\n                return { ...state, sex: action.payload }\n            case \"alterationStatus\":\n                return { ...state, alterationStatus: action.payload }\n            case \"dateOfBirth\":\n                return { ...state, dateOfBirth: action.payload }\n            case \"description\":\n                return { ...state, description: action.payload }\n            case \"microchipId\":\n                return { ...state, microchipId: action.payload }\n            case \"expenses\":\n                return { ...state, expenses: action.payload }\n            case \"surrenderDate\":\n                return { ...state, surrenderDate: action.payload }\n            case \"surrenderReason\":\n                return { ...state, surrenderReason: action.payload }\n            case \"surrenderedByAnimalControl\":\n                return { ...state, surrenderedByAnimalControl: action.payload }\n            case \"availableBreeds\":\n                return { ...state, availableBreeds: action.payload }\n            case \"errorMessage\":\n                return { ...state, errorMessage: action.payload }\n            case \"showModal\":\n                return { ...state, id: action.payload, showModal: true }\n            case \"dogDetail\":\n                return { ...state, detailRedirect: true }\n            case \"dogDashboard\":\n                return { ...state, dashboardRedirect: true }\n            default:\n                throw new Error();\n        }\n    };\n\n    const [state, dispatch] = useReducer(\n        reducer,\n        {\n            dogName: \"\",\n            breed: {},\n            sex: null,\n            alterationStatus: null,\n            dateOfBirth: \"\",\n            description: \"\",\n            microchipId: \"\",\n            surrenderDate: \"\",\n            surrenderReason: \"\",\n            surrenderedByAnimalControl: null,\n            availableBreeds: [],\n            errorMessage: \"\",\n            showModal: false,\n            detailRedirect: false,\n            dashboardRedirect: false,\n            id: -1\n        });\n\n    const {\n        dogName,\n        breed,\n        sex,\n        alterationStatus,\n        dateOfBirth,\n        description,\n        microchipId,\n        surrenderDate,\n        surrenderReason,\n        surrenderedByAnimalControl,\n        availableBreeds,\n        errorMessage,\n        showModal,\n        detailRedirect,\n        dashboardRedirect,\n        id\n    } = state;\n\n    useEffect(() => {\n        if (pageState.cookie.hasOwnProperty(\"isTrustedVolunteer\") && pageState.cookie.isTrustedVolunteer !== null) {\n            getData(\"/breed\")\n                .then(({ target }) => {\n                    dispatch({ type: 'availableBreeds', payload: JSON.parse(target.response) });\n                })\n                .catch(error => {\n                    dispatch({ type: \"errorMessage\", payload: error });\n                    console.log(\"error:\", error);\n                })\n        }\n    }, [pageState.cookie]);\n\n    const addDog = () => {\n        const volunteerId = JSON.parse(localStorage.getItem(\"volunteerId\"));\n        const dogData = {\n            name: dogName,\n            breed: Object.keys(breed),\n            sex,\n            alterationStatus: alterationStatus === \"true\" ? true : false,\n            dateOfBirth,\n            description,\n            surrenderDate,\n            surrenderReason,\n            surrenderedByAnimalControl,\n            volunteerId\n        };\n        if (microchipId) {\n            dogData.microchipId = { \"String\": microchipId, \"Valid\": true };\n        }\n        if (validateDog()) {\n            sendData(dogData, \"/dog\")\n                .then(data => {\n                    const { target } = data;\n                    if (target.status === 201) {\n                        // show success modal\n                        dispatch({ type: \"showModal\", payload: JSON.parse(target.response).id });\n                    } else {\n                        console.log(\"error adding dog (non-201):\", target.response);\n                        dispatch({ type: \"errorMessage\", payload: target.response });\n                    }\n                })\n                .catch(error => {\n                    // show error modal\n                    console.log(\"error adding dog (catch):\", error);\n                    dispatch({ type: \"errorMessage\", payload: error });\n                });\n        }\n    }\n\n    const validateDog = () => {\n        if (!dogName) {\n            dispatch({ type: \"errorMessage\", payload: \"Please enter dog name.\" });\n            return false;\n        }\n        if (dogName.toLowerCase() === \"uga\") {\n            let isError = false;\n            Object.keys(breed).forEach(b => {\n                // prohibit any type of bulldog named Uga\n                if (b.toLowerCase().indexOf(\"bulldog\") !== -1) {\n                    dispatch({ type: \"errorMessage\", payload: \"BullDog can not be named 'Uga'.\" });\n                    isError = true;\n                }\n            })\n            if (isError) {\n                return false;\n            }\n        }\n        if (!Object.keys(breed).length) {\n            dispatch({ type: \"errorMessage\", payload: \"Please select at least one dog breed.\" });\n            return false;\n        }\n        if (!sex) {\n            dispatch({ type: \"errorMessage\", payload: \"Please indicate dog's sex (or select unknown).\" });\n            return false;\n        }\n        if (!alterationStatus) {\n            dispatch({ type: \"errorMessage\", payload: \"Please indicate dog's alteration status.\" });\n            return false;\n        }\n        if (!dateOfBirth) {\n            dispatch({ type: \"errorMessage\", payload: \"Please enter dog's date of birth.\" });\n            return false;\n        }\n        if (!description) {\n            dispatch({ type: \"errorMessage\", payload: \"Please enter dog description.\" });\n            return false;\n        }\n        if (!surrenderDate) {\n            dispatch({ type: \"errorMessage\", payload: \"Please enter dog's surrender date.\" });\n            return false;\n        }\n        if (!surrenderReason) {\n            dispatch({ type: \"errorMessage\", payload: \"Please enter reason for dog surrender.\" });\n            return false;\n        }\n        if (!surrenderedByAnimalControl) {\n            dispatch({ type: \"errorMessage\", payload: \"Please indicate whether dog was surrendered by Animal Control.\" });\n            return false;\n        }\n        return true;\n    }\n\n    return (\n        <>\n            {detailRedirect && <Redirect to={{ pathname: `/dog-details/${id}`, state: { from: \"/add-dog\" } }} />}\n            {dashboardRedirect && <Redirect to={{ pathname: \"/dog-dashboard\", state: { from: \"/add-dog\" } }} />}\n            <NavLinks isTrustedVolunteer={pageState.cookie.isTrustedVolunteer} />\n            <main className=\"container\">\n                <h1>Add Dog</h1>\n                <div style={{ overflow: showModal ? \"hidden\" : \"scroll\", clear: \"left\" }}>\n                    <h3>All fields are required unless otherwise stated.</h3>\n                    <form>\n                        <div className=\"form-unit\">\n                            <label htmlFor=\"dogName\">Dog Name:</label>\n                            <input type=\"text\"\n                                value={dogName}\n                                id=\"dogName\"\n                                onChange={({ target }) => {\n                                    dispatch({ type: 'dogName', payload: target.value })\n                                }}\n                            />\n                        </div>\n                        <div className=\"form-unit\">\n                            <label htmlFor=\"breed\">Dog Breed: (Please select at least one.)</label>\n                            {availableBreeds.map(({ id, breed: b = \"\" }) => (\n                                <p key={id}>\n                                    <input type=\"checkbox\"\n                                        value={b}\n                                        id={b.split(\" \").join(\"-\")}\n                                        onChange={({ target }) => {\n                                            dispatch({ type: 'breed', payload: { breed: target.value, checked: target.checked } })\n                                        }}\n                                        disabled={(breed[\"Mixed\"] || breed[\"Unknown\"]) && !(b === \"Mixed\" || b === \"Unknown\")}\n                                    /><label htmlFor={b} style={{ display: \"inline\", paddingLeft: \"10px\" }}>{b}</label>\n                                </p>\n                            ))}\n                        </div>\n                        <div className=\"form-unit\">\n                            <label htmlFor=\"sex\">Dog Sex:</label>\n                            <p>\n                                <input type=\"radio\"\n                                    id=\"male\"\n                                    name=\"sex\"\n                                    value=\"male\"\n                                    onChange={({ target }) => {\n                                        dispatch({ type: 'sex', payload: target.value })\n                                    }}\n                                />\n                                <label htmlFor=\"male\" style={{ display: \"inline\" }}>Male</label>\n                            </p>\n                            <p>\n                                <input type=\"radio\"\n                                    id=\"female\"\n                                    name=\"sex\"\n                                    value=\"female\"\n                                    onChange={({ target }) => {\n                                        dispatch({ type: 'sex', payload: target.value })\n                                    }}\n                                />\n                                <label htmlFor=\"female\" style={{ display: \"inline\" }}>Female</label>\n                            </p>\n                            <p>\n                                <input type=\"radio\"\n                                    id=\"unknown\"\n                                    name=\"sex\"\n                                    value=\"unknown\"\n                                    onChange={({ target }) => {\n                                        dispatch({ type: 'sex', payload: target.value })\n                                    }}\n                                />\n                                <label htmlFor=\"unknown\" style={{ display: \"inline\" }}>Unknown</label>\n                            </p>\n\n                        </div>\n                        <div className=\"form-unit\">\n                            <label htmlFor=\"alterationStatus\">Dog Alteration Status:</label>\n                            <p>\n                                <input type=\"radio\"\n                                    id=\"altered\"\n                                    name=\"alterationStatus\"\n                                    value={true}\n                                    onChange={({ target }) => {\n                                        dispatch({ type: 'alterationStatus', payload: target.value })\n                                    }}\n                                />\n                                <label htmlFor=\"altered\" style={{ display: \"inline\" }}>Spayed/Neutered</label>\n                            </p>\n                            <p>\n                                <input type=\"radio\"\n                                    id=\"unaltered\"\n                                    name=\"alterationStatus\"\n                                    value={false}\n                                    onChange={({ target }) => {\n                                        dispatch({ type: 'alterationStatus', payload: target.value })\n                                    }}\n                                />\n                                <label htmlFor=\"unaltered\" style={{ display: \"inline\" }}>Unaltered</label>\n                            </p>\n                        </div>\n                        <div className=\"form-unit\">\n                            <label htmlFor=\"dateOfBirth\">Dog Date of Birth:</label>\n                            <input type=\"date\"\n                                value={dateOfBirth}\n                                id=\"dateOfBirth\"\n                                onChange={({ target }) => {\n                                    dispatch({ type: 'dateOfBirth', payload: target.value })\n                                }}\n                            />\n                        </div>\n                        <div className=\"form-unit\">\n                            <label htmlFor=\"description\">Dog Description:</label>\n                            <textarea value={description}\n                                id=\"description\"\n                                onChange={({ target }) => {\n                                    dispatch({ type: 'description', payload: target.value })\n                                }}\n                            />\n                        </div>\n                        <div className=\"form-unit\">\n                            <label htmlFor=\"microchipId\">Dog Microchip ID: (leave blank if none)</label>\n                            <input type=\"text\"\n                                value={microchipId}\n                                id=\"microchipId\"\n                                onChange={({ target }) => {\n                                    dispatch({ type: 'microchipId', payload: target.value })\n                                }}\n                            />\n                        </div>\n                        <div className=\"form-unit\">\n                            <label htmlFor=\"surrenderDate\">Dog Surrender Date:</label>\n                            <input type=\"date\"\n                                value={surrenderDate}\n                                id=\"surrenderDate\"\n                                onChange={({ target }) => {\n                                    dispatch({ type: 'surrenderDate', payload: target.value })\n                                }}\n                            />\n                        </div>\n                        <div className=\"form-unit\">\n                            <label htmlFor=\"surrenderReason\">Dog Surrender Reason:</label>\n                            <textarea value={surrenderReason}\n                                id=\"surrenderReason\"\n                                onChange={({ target }) => {\n                                    dispatch({ type: 'surrenderReason', payload: target.value })\n                                }}\n                            />\n                        </div>\n                        <div className=\"form-unit\">\n                            <label htmlFor=\"surrenderedByAnimalControl\">Dog Was Surrendered by Animal Control:</label>\n                            <p>\n                                <input type=\"radio\"\n                                    id=\"was\"\n                                    name=\"surrenderedByAnimalControl\"\n                                    value=\"true\"\n                                    onChange={({ target }) => {\n                                        dispatch({ type: 'surrenderedByAnimalControl', payload: target.value })\n                                    }}\n                                />\n                                <label htmlFor=\"was\" style={{ display: \"inline\" }}>Yes</label>\n                            </p>\n                            <p>\n                                <input type=\"radio\"\n                                    id=\"wasNot\"\n                                    name=\"surrenderedByAnimalControl\"\n                                    value=\"false\"\n                                    onChange={({ target }) => {\n                                        dispatch({ type: 'surrenderedByAnimalControl', payload: target.value })\n                                    }}\n                                />\n                                <label htmlFor=\"wasNot\" style={{ display: \"inline\" }}>No</label>\n                            </p>\n                        </div>\n                        <button type=\"button\" onClick={addDog}>Submit</button><span style={{ color: \"red\", paddingLeft: \"10px\" }}>{errorMessage}</span>\n                    </form>\n                    {showModal && (\n                        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\", overflow: \"hidden\" }}>\n                            <div style={{ position: \"fixed\", top: 0, right: 0, bottom: 0, left: 0, zIndex: 10, backgroundColor: \"black\", opacity: 0.5 }}></div>\n                            <div style={{ position: \"fixed\", left: \"50%\", bottom: \"50%\", marginLeft: \"-300px\", marginBottom: \"-150px\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\", zIndex: 100, height: \"300px\", width: \"600px\", backgroundColor: \"white\" }}>\n                                <div style={{ marginBottom: \"20px\" }}>\n                                    <span>Dog successfully created.</span>\n                                </div>\n                                <div style={{ margin: \"20px\" }}>Would you like to go to</div>\n                                <div>\n                                    <button onClick={() => dispatch({ type: \"dogDetail\", payload: id })}>Dog Detail View</button>\n                                    <span style={{ margin: \"20px\" }}> or </span>\n                                    <button onClick={() => dispatch({ type: \"dogDashboard\" })}>Back to Dog Dashboard</button>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </main>\n        </>\n    );\n}\n\nexport default AddDog;","import React, { useEffect, useState } from \"react\";\n\nimport { getData } from \"../services/api\";\nimport { isLoggedIn } from \"../services/auth\";\nimport { NavLinks } from \"../components\";\n\nconst AnimalControlReport = () => {\n\n    const [state, setState] = useState({\n        data: [],\n        errorMessage: \"\",\n        cookie: {}\n    });\n\n    // check auth\n    useEffect(() => {\n        const cookie = isLoggedIn();\n        if (cookie.hasOwnProperty(\"isTrustedVolunteer\") && cookie.isTrustedVolunteer) {\n            setState({ ...state, cookie });\n        }\n        /* eslint-disable react-hooks/exhaustive-deps */\n    }, []);\n\n    useEffect(() => {\n        if (state.cookie.hasOwnProperty(\"isTrustedVolunteer\") && state.cookie.isTrustedVolunteer) {\n            getData(\"/animal-control-report\")\n                .then(({ target }) => {\n                    if (target.status === 200) {\n                        setState({ ...state, data: JSON.parse(target.response) });\n                    } else {\n                        setState({ ...state, errorMessage: target.response });\n                    }\n                })\n                .catch(error => {\n                    console.log(error);\n                    setState({ ...state, errorMessage: JSON.stringify(error) });\n                })\n        }\n    }, [state.cookie]);\n    return (\n        <>\n            <NavLinks isTrustedVolunteer={state.cookie.isTrustedVolunteer} />\n            <h1>Animal Control Report</h1>\n            <table>\n                <thead>\n                    <td>Month</td>\n                    <td>Year</td>\n                    <td>Total Dogs Count</td>\n                    <td>Dogs 60 Days Count</td>\n                    <td>Expenses</td>\n                </thead>\n                <tbody>\n                    {state.data.length && (\n                        state.data.map(datum => {\n                            return (\n                                <tr>\n                                    <td>{datum.month}</td>\n                                    <td>{datum.year}</td>\n                                    <td>{datum.dogsTotalCount}</td>\n                                    <td>{datum.dogsSixtyDaysCount}</td>\n                                    <td>{datum.expenses}</td>\n                                </tr>\n                            )\n                        })\n                    )}\n                </tbody>\n            </table>\n\n            {\n                state.errorMessage && (\n                    <div styles={{ color: \"red\" }}>{state.errorMessage}</div>\n                )\n            }\n        </>\n    );\n}\n\nexport default AnimalControlReport;","import React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { getData } from \"../services/api\";\nimport { isLoggedIn } from \"../services/auth\";\nimport { NavLinks } from \"../components\";\n\nconst DogDashboard = () => {\n\n    const CAPACITY = 15;\n    const [state, setState] = useState({\n        dogs: [],\n        addDogRedirect: false,\n        addApplicationRedirect: false,\n        showAvailable: true,\n        showUnavailable: true,\n        dogDetailRedirect: \"\",\n        loginRedirect: false,\n        cookie: {}\n    });\n\n    // check auth\n    useEffect(() => {\n        const cookie = isLoggedIn();\n        if (cookie.hasOwnProperty(\"isTrustedVolunteer\") && cookie.isTrustedVolunteer !== null) {\n            setState({ ...state, cookie });\n        }\n        /* eslint-disable react-hooks/exhaustive-deps */\n    }, []);\n\n    const setShowAvailable = () => {\n        setState({ ...state, showAvailable: !state.showAvailable });\n    }\n\n    const setShowUnavailable = () => {\n        setState({ ...state, showUnavailable: !state.showUnavailable });\n    }\n\n    // get data for dogs currently in the shelter\n    useEffect(() => {\n        if (state.cookie.hasOwnProperty(\"isTrustedVolunteer\") && state.cookie.isTrustedVolunteer !== null) {\n            getData(\"/dog?current=true\")\n                .then(({ target }) => {\n                    setState({ ...state, dogs: JSON.parse(target.response) });\n                })\n                .catch(error => {\n                    console.log(error);\n                })\n        }\n    }, [state.cookie]);\n\n    const addApplication = () => {\n        setState({ ...state, addApplicationRedirect: true });\n    }\n\n    const addDog = () => {\n        setState({ ...state, addDogRedirect: true });\n    }\n\n    const {\n        addApplicationRedirect,\n        addDogRedirect,\n        dogs,\n        showAvailable,\n        showUnavailable,\n        dogDetailRedirect,\n        cookie\n    } = state;\n\n    return (\n        <>\n            {addApplicationRedirect && <Redirect to={{ pathname: \"/add-application\", state: { from: \"/dog-dashboard\" } }} />}\n            {addDogRedirect && <Redirect to={{ pathname: \"/add-dog\", state: { from: \"/dog-dashboard\" } }} />}\n            {dogDetailRedirect && <Redirect to={{ pathname: dogDetailRedirect, state: { from: \"/dog-dashboard\" } }} />}\n\n            <NavLinks isTrustedVolunteer={cookie.isTrustedVolunteer} />\n            <main className=\"container\">\n                <h1>Dog Dashboard</h1>\n\n                <ControlPanel\n                    addApplication={addApplication}\n                    addDog={addDog}\n                    availableSpaces={CAPACITY - dogs.length}\n                    showAvailable={showAvailable}\n                    setShowAvailable={setShowAvailable}\n                    showUnavailable={showUnavailable}\n                    setShowUnavailable={setShowUnavailable}\n                />\n                {\n                    dogs.length ? (\n                        <table>\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th>Breed</th>\n                                    <th>Sex</th>\n                                    <th>Alteration Status</th>\n                                    <th>Age</th>\n                                    <th>Adoptability Status</th>\n                                    <th>Date Surrendered</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {dogs.map((dog, index) => {\n                                    const ONE_DAY = 1000 * 60 * 60 * 24;\n                                    const now = Date.now();\n                                    const then = Date.parse(dog.dateOfBirth);\n                                    const years = Math.floor((now - then) / (ONE_DAY * 365));\n                                    const yearsStr = `${years}${!years || years > 1 ? \" years \" : \" year \"}`;\n                                    const months = Math.floor((now - then) / (ONE_DAY * 30)) % 12;\n                                    const monthsStr = `${months}${!months || months > 1 ? \" months\" : \" month\"}`;\n                                    const isAvailable = dog.microchipId.String && dog.alterationStatus;\n                                    if ((isAvailable && showAvailable) || (!isAvailable && showUnavailable)) {\n                                        return (\n                                            <tr key={index} onClick={() => setState({ ...state, dogDetailRedirect: `/dog-details/${dog.id}` })}>\n                                                <td>{dog.name}</td>\n                                                <td>{dog.breed.join(\"/\")}</td>\n                                                <td>{dog.sex}</td>\n                                                <td>{dog.alterationStatus ? \"Altered\" : \"Not yet altered\"}</td>\n                                                <td>{yearsStr}{monthsStr}</td>\n                                                <td>{isAvailable ? \"Available\" : \"Not yet available\"}</td>\n                                                <td>{(new Date(dog.surrenderDate)).toDateString()}</td>\n                                            </tr>\n                                        );\n                                    }\n                                    return null;\n                                })}\n                            </tbody>\n\n                        </table>\n                    ) : (<h3>There are not any dogs currently in the shelter.</h3>)\n                }\n            </main>\n        </>\n    );\n};\n\nconst ControlPanel = ({\n    addApplication,\n    addDog,\n    availableSpaces,\n    showAvailable,\n    setShowAvailable,\n    showUnavailable,\n    setShowUnavailable,\n    logout\n}) => {\n    return (\n        <div className=\"control-panel\">\n            <h3>Currently Available Spaces: {availableSpaces}</h3>\n            <div>\n                <p>\n                    <input\n                        type=\"checkbox\"\n                        checked={showAvailable}\n                        id=\"showAvailable\"\n                        onChange={setShowAvailable}\n                    />\n                    <label\n                        htmlFor=\"showAvailable\"\n                        style={{ paddingLeft: \"10px\" }}\n                    >Show dogs available for adoption</label>\n                </p>\n                <p>\n                    <input\n                        type=\"checkbox\"\n                        checked={showUnavailable}\n                        id=\"showUnavailable\"\n                        onChange={setShowUnavailable}\n                    />\n                    <label\n                        htmlFor=\"showUnavailable\"\n                        style={{ paddingLeft: \"10px\" }}\n                    >Show dogs NOT available for adoption</label>\n                </p>\n            </div>\n            <div>\n                <p>\n                    {availableSpaces && <button onClick={addDog}>Add Dog</button>}\n                </p>\n                <p>\n                    <button onClick={addApplication}>Add Adoption Application</button>\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport default DogDashboard;","import React, { useEffect, useReducer, useState } from \"react\";\nimport { useParams, Redirect } from \"react-router-dom\";\n\nimport { getData, sendData } from \"../services/api\";\nimport { isLoggedIn } from \"../services/auth\";\nimport { NavLinks } from \"../components\";\n\nconst DogDetails = () => {\n\n    const [pageState, setPageState] = useState({\n        loginRedirect: false,\n        cookie: {}\n    });\n\n    // check auth\n    useEffect(() => {\n        const cookie = isLoggedIn();\n        if (cookie.hasOwnProperty(\"isTrustedVolunteer\") && cookie.isTrustedVolunteer !== null) {\n            setPageState({ ...pageState, cookie });\n        }\n        /* eslint-disable react-hooks/exhaustive-deps */\n    }, []);\n\n    const { dogId } = useParams();\n\n    const reducer = (state, action) => {\n        switch (action.type) {\n            case \"setDog\":\n                return { ...state, ...action.payload };\n            case \"sex\":\n                return { ...state, sex: action.payload };\n            case \"alterationStatus\":\n                return { ...state, alterationStatus: action.payload === \"true\" };\n            case \"microchipId\":\n                return { ...state, microchipId: action.payload };\n            case \"expenses\":\n                return { ...state, expenses: action.payload };\n            case \"availableBreeds\":\n                return { ...state, availableBreeds: action.payload };\n            case \"errorMessage\":\n                return { ...state, errorMessage: action.payload };\n            case \"showModal\":\n                return { ...state, id: action.payload, showModal: true };\n            case \"dogDashboard\":\n                return { ...state, dashboardRedirect: true };\n            case \"breed\":\n                const newBreed = (() => {\n                    if (action.payload.checked) {\n                        if (action.payload.value === \"Mixed\" || action.payload.value === \"Unknown\") {\n                            const falseBreeds = Object.keys(state.breed).reduce((breeds, breed) => {\n                                breeds[breed] = false;\n                                return breeds;\n                            }, {});\n                            return { ...falseBreeds, [action.payload.value]: true };\n                        } else {\n                            return { ...state.breed, [action.payload.value]: true };\n                        }\n                    } else {\n                        return { ...state.breed, [action.payload.value]: false }\n                    }\n                })();\n                return { ...state, breed: newBreed };\n            case \"canEditBreeds\":\n                return { ...state, canEditBreeds: true };\n            case \"canEditSex\":\n                return { ...state, canEditSex: true };\n            case \"canEditAlterationStatus\":\n                return { ...state, canEditAlterationStatus: true };\n            case \"canEditMicrochipId\":\n                return { ...state, canEditMicrochipId: true };\n            case \"showAddExpenseForm\":\n                return { ...state, showAddExpenseForm: action.payload };\n            case \"newExpenseVendor\":\n                return { ...state, newExpense: { ...(state.newExpense), vendor: action.payload } };\n            case \"newExpenseDate\":\n                return { ...state, newExpense: { ...(state.newExpense), date: action.payload } };\n            case \"newExpenseAmount\":\n                if (typeof +action.payload !== \"number\" || +action.payload < 0) {\n                    return { ...state, expenseErrorMessage: \"Please enter a valid numeric amount.\" }\n                } else {\n                    if (state.expenseErrorMessage === \"Please enter a valid numeric amount.\") {\n                        return { ...state, expenseErrorMessage: \"\" }\n                    }\n                }\n                return { ...state, newExpense: { ...(state.newExpense), amountInCents: Math.floor(+action.payload * 100) } };\n            case \"newExpenseDescription\":\n                return { ...state, newExpense: { ...(state.newExpense), description: action.payload } };\n            case \"resetNewExpense\":\n                return { ...state, newExpense: { dogIdFk: +dogId } };\n            case \"addExpense\":\n                return { ...state, expenses: [...(state.expenses), action.payload] };\n            case \"expenseErrorMessage\":\n                return { ...state, expenseErrorMessage: action.payload }\n            case \"addAdoptionRedirect\":\n                return { ...state, addAdoptionRedirect: true };\n            case \"isAdoptable\":\n                return { ...state, isAdoptable: true };\n            default:\n                throw new Error();\n        }\n    };\n\n    const [dog, dispatch] = useReducer(\n        reducer,\n        {\n            name: \"\",\n            breed: {},\n            sex: null,\n            alterationStatus: null,\n            dateOfBirth: \"\",\n            description: \"\",\n            microchipId: \"\",\n            surrenderDate: \"\",\n            surrenderReason: \"\",\n            surrenderedByAnimalControl: null,\n            volunteerId: -1,\n            expenses: [],\n            errorMessage: \"\",\n            showModal: false,\n            canEditBreeds: false,\n            canEditSex: false,\n            canEditAlterationStatus: false,\n            canEditMicrochipId: false,\n            showAddExpenseForm: false,\n            newExpense: { dogIdFk: +dogId },\n            expenseErrorMessage: \"\",\n            addAdoptionRedirect: false,\n            isAdoptable: false\n        });\n\n    useEffect(() => {\n        if (pageState.cookie.hasOwnProperty(\"isTrustedVolunteer\") && pageState.cookie.isTrustedVolunteer !== null) {\n            const breedsObj = {};\n            getData(\"/breed\")\n                .then(({ target }) => {\n                    JSON.parse(target.response).forEach(breed => {\n                        breedsObj[breed.breed] = false;\n                    });\n                }).then(() => {\n                    getData(`/dog/${dogId}`)\n                        .then(({ target }) => {\n                            const dog = JSON.parse(target.response);\n                            dog.breed.forEach(breed => {\n                                breedsObj[breed] = true;\n                            });\n                            dog.breed = breedsObj;\n\n                            // derive permissions\n                            if (dog.breed[\"Unknown\"] || dog.breed[\"Mixed\"]) {\n                                dispatch({ type: \"canEditBreeds\" });\n                            }\n                            if (dog.sex === \"unknown\") {\n                                dispatch({ type: \"canEditSex\" });\n                            }\n                            if (!dog.alterationStatus) {\n                                dispatch({ type: \"canEditAlterationStatus\" });\n                            }\n                            dog.microchipId = dog.microchipId.String;\n                            if (!dog.microchipId) {\n                                dispatch({ type: \"canEditMicrochipId\" });\n                            }\n\n                            if (dog.microchipId && dog.alterationStatus) {\n                                dispatch({ type: \"isAdoptable\" });\n                            }\n\n                            // set dog\n                            dispatch({ type: \"setDog\", payload: dog });\n                        })\n                })\n                .catch(error => {\n                    dispatch({ type: \"errorMessage\", payload: error });\n                    console.log(\"error calling the API:\", error);\n                })\n        }\n    }, [dogId, pageState.cookie]);\n\n    const updateDog = () => {\n        const dogData = {\n            breed: Object.keys(dog.breed).filter(breed => {\n                return dog.breed[breed];\n            }),\n            sex: dog.sex,\n            alterationStatus: dog.alterationStatus\n        };\n        dogData.microchipId = { \"String\": dog.microchipId, \"Valid\": dog.microchipId.length ? true : false };\n        if (!Object.keys(dog.breed).length) {\n            dispatch({ type: \"errorMessage\", payload: \"Please select at least one dog breed.\" });\n            return;\n        }\n        sendData(dogData, `/dog/${dogId}`, \"put\")\n            .then(({ target }) => {\n                if (target.status === 204) {\n                    // show success modal\n                    /* eslint-disable no-restricted-globals */\n                    location.reload();\n                } else {\n                    console.log(\"error adding dog (non-200):\", target.response);\n                    dispatch({ type: \"errorMessage\", payload: target.response });\n                }\n            })\n            .catch(error => {\n                // show error modal\n                console.log(\"error adding dog (catch):\", error);\n                dispatch({ type: \"errorMessage\", payload: JSON.parse(error) });\n            });\n    }\n\n    const addExpense = () => {\n        sendData(dog.newExpense, `/expense`)\n            .then(({ target }) => {\n                if (target.status === 201) {\n                    dispatch({ type: \"resetNewExpense\" });\n                    dispatch({ type: \"showAddExpenseForm\", payload: false });\n                    dispatch({ type: \"addExpense\", payload: JSON.parse(target.response) });\n                    dispatch({ type: \"expenseErrorMessage\", payload: \"\" });\n                } else {\n                    console.log(target.response);\n                    dispatch({ type: \"expenseErrorMessage\", payload: target.response });\n                }\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch({ type: \"expenseErrorMessage\", payload: error });\n            });\n    }\n\n    const Checkbox = ({ breed }) => {\n        return (\n            <p key={breed}>\n                <input\n                    type=\"checkbox\"\n                    value={breed}\n                    name={breed.split(\" \").join(\"-\")}\n                    checked={dog.breed[breed]}\n                    onChange={({ target }) => {\n                        dispatch({ type: 'breed', payload: target })\n                    }}\n                    disabled={(dog.breed[\"Mixed\"] || dog.breed[\"Unknown\"]) && !(breed === \"Mixed\" || breed === \"Unknown\")}\n                /><label htmlFor={breed} style={{ display: \"inline\", paddingLeft: \"10px\" }}>{breed}</label>\n            </p>\n        )\n    }\n\n    return (\n        <>\n            {dog.dashboardRedirect && <Redirect to={{ pathname: `/dog-dashboard` }} />}\n            {dog.addAdoptionRedirect && <Redirect to={{ pathname: `/add-adoption`, state: { dog } }} />}\n            <NavLinks isTrustedVolunteer={pageState.cookie.isTrustedVolunteer} />\n            <main className=\"container\">\n                <h1>Dog Details</h1>\n                <button type=\"button\" onClick={() => dispatch({ type: \"dogDashboard\" })}>Back to Dog Dashboard</button>\n                {dog.isAdoptable && pageState.cookie.isTrustedVolunteer &&\n                    <button type=\"button\" onClick={() => dispatch({ type: \"addAdoptionRedirect\" })}>Add Adoption</button>}\n                <form>\n                    <div className=\"form-unit\">\n                        <span>Name: {dog.name}</span>\n                    </div>\n                    {dog.canEditBreeds ? (\n                        <div className=\"form-unit\">\n                            <label htmlFor=\"breed\">Dog Breed: (Please select at least one.)</label>\n                            {Object.keys(dog.breed).map(b => {\n                                return <Checkbox breed={b} key={b} />\n                            })}\n                        </div>\n                    ) : (\n                            <div className=\"form-unit\">\n                                <span>Breed: {Object.keys(dog.breed).filter(breed => {\n                                    return dog.breed[breed];\n                                }).join(\"/\")}</span>\n                            </div>\n                        )}\n                    <div className=\"form-unit\">\n                        {dog.canEditSex ? (\n                            <>\n                                <label htmlFor=\"sex\">Dog Sex:</label>\n                                <p>\n                                    <input type=\"radio\"\n                                        id=\"male\"\n                                        name=\"sex\"\n                                        value=\"male\"\n                                        onChange={({ target }) => {\n                                            dispatch({ type: \"sex\", payload: target.value })\n                                        }}\n                                        checked={dog.sex === \"male\"}\n                                    />\n                                    <label htmlFor=\"male\" style={{ display: \"inline\" }}>Male</label>\n                                </p>\n                                <p>\n                                    <input type=\"radio\"\n                                        id=\"female\"\n                                        name=\"sex\"\n                                        value=\"female\"\n                                        onChange={({ target }) => {\n                                            dispatch({ type: \"sex\", payload: target.value })\n                                        }}\n                                        checked={dog.sex === \"female\"}\n                                    />\n                                    <label htmlFor=\"female\" style={{ display: \"inline\" }}>Female</label>\n                                </p>\n                                <p>\n                                    <input type=\"radio\"\n                                        id=\"unknown\"\n                                        name=\"sex\"\n                                        value=\"unknown\"\n                                        onChange={({ target }) => {\n                                            dispatch({ type: 'sex', payload: target.value })\n                                        }}\n                                        checked={dog.sex === \"unknown\"}\n                                    />\n                                    <label htmlFor=\"unknown\" style={{ display: \"inline\" }}>Unknown</label>\n                                </p>\n                            </>\n                        ) : (\n                                <span>Sex: {dog.sex}</span>\n                            )}\n                    </div>\n                    <div className=\"form-unit\">\n                        {dog.canEditAlterationStatus ? (\n                            <>\n                                <label htmlFor=\"alterationStatus\">Dog Alteration Status:</label>\n                                <p>\n                                    <input type=\"radio\"\n                                        id=\"altered\"\n                                        name=\"alterationStatus\"\n                                        value={true}\n                                        onChange={({ target }) => {\n                                            dispatch({ type: 'alterationStatus', payload: target.value })\n                                        }}\n                                        checked={dog.alterationStatus}\n                                    />\n                                    <label htmlFor=\"altered\" style={{ display: \"inline\" }}>Spayed/Neutered</label>\n                                </p>\n                                <p>\n                                    <input type=\"radio\"\n                                        id=\"unaltered\"\n                                        name=\"alterationStatus\"\n                                        value={false}\n                                        onChange={({ target }) => {\n                                            dispatch({ type: 'alterationStatus', payload: target.value })\n                                        }}\n                                        checked={!dog.alterationStatus}\n                                    />\n                                    <label htmlFor=\"unaltered\" style={{ display: \"inline\" }}>Unaltered</label>\n                                </p>\n                            </>\n                        ) : (\n                                <span>Alteration Status: {dog.alterationStatus ? \"Spayed/Neutered\" : \"Unaltered\"}</span>\n                            )}\n                    </div>\n                    <div className=\"form-unit\">\n                        <span>Date of Birth: {new Date(dog.dateOfBirth).toDateString()}</span>\n                    </div>\n                    <div className=\"form-unit\">\n                        <span>Description: {dog.description}</span>\n                    </div>\n                    <div className=\"form-unit\">\n                        {dog.canEditMicrochipId ? (\n                            <>\n                                <label>Microchip ID:</label>\n                                <input\n                                    type=\"text\"\n                                    onChange={({ target }) => {\n                                        dispatch({ type: \"microchipId\", payload: target.value })\n                                    }} />\n                            </>\n                        ) : (\n                                <span>Microchip ID: {dog.microchipId}</span>\n                            )}\n                    </div>\n                    <div className=\"form-unit\">\n                        <span>Surrender Date: {new Date(dog.surrenderDate).toDateString()}</span>\n                    </div>\n                    <div className=\"form-unit\">\n                        <span>Surrender Reason: {dog.surrenderReason}</span>\n                    </div>\n                    <div className=\"form-unit\">\n                        <span>Surrender was by Animal Control: {dog.surrenderedByAnimalControl ? \"Yes\" : \"No\"}</span>\n                    </div>\n                    <div className=\"form-unit\">\n                        <span>Surrender recorded by volunteer {dog.volunteerId}</span>\n                    </div>\n                    {(\n                        dog.canEditBreeds || dog.canEditSex ||\n                        dog.canEditAlterationStatus || dog.canEditMicrochipId\n                    ) && (\n                            <>\n                                <button type=\"button\" onClick={updateDog}>Update Dog</button>\n                                <span style={{ color: \"red\", paddingLeft: \"10px\" }}>{dog.errorMessage}</span>\n                            </>\n                        )}\n                </form>\n                <button type=\"button\" onClick={() => dispatch({ type: \"dogDashboard\" })}> Back to Dog Dashboard</button >\n                <hr></hr>\n                <h1>Expenses</h1>\n                <h3>Dog Total : ${dog.expenses.reduce((totalExpense, currentExpense) => totalExpense += currentExpense.amountInCents / 100, 0)}</h3>\n                {dog.showAddExpenseForm ? (\n                    <div>\n                        <h3>New Expense</h3>\n                        <form>\n                            <div className=\"form-unit\">\n                                <label id=\"expense-date\">Date</label>\n                                <input\n                                    type=\"date\"\n                                    onChange={\n                                        ({ target }) => dispatch({ type: \"newExpenseDate\", payload: target.value })\n                                    } />\n                            </div>\n                            <div className=\"form-unit\">\n                                <label id=\"expense-vendor\">Vendor</label>\n                                <input\n                                    type=\"text\"\n                                    onChange={\n                                        ({ target }) => dispatch({ type: \"newExpenseVendor\", payload: target.value })\n                                    } />\n                            </div>\n                            <div className=\"form-unit\">\n                                <label id=\"expense-amount\">Amount (in dollars)</label>\n                            $<input\n                                    type=\"number\"\n                                    step={0.01}\n                                    min={0}\n                                    onChange={({ target }) => {\n                                        if (typeof +target.value === \"number\") {\n                                            dispatch({ type: \"newExpenseAmount\", payload: target.value });\n                                        }\n                                    }\n                                    } />\n                            </div>\n                            <div className=\"form-unit\">\n                                <label id=\"expense-description\">Description</label>\n                                <input\n                                    type=\"text\"\n                                    onChange={\n                                        ({ target }) => dispatch({ type: \"newExpenseDescription\", payload: target.value })\n                                    } />\n                            </div>\n                            <button type=\"button\" onClick={addExpense}>Submit Expense</button>\n                            {dog.expenseErrorMessage && <span style={{ color: \"red\", paddingLeft: \"10px\" }}>{dog.expenseErrorMessage}</span>}\n                        </form>\n                    </div>\n                ) : (\n                        <>\n                            <button type=\"button\" onClick={() => dispatch({ type: \"showAddExpenseForm\", payload: true })}>Add New Expense</button>\n                            {dog.expenseErrorMessage && <span style={{ color: \"red\", paddingLeft: \"10px\" }}>{dog.expenseErrorMessage}</span>}\n                        </>\n                    )}\n\n                {\n                    dog.expenses.length ? (\n                        dog.expenses.map((expense, index) => (\n                            <div key={index} className=\"form-unit\">\n                                <div>\n                                    <span>Date: {new Date(expense.date).toDateString()}</span>\n                                </div>\n                                <div>\n                                    <span>Vendor: {expense.vendor}</span>\n                                </div>\n                                <div>\n                                    <span>Description: {expense.description}</span>\n                                </div>\n                                <div>\n                                    <span>Cost: ${expense.amountInCents / 100}</span>\n                                </div>\n                            </div>\n                        ))\n                    ) : (<div>No expenses entered yet.</div>)\n                }\n            </main>\n        </>\n    );\n}\n\nexport default DogDetails;","import React, { useEffect, useState } from \"react\";\n\nimport { getData } from \"../services/api\";\nimport { isLoggedIn } from \"../services/auth\";\nimport { NavLinks } from \"../components\";\n\nconst ExpenseAnalysis = () => {\n\n    const [state, setState] = useState({\n        data: [],\n        errorMessage: \"\",\n        loginRedirect: false,\n        cookie: {}\n    });\n\n    // check auth\n    useEffect(() => {\n        const cookie = isLoggedIn();\n        if (cookie.hasOwnProperty(\"isTrustedVolunteer\") && cookie.isTrustedVolunteer) {\n            setState({ ...state, cookie });\n        }\n        /* eslint-disable react-hooks/exhaustive-deps */\n    }, []);\n\n    useEffect(() => {\n        if (state.cookie.hasOwnProperty(\"isTrustedVolunteer\") && state.cookie.isTrustedVolunteer) {\n            getData(\"/expense-analysis\")\n                .then(({ target }) => {\n                    if (target.status === 200) {\n                        setState({ ...state, data: JSON.parse(target.response) });\n                    } else {\n                        setState({ ...state, errorMessage: target.response });\n                    }\n                })\n                .catch(error => {\n                    console.log(error);\n                    setState({ ...state, errorMessage: JSON.stringify(error) });\n                })\n        }\n    }, [state.cookie]);\n    return (\n        <>\n            <NavLinks isTrustedVolunteer={state.cookie.isTrustedVolunteer} />\n            <h1>Expense Analysis</h1>\n            {\n\n                state.data.length ?\n                    // && (return <div className=\"form-unit\">{JSON.stringify(datum)}</div>\n\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Vendor </th>\n                                <th>Total Spending in dollars</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                state.data.map((data, index) => {\n                                    return (<tr>\n                                        <th>\n                                            {data.vendor}\n                                        </th>\n                                        <th>\n                                            {data.totalSpending / 100}\n                                        </th>\n                                    </tr>)\n                                })\n                            }\n                        </tbody>\n                    </table>\n\n                    :\n                    <p>No expenses found</p>\n\n            }\n\n            {\n                state.errorMessage && (\n                    <div styles={{ color: \"red\" }}>{state.errorMessage}</div>\n                )}\n\n        </>\n    );\n}\n\nexport default ExpenseAnalysis;","import React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { getData, sendData } from \"../services/api\";\nimport { NavLinks } from \"../components\";\n\nconst Login = () => {\n    const [state, setState] = useState({\n        email: \"\",\n        password: \"\",\n        errorMessage: \"\",\n        redirect: false\n    });\n\n    useEffect(() => {\n        getData(\"/logout\")\n            .then(data => {\n                setState({ ...state, loginRedirect: true });\n            })\n            .catch(error => {\n                console.log(error);\n            })\n        /* eslint-disable react-hooks/exhaustive-deps */\n    }, [])\n\n    const handleEmailChange = ({ target }) => {\n        setState({ ...state, email: target.value });\n    }\n\n    const handlePasswordChange = ({ target }) => {\n        setState({ ...state, password: target.value });\n    }\n\n    const submitForm = form => {\n        const { email, password } = state;\n\n        if (password && email.indexOf(\"@\") !== 0 && email.length > 4) {\n            sendData({ email, password }, \"/login\")\n                .then(data => {\n                    const { target } = data;\n                    if (target.status === 200) {\n                        // redirect to Dog Dashboard\n                        const volunteer = JSON.parse(target.response);\n                        localStorage.setItem(\"volunteerId\", volunteer.id);\n                        localStorage.setItem(\"isTrusted\", volunteer.isTrusted);\n                        setState({ ...state, redirect: true });\n                    } else {\n                        setState({ ...state, errorMessage: target.response })\n                    }\n                })\n                .catch(error => {\n                    setState({ ...state, errorMessage: error })\n                });\n        } else {\n            if (!password) {\n                setState({ ...state, errorMessage: \"Please enter valid password.\" })\n            } else {\n                setState({ ...state, errorMessage: \"Please enter valid email address.\" })\n            }\n        }\n    }\n    return (\n        <>\n            <NavLinks titleOnly={true} />\n            <main className=\"container\">\n                <h1>Login</h1>\n\n                <form action=\"/login\" method=\"post\">\n\n                    <div className=\"form-unit\">\n                        <label htmlFor=\"email\">Email:</label>\n                        <input type=\"email\" id=\"email\" name=\"email\" onChange={handleEmailChange} value={state.email} autoComplete=\"username\" />\n                    </div>\n\n                    <div className=\"form-unit\">\n                        <label htmlFor=\"password\">Password:</label>\n                        <input type=\"password\" id=\"password\" name=\"password\" onChange={handlePasswordChange} value={state.password} autoComplete=\"current-password\" />\n                    </div>\n\n                    <button type=\"button\" onClick={submitForm}>Log In</button>\n\n                </form>\n                {state.errorMessage && <div style={{ color: \"red\" }}>{state.errorMessage}</div>}\n                {state.redirect && <Redirect to={{ pathname: \"/dog-dashboard\", state: { from: \"/login\" } }} />}\n            </main>\n        </>\n    );\n};\n\nexport default Login;","import React, { useEffect, useState } from \"react\";\n\nimport { getData } from \"../services/api\";\nimport { isLoggedIn } from \"../services/auth\";\nimport { NavLinks } from \"../components\";\n\nfunction getMonthName(monthNum) {\n    switch (monthNum) {\n        case 0: return \"January\"\n        case 1: return \"February\"\n        case 2: return \"March\"\n        case 3: return \"April\"\n        case 4: return \"May\"\n        case 5: return \"June\"\n        case 6: return \"July\"\n        case 7: return \"August\"\n        case 8: return \"September\"\n        case 9: return \"October\"\n        case 10: return \"November\"\n        case 11: return \"December\"\n\n        default: return \"month\"\n\n    }\n}\n\nfunction GetMonthOffset(offset) {\n    let today = new Date()\n    today.setMonth(today.getMonth() + offset)\n\n    return getMonthName(today.getMonth()) + \" \" + today.getFullYear()\n}\n\nconst MonthlyAdoptionReport = () => {\n\n    const [state, setState] = useState({\n        data: {},\n        errorMessage: \"\",\n        loginRedirect: false,\n        cookie: {}\n    });\n\n    // check auth\n    useEffect(() => {\n        const cookie = isLoggedIn();\n        if (cookie.hasOwnProperty(\"isTrustedVolunteer\") && cookie.isTrustedVolunteer) {\n            setState({ ...state, cookie });\n        }\n        /* eslint-disable react-hooks/exhaustive-deps */\n    }, []);\n\n    useEffect(() => {\n        for (let i = -11; i <= 0; i++) {\n            UpdateTables(i)\n        }\n\n    }, [state.cookie]);\n\n    function UpdateTables(ind) {\n\n        if (state.cookie.hasOwnProperty(\"isTrustedVolunteer\") && state.cookie.isTrustedVolunteer) {\n            getData(\"/monthly-adoption-report?month=\" + ind)\n                .then(({ target }) => {\n                    if (target.status === 200) {\n\n                        const dataDict = state.data\n                        dataDict[ind] = JSON.parse(target.response)\n\n                        setState({ ...state, data: dataDict });\n\n                    } else {\n                        setState({ ...state, errorMessage: target.response });\n                    }\n                })\n                .catch(error => {\n                    console.log(error);\n                    setState({ ...state, errorMessage: JSON.stringify(error) });\n                })\n        }\n    }\n\n    function getTableValues() {\n        var indices = [];\n        var i = 0;\n        for (i = -11; i <= 0; i++) {\n            indices.push(i);\n        }\n\n        return (\n            indices.map(indx => {\n                if (indx in state.data) {\n\n\n                    return (\n                        <>\n                            <tr>\n\n                                <td>\n                                    <h3>{GetMonthOffset(indx)}</h3></td>\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                            </tr>\n                            {state.data[indx].map(datum => {\n                                const expenseCents = (() => {\n                                    const cents = Math.round(datum.Expenses.Float64 % 100);\n                                    return cents < 10 ? \"0\" + cents : cents;\n                                })();\n                                const expenseDollars = Math.floor(datum.Expenses.Float64 / 100);\n\n                                const adoptionFeeCents = (() => {\n                                    const cents = Math.round(datum.AdoptionFees.Float64 % 100);\n                                    return cents < 10 ? \"0\" + cents : cents;\n                                })();\n                                const adoptionFeeDollars = Math.floor(datum.AdoptionFees.Float64 / 100);\n\n                                const profitCents = (() => {\n                                    const cents = Math.round(datum.Profit.Float64 % 100);\n                                    return cents < 10 ? \"0\" + cents : cents;\n                                })();\n                                const profitDollars = Math.floor(datum.Profit.Float64 / 100);\n\n                                return (\n                                    <tr>\n                                    <td></td>\n                                        <td>{datum.breed}</td>\n                                        <td>{datum.SurrenderCount.Float64}</td>\n                                        <td>{datum.AdoptionCount.Float64}</td>\n                                        <td>${expenseDollars}.{expenseCents}</td>\n                                        <td>${adoptionFeeDollars}.{adoptionFeeCents}</td>\n                                        <td>${profitDollars}.{profitCents}</td>\n                                    </tr>\n                                )\n                            }\n                            )}\n                        </>\n\n                    )\n\n                }\n            }\n\n            )\n\n        )\n    }\n\n    return (\n        <>\n            <NavLinks isTrustedVolunteer={state.cookie.isTrustedVolunteer} />\n            <main className=\"container\">\n                <h1>Monthly Adoption Report</h1>\n                <table>\n                    <thead>\n                        <td>Month</td>\n                        <td>Breed</td>\n                        <td>Surrender Count</td>\n                        <td>Adoption Count</td>\n                        <td>Expenses</td>\n                        <td>Adoption Fees</td>\n                        <td>Profit</td>\n                    </thead>\n                    <tbody>\n                        {\n                            getTableValues()\n                        }\n                    </tbody>\n                </table>\n\n                {state.errorMessage && (\n                    <div styles={{ color: \"red\" }}>{state.errorMessage}</div>\n                )}\n            </main>\n        </>\n    );\n}\n\nexport default MonthlyAdoptionReport;\n\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { isLoggedIn } from \"../services/auth\";\nimport { NavLinks } from \"../components\";\n\nconst Reports = () => {\n    const [state, setState] = useState({\n        cookie: {}\n    });\n\n    // check auth\n    useEffect(() => {\n        const cookie = isLoggedIn();\n        if (cookie.hasOwnProperty(\"isTrustedVolunteer\") && cookie.isTrustedVolunteer) {\n            setState({ ...state, cookie });\n        }\n        /* eslint-disable react-hooks/exhaustive-deps */\n    }, []);\n\n    return (\n        <>\n            <NavLinks isTrustedVolunteer={state.cookie.isTrustedVolunteer} />\n            <main className=\"container\">\n                <h1>Reports</h1>\n                <div className=\"interior-block\">\n                    <div className=\"form-unit\">\n                        <Link to=\"/monthly-adoption-report\">Monthly Adoption Report</Link>\n                    </div>\n                    <div className=\"form-unit\">\n                        <Link to=\"/animal-control-report\">Animal Control Report</Link>\n                    </div>\n                    <div className=\"form-unit\">\n                        <Link to=\"/expense-analysis\">Expense Analysis</Link>\n                    </div>\n                    <div className=\"form-unit\">\n                        <Link to=\"/volunteer-lookup\">Volunteer Lookup</Link>\n                    </div>\n                </div>\n            </main>\n        </>\n    );\n}\n\nexport default Reports;","import React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\"\n\nimport { getData, sendData } from \"../services/api\";\nimport { isLoggedIn } from \"../services/auth\";\nimport { NavLinks } from \"../components\";\n\nconst ReviewApplications = () => {\n    const [state, setState] = useState({\n        loginRedirect: false,\n        cookie: {}\n    });\n\n    // check auth\n    useEffect(() => {\n        const cookie = isLoggedIn();\n        if (cookie.hasOwnProperty(\"isTrustedVolunteer\") && cookie.isTrustedVolunteer) {\n            setState({ ...state, cookie });\n        }\n        /* eslint-disable react-hooks/exhaustive-deps */\n    }, []);\n\n    const [applications, setApplications] = useState([]);\n\n    useEffect(() => {\n        if (state.cookie.hasOwnProperty(\"isTrustedVolunteer\") && state.cookie.isTrustedVolunteer) {\n            getData(\"/application?status=pending\")\n                .then(({ target }) => {\n                    setApplications(JSON.parse(target.response));\n                })\n                .catch(error => {\n                    console.log(error);\n                })\n        }\n    }, [state.cookie]);\n\n    const submitDecision = (applicationId, decision) => {\n        const updatedApplicationState = decision ? \"true\" : \"false\";\n        sendData(decision, `/application/${applicationId}?approve=${updatedApplicationState}`, \"PUT\")\n            .then(({ target }) => {\n                if (target.status === 200) {\n                    const remainingApplications = applications.filter(application => {\n                        return application.id !== applicationId;\n                    });\n                    setApplications(remainingApplications);\n                }\n\n            })\n            .catch(error => {\n                console.log(\"Error updating application status: \", error);\n            })\n    }\n\n    return (\n        <>\n            {state.loginRedirect && <Redirect to={{ pathname: \"/login\", state: { from: \"/review-applications\" } }} />}\n            <NavLinks isTrustedVolunteer={state.cookie.isTrustedVolunteer} />\n            <main class=\"container\">\n                <h1>Review Applications</h1>\n                {applications.length ? (\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>First Name</th>\n                                <th>Last Name</th>\n                                <th>Email</th>\n                                <th>Street</th>\n                                <th>City</th>\n                                <th>State</th>\n                                <th>Zip</th>\n                                <th>Phone Number</th>\n                                <th>Co-Applicant First Name</th>\n                                <th>Co-Applicant Last Name</th>\n                                <th>Decision</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {applications.map(application => {\n                                return (\n                                    <tr key={application.id}>\n                                        <td>{application.applicant.firstName}</td>\n                                        <td>{application.applicant.lastName}</td>\n                                        <td>{application.applicant.email}</td>\n                                        <td>{application.applicant.street}</td>\n                                        <td>{application.applicant.city}</td>\n                                        <td>{application.applicant.state}</td>\n                                        <td>{application.applicant.zip}</td>\n                                        <td>{application.applicant.phoneNumber}</td>\n                                        <td>{application.coApplicantFirstName}</td>\n                                        <td>{application.coApplicantLastName}</td>\n                                        <td>\n                                            <button type=\"button\" onClick={() => {\n                                                submitDecision(application.id, true);\n                                            }} >Approve</button>\n                                            <button type=\"button\" onClick={() => {\n                                                submitDecision(application.id, false);\n                                            }} >Reject</button>\n                                        </td>\n                                    </tr>\n                                );\n                            })}\n                        </tbody>\n\n                    </table >\n                ) : (<h3>There are not any applications currently pending review.</h3>)\n                }\n            </main>\n        </>\n    );\n}\n\nexport default ReviewApplications;","import React, { useEffect, useState } from \"react\";\n\nimport { getData } from \"../services/api\";\nimport { isLoggedIn } from \"../services/auth\";\nimport { NavLinks } from \"../components\";\n\nconst VolunteerLookup = () => {\n    const [state, setState] = useState({\n        data: [],\n        errorMessage: \"\",\n        timeout: -1,\n        cookie: {}\n    });\n\n    // check auth\n    useEffect(() => {\n        const cookie = isLoggedIn();\n        if (cookie.hasOwnProperty(\"isTrustedVolunteer\") && cookie.isTrustedVolunteer) {\n            setState({ ...state, cookie });\n        }\n        /* eslint-disable react-hooks/exhaustive-deps */\n    }, []);\n\n    const [volunteerName, setVolunteerName] = useState(\"\");\n\n    useEffect(() => {\n        if (state.cookie.hasOwnProperty(\"isTrustedVolunteer\") && state.cookie.isTrustedVolunteer) {\n            getData(\"/volunteer\")\n                .then(({ target }) => {\n                    if (target) {\n                        setState({ ...state, data: JSON.parse(target.response) });\n                    } else {\n                        setState({ ...state, errorMessage: target.response });\n                    }\n                })\n                .catch(error => {\n                    console.log(error);\n                    setState({ ...state, errorMessage: JSON.stringify(error) });\n                })\n        }\n    }, [state.cookie]);\n\n    const getVolunteersLike = () => {\n        getData(`/volunteer?like=${volunteerName}`)\n            .then(({ target }) => {\n                if (target.status === 200) {\n                    const data = JSON.parse(target.response)\n                    console.log(data);\n                    setState({ ...state, data });\n\n                }\n            })\n            .catch(error => {\n                console.log(error);\n            })\n            .finally(() => {\n                console.log(state.data);\n            })\n    };\n\n    return (\n        <>\n            <NavLinks isTrustedVolunteer={state.cookie.isTrustedVolunteer} />\n            <h1>Volunteer Lookup</h1>\n            <div className=\"form-unit\">\n                <label htmlFor=\"volunteer-name\">Volunteer name:</label>\n                <input\n                    type=\"text\"\n                    value={volunteerName}\n                    onChange={({ target }) => {\n                        setVolunteerName(target.value);\n                        clearTimeout(state.timeout);\n                        const timeout = setTimeout(() => {\n                            getVolunteersLike()\n                        }, 600)\n                        setState({ ...state, timeout });\n                    }}\n                />\n            </div>\n\n            {\n                state.data.length ? (\n\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>First Name</th>\n                                <th>Last Name</th>\n                                <th>Email</th>\n                                <th>Phone Number</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                state.data.map((volunteer) => {\n                                    return (\n                                        <tr>\n                                            <th>{volunteer.firstName}</th>\n                                            <th>{volunteer.lastName}</th>\n                                            <th>{volunteer.email}</th>\n                                            <th>{volunteer.cell}</th>\n                                        </tr>\n                                    )\n                                })\n                            }\n                        </tbody>\n                    </table>\n                ) : (\n                        <p> No volunteers found</p>)\n\n\n            }\n            {state.errorMessage && (\n                <div styles={{ color: \"red\" }}>{state.errorMessage}</div>\n            )}\n        </>\n    );\n}\n\nexport default VolunteerLookup;\n\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport {\n  AddAdoption,\n  AddApplication,\n  AddDog,\n  AnimalControlReport,\n  DogDashboard,\n  DogDetails,\n  ExpenseAnalysis,\n  Login,\n  MonthlyAdoptionReport,\n  Reports,\n  ReviewApplications,\n  VolunteerLookup\n} from \"./containers\";\nimport \"./App.css\";\n\nexport default function App() {\n  return (\n    <Router>\n      <Routes />\n    </Router>\n  );\n}\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route path=\"/add-adoption\">\n        <AddAdoption />\n      </Route>\n      <Route path=\"/add-application\">\n        <AddApplication />\n      </Route>\n      <Route path=\"/add-dog\">\n        <AddDog />\n      </Route>\n      <Route path=\"/animal-control-report\">\n        <AnimalControlReport />\n      </Route>\n      <Route path=\"/dog-dashboard\">\n        <DogDashboard />\n      </Route>\n      <Route path=\"/dog-details/:dogId\">\n        <DogDetails />\n      </Route>\n      <Route path=\"/expense-analysis\">\n        <ExpenseAnalysis />\n      </Route>\n      <Route path=\"/monthly-adoption-report\">\n        <MonthlyAdoptionReport />\n      </Route>\n      <Route path=\"/reports\">\n        <Reports />\n      </Route>\n      <Route path=\"/review-applications\">\n        <ReviewApplications />\n      </Route>\n      <Route path=\"/volunteer-lookup\">\n        <VolunteerLookup />\n      </Route>\n      <Route path=\"/\">\n        <Login />\n      </Route>\n    </Switch>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}