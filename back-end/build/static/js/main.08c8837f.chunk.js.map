{"version":3,"sources":["services/api.js","services/auth.js","components/NavLinks.js","containers/AddAdoption.js","containers/AddApplication.js","containers/AddDog.js","containers/AnimalControlReport.js","containers/AnimalControlDrillDownReport.js","containers/DogDashboard.js","containers/DogDetails.js","containers/ExpenseAnalysis.js","containers/Login.js","containers/MonthlyAdoptionReport.js","containers/Reports.js","containers/ReviewApplications.js","containers/VolunteerLookup.js","App.js","index.js"],"names":["sendData","data","path","method","Promise","resolve","reject","request","XMLHttpRequest","onload","event","onerror","error","open","send","JSON","stringify","getData","isLoggedIn","document","cookie","split","reduce","accumulator","pair","key","NavLinks","isTrustedVolunteer","titleOnly","useState","loginRedirect","state","setState","useEffect","hasOwnProperty","to","pathname","className","AddAdoption","locationState","useLocation","approvedApplicants","timeout","latestApplication","dog","dateAdopted","dashboardRedirect","errorMessage","approvedApplicantLastNameFragment","setApprovedApplicantLastNameFragment","getLatestApplication","params","applicant","query","Object","keys","filter","map","index","join","then","target","status","parse","response","console","log","catch","totalExpenses","expenses","sum","current","amountInCents","animalControlPays","surrenderedByAnimalControl","adoptionFee","adoptionFeeCents","Math","round","adoptionFeeDollars","floor","from","id","htmlFor","onChange","value","clearTimeout","setTimeout","length","coApplicantLastName","indexOf","type","onClick","applicantId","coApplicantFirstName","firstName","lastName","street","city","zip","email","phoneNumber","Date","date","toString","zipCode","expense","vendor","description","adoption","applicationNumberFk","dogIdFk","adoptionDate","style","color","paddingLeft","AddApplication","showModal","applicationId","setApplicant","applicantIdFk","application","setApplication","updateApplicant","attribute","updatedState","assign","updateApplication","postApplication","display","flexDirection","alignItems","justifyContent","overflow","position","top","right","bottom","left","zIndex","backgroundColor","opacity","marginLeft","marginBottom","height","width","margin","AddDog","pageState","setPageState","useReducer","action","dogName","payload","newBreed","breed","checked","querySelector","sex","alterationStatus","dateOfBirth","microchipId","surrenderDate","surrenderReason","availableBreeds","detailRedirect","Error","dispatch","validateDog","toLowerCase","isError","forEach","b","clear","disabled","name","volunteerId","localStorage","getItem","dogData","AnimalControlReport","drillDownRedirect","datum","expenseDollars","expenseCents","cents","month","trim","year","dogsTotalCount","dogsSixtyDaysCount","styles","AnimalControlDrillDownReport","backRedirect","surrenderedData","setSurrenderedData","adoptedData","setAdoptedData","useParams","monthAndYear","startMonth","endMonth","endYear","dogId","surrendered","adopted","daysInShelter","ControlPanel","addApplication","addDog","availableSpaces","showAvailable","setShowAvailable","showUnavailable","setShowUnavailable","logout","DogDashboard","dogs","addDogRedirect","addApplicationRedirect","dogDetailRedirect","now","years","yearsStr","months","monthsStr","isAvailable","String","toDateString","DogDetails","falseBreeds","breeds","canEditBreeds","canEditSex","canEditAlterationStatus","canEditMicrochipId","showAddExpenseForm","newExpense","expenseErrorMessage","addAdoptionRedirect","isAdoptable","breedsObj","Checkbox","location","reload","totalExpense","currentExpense","step","min","ExpenseAnalysis","totalSpending","Login","password","redirect","autoComplete","form","volunteer","setItem","isTrusted","MonthlyAdoptionReport","acc","UpdateTables","ind","dataDict","i","indices","push","indx","offset","today","setMonth","getMonth","monthNum","getMonthName","getFullYear","GetMonthOffset","Expenses","Float64","AdoptionFees","profitCents","Profit","profitDollars","SurrenderCount","AdoptionCount","getTotalValues","getTableValues","Reports","ReviewApplications","applications","setApplications","submitDecision","decision","updatedApplicationState","remainingApplications","class","VolunteerLookup","volunteerName","setVolunteerName","volName","finally","cell","App","Routes","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.08c8837f.chunk.js","sourcesContent":["const sendData = (data, path, method = \"post\") => {\n    return new Promise((resolve, reject) => {\n        const API = \"http://localhost:8080/api\";\n        const request = new XMLHttpRequest();\n\n        request.onload = event => {\n            resolve(event);\n        }\n\n        request.onerror = error => {\n            reject(error);\n        }\n\n        request.open(method, API + path);\n\n        request.send(JSON.stringify(data));\n    });\n}\n\nconst getData = path => {\n    return new Promise((resolve, reject) => {\n        const API = \"http://localhost:8080/api\";\n        const request = new XMLHttpRequest();\n\n        request.onload = data => {\n            resolve(data);\n        }\n\n        request.onerror = error => {\n            reject(error);\n        }\n\n        request.open(\"get\", API + path);\n\n        request.send();\n    });\n}\n\nexport {\n    sendData,\n    getData\n};","const isLoggedIn = () => {\n    const cookiePairs = document.cookie.split(\";\");\n    const cookie = cookiePairs.reduce((accumulator, pair) => {\n        const [key, value] = pair.split(\"=\");\n        switch (value) {\n            case \"true\":\n                accumulator[key] = true;\n                return accumulator;\n            case \"false\":\n                accumulator[key] = false;\n                return accumulator;\n            default:\n                accumulator[key] = null;\n                return accumulator;\n        }\n    }, {});\n    return cookie;\n}\n\nexport { isLoggedIn };","import React, { useEffect, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nimport { isLoggedIn } from \"../services/auth\";\n\nexport default function NavLinks({ isTrustedVolunteer, titleOnly = false }) {\n    const [state, setState] = useState({\n        loginRedirect: false,\n        cookie: {}\n    });\n\n    // check auth\n    useEffect(() => {\n        const cookie = isLoggedIn();\n        if (cookie.hasOwnProperty(\"isTrustedVolunteer\") && cookie.isTrustedVolunteer !== null) {\n            setState({ ...state, cookie });\n        } else {\n            setState({ ...state, loginRedirect: true });\n        }\n        /* eslint-disable react-hooks/exhaustive-deps */\n    }, []);\n\n    return (\n        <>\n            {state.loginRedirect && <Redirect to={{ pathname: \"/login\" }} />}\n            <nav className=\"container\">\n                <h1>Mo's Mutt House</h1>\n                {!titleOnly && (\n                    <ul>\n                        <li className=\"nav-link form-unit log-out\">\n                            <Link to=\"/login\">Logout</Link>\n                        </li>\n                        {isTrustedVolunteer && (\n                            <>\n                                <li className=\"nav-link form-unit\">\n                                    <Link to=\"/reports\">Reports</Link>\n                                </li>\n                                <li className=\"nav-link form-unit\">\n                                    <Link to=\"/review-applications\">Review Applications</Link>\n                                </li>\n                            </>\n                        )}\n\n                        <li className=\"nav-link form-unit\">\n                            <Link to=\"/add-application\">Add Application</Link>\n                        </li>\n                        <li className=\"nav-link form-unit\">\n                            <Link to=\"/add-dog\">Add Dog</Link>\n                        </li>\n                        <li className=\"nav-link form-unit\">\n                            <Link to=\"/dog-dashboard\">Dog Dashboard</Link>\n                        </li>\n                    </ul>\n                )}\n            </nav>\n        </>\n    );\n}","import React, { useEffect, useState } from \"react\";\nimport { Redirect, useLocation } from \"react-router-dom\";\n\nimport { getData, sendData } from \"../services/api\";\nimport { isLoggedIn } from \"../services/auth\";\nimport { NavLinks } from \"../components\";\n\nconst AddAdoption = () => {\n    const locationState = useLocation().state;\n\n    const [state, setState] = useState({\n        approvedApplicants: [],\n        timeout: -1,\n        latestApplication: {},\n        dog: locationState && locationState.dog,\n        dateAdopted: \"\",\n        dashboardRedirect: false,\n        errorMessage: \"\",\n        cookie: {}\n    });\n\n    const [approvedApplicantLastNameFragment, setApprovedApplicantLastNameFragment] = useState(\"\");\n\n    // check auth\n    useEffect(() => {\n        const cookie = isLoggedIn();\n        if (cookie.hasOwnProperty(\"isTrustedVolunteer\") && cookie.isTrustedVolunteer) {\n            setState({ ...state, cookie });\n        }\n        /* eslint-disable react-hooks/exhaustive-deps */\n    }, []);\n\n    // Don't pre-populate\n    // useEffect(() => {\n    //     if (state.cookie.hasOwnProperty(\"isTrustedVolunteer\") && state.cookie.isTrustedVolunteer) {\n    //         getData(`/applicant?status=approved`)\n    //             .then(({ target }) => {\n    //                 setState({ ...state, approvedApplicants: JSON.parse(target.response) });\n    //             })\n    //             .catch(error => {\n    //                 console.log(error);\n    //             })\n    //     }\n    // }, [state.cookie]);\n\n    const getLatestApplication = (params, applicant) => {\n        const query = Object.keys(params)\n            .filter(key => params[key])\n            .map((key, index) => `${index ? \"&\" : \"?\"}${key}=${params[key]}`)\n            .join(\"\")\n\n        getData(`/application${query}`)\n            .then(({ target }) => {\n                if (target.status === 200) {\n                    const latestApplication = JSON.parse(target.response)[0]\n                    latestApplication.applicant = applicant;\n                    setState({ ...state, latestApplication });\n                } else {\n                    console.log(target);\n                }\n\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    const submitAdoption = () => {\n        if (state.dateAdopted === \"\") {\n            setState({ ...state, errorMessage: \"Please enter adoption date.\" });\n            return;\n        }\n\n        const adoption = {\n            dateAdopted: state.dateAdopted,\n            applicationNumberFk: +state.latestApplication.id,\n            dogIdFk: state.dog.id\n        }\n        sendData(adoption, \"/adoption\")\n            .then(data => {\n                const { target } = data;\n                if (target.status === 201) {\n                    // show success modal\n                    setState({ ...state, dashboardRedirect: true });\n                } else {\n                    console.log(\"error adding dog (non-201):\", target.response);\n                    setState({ ...state, errorMessage: target.response });\n                }\n            })\n            .catch(error => {\n                // show error modal\n                console.log(\"error adding dog (catch):\", error);\n                setState({ ...state, errorMessage: error });\n            });\n    }\n\n    const totalExpenses = state.dog && state.dog.expenses.reduce((sum, current) => sum + (current.amountInCents / 100), 0);\n\n    const animalControlPays = state.dog && ((state.dog.surrenderedByAnimalControl && totalExpenses) || 0);\n\n    const adoptionFee = (1.15 * totalExpenses) - animalControlPays;\n\n    const adoptionFeeCents = Math.round((adoptionFee % 1) * 100); // round to nearest cent\n\n    const adoptionFeeDollars = Math.floor(adoptionFee); // round down to nearest dollar\n\n    return (\n        <>\n            {state.dashboardRedirect && <Redirect to={{ pathname: \"/dog-dashboard\", state: { from: \"/add-adoption\" } }} />}\n            <NavLinks isTrustedVolunteer={state.cookie.isTrustedVolunteer} />\n            <main className=\"container\">\n                <h1>Add Adoption</h1>\n                {!state.latestApplication.id && <form>\n                    <div className=\"form-unit\">\n                        <label htmlFor=\"approved-applicant-last-name\">Search by approved applicant last name:</label>\n                        <input\n                            id=\"approved-applicant-last-name\"\n                            onChange={({ target }) => {\n                                setApprovedApplicantLastNameFragment(target.value);\n                                clearTimeout(state.timeout);\n                                setState({\n                                    ...state, timeout: setTimeout(() => {\n                                        // make http call for approved applicants like\n                                        getData(`/applicant?like=${target.value}`)\n                                            .then(({ target }) => {\n                                                let approvedApplicants = JSON.parse(target.response);\n                                                if (target.status === 200) {\n                                                    setState({ ...state, approvedApplicants });\n                                                }\n                                                else {\n                                                    console.log(target);\n                                                }\n                                            })\n                                            .catch(error => {\n                                                console.log(error);\n                                            })\n                                    }, 400)\n                                });\n                            }}\n                        />\n                    </div>\n\n                </form>}\n\n                {!state.latestApplication.id && state.approvedApplicants.length > 0 && (\n                    <>\n                        <h3>Select Applicant</h3>\n                        <table>\n                            <thead>\n                                <tr>\n                                    <th></th>\n                                    <th>First Name</th>\n                                    <th>Last Name</th>\n                                    <th>Street</th>\n                                    <th>City</th>\n                                    <th>State</th>\n                                    <th>Zip</th>\n                                    <th>Email</th>\n                                    <th>Phone Number</th>\n                                    <th>Co-applicant Name</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {state.approvedApplicants.length > 0 && state.approvedApplicants.map((applicant, index) => {\n                                    if (applicant.coApplicantLastName) {\n                                        console.log(applicant.coApplicantLastName.indexOf(approvedApplicantLastNameFragment));\n                                    }\n\n                                    return (\n                                        <tr key={index} >\n                                            <td>\n                                                <button type=\"button\" onClick={() => {\n                                                    if (applicant.coApplicantLastName && applicant.coApplicantLastName.indexOf(approvedApplicantLastNameFragment) !== -1) {\n                                                        getLatestApplication({ applicantId: applicant.id, coApplicantFirstName: applicant.coApplicantFirstName, coApplicantLastName: applicant.coApplicantLastName }, applicant);\n                                                    } else {\n                                                        getLatestApplication({ applicantId: applicant.id }, applicant);\n                                                    }\n                                                }}>Select</button>\n                                            </td>\n                                            <td>{applicant.firstName}</td>\n                                            <td>{applicant.lastName}</td>\n                                            <td>{applicant.street}</td>\n                                            <td>{applicant.city}</td>\n                                            <td>{applicant.state}</td>\n                                            <td>{applicant.zip}</td>\n                                            <td>{applicant.email}</td>\n                                            <td>{applicant.phoneNumber}</td>\n                                            <td>{(applicant.coApplicantLastName && applicant.coApplicantLastName.indexOf(approvedApplicantLastNameFragment) !== -1) ? `${applicant.coApplicantFirstName || \"\"} ${applicant.coApplicantLastName || \"\"}` : \"\"}</td>\n                                        </tr>\n                                    );\n\n                                })}\n                            </tbody>\n                        </table>\n                    </>\n                )}\n                {/* {!state.latestApplication.id && !state.approvedApplicants.length && (<h3>There are not currently any approved applications.</h3>)} */}\n                {state.latestApplication.id && (\n                    <>\n                        <h3>Selected Application</h3>\n                        <div className=\"form-unit\">Application Number: {state.latestApplication.id}</div>\n                        <div className=\"form-unit\">Date: {new Date(state.latestApplication.date).toString()}</div>\n                        <div className=\"form-unit\">Applicant Name: {state.latestApplication.applicant.firstName} {state.latestApplication.applicant.lastName}</div>\n                        <div className=\"form-unit\">Applicant Address: {state.latestApplication.applicant.street}, {state.latestApplication.applicant.city}, {state.latestApplication.applicant.state}  {state.latestApplication.applicant.zipCode}</div>\n                        <div className=\"form-unit\">Email: {state.latestApplication.applicant.email}</div>\n                        <div className=\"form-unit\">Phone Number: {state.latestApplication.applicant.phoneNumber}</div>\n                        {(state.latestApplication.coApplicantFirstName || state.latestApplication.coApplicantLastName) && <div className=\"form-unit\">Co-Applicant: {state.latestApplication.coApplicantFirstName} {state.latestApplication.coApplicantLastName}</div>}\n                        <h3>Expenses</h3>\n                        {state.dog.expenses.map(expense => (\n                            <div className=\"form-unit\" key={expense.vendor + expense.date}>\n                                <div>Vendor: {expense.vendor}</div>\n                                <div>Amount: ${expense.amountInCents / 100}</div>\n                                <div>Description: {expense.description}</div>\n                                <div>Date: {expense.date}</div>\n                            </div>\n                        ))}\n                        <h3>Total Expenses: ${totalExpenses}</h3>\n                        <h3>Animal Control pays: ${animalControlPays}</h3>\n                        <h3>Adoption Fee: ${adoptionFeeDollars}.{adoptionFeeCents}</h3>\n                        <div>\n                            <label htmlFor=\"adoption-date\">Adoption Date:</label>\n                            <input type=\"date\" onChange={({ target }) => setState({ ...state, dateAdopted: target.value })} />\n                        </div>\n                        <div className=\"form-unit\">\n                            <span>I confirm every looks correct: </span><button type=\"button\" onClick={submitAdoption}>Complete Adoption</button><button type=\"button\" onClick={() => setState({ ...state, latestApplication: {}, adoptionDate: \"\" })}>Cancel</button><span style={{ color: \"red\", paddingLeft: \"10px\" }}>{state.errorMessage}</span>\n                        </div>\n                    </>\n                )}\n            </main>\n        </>\n    )\n\n\n}\n\nexport default AddAdoption;","import React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { getData, sendData } from \"../services/api\";\nimport { isLoggedIn } from \"../services/auth\";\nimport { NavLinks } from \"../components\";\n\nconst AddApplication = () => {\n    const [state, setState] = useState({\n        showModal: false,\n        dashboardRedirect: false,\n        errorMessage: \"\",\n        timeout: -1,\n        applicationId: \"\",\n        loginRedirect: false,\n        cookie: {}\n    });\n\n    // check auth\n    useEffect(() => {\n        const cookie = isLoggedIn();\n        if (cookie.hasOwnProperty(\"isTrustedVolunteer\") && cookie.isTrustedVolunteer !== null) {\n            setState({ ...state, cookie });\n        }\n        /* eslint-disable react-hooks/exhaustive-deps */\n    }, []);\n\n    const [applicant, setApplicant] = useState({\n        city: \"\",\n        email: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        phoneNumber: \"\",\n        state: \"\",\n        street: \"\",\n        zip: \"\"\n    });\n\n    const [application, setApplication] = useState({\n        coApplicantFirstName: \"\",\n        coApplicantLastName: \"\",\n        applicantIdFk: \"\",\n        date: \"\",\n        state: \"\"\n    });\n\n    const updateApplicant = (attribute) => {\n        let updatedState = applicant;\n        Object.assign(updatedState, attribute);\n        setApplicant({ ...updatedState });\n    };\n\n    const updateApplication = (attribute) => {\n        let updatedState = application;\n        Object.assign(updatedState, attribute);\n        setApplication({ ...updatedState });\n    };\n\n    const postApplicant = () => {\n        if (applicant.email === \"\") {\n            setState({ ...state, errorMessage: \"Please add applicant email.\" });\n            return;\n        }\n        if (applicant.firstName === \"\") {\n            setState({ ...state, errorMessage: \"Please add applicant first name.\" });\n            return;\n        }\n        if (applicant.lastName === \"\") {\n            setState({ ...state, errorMessage: \"Please add applicant last name.\" });\n            return;\n        }\n        if (applicant.street === \"\") {\n            setState({ ...state, errorMessage: \"Please add applicant street address.\" });\n            return;\n        }\n        if (applicant.city === \"\") {\n            setState({ ...state, errorMessage: \"Please add applicant city.\" });\n            return;\n        }\n        if (applicant.state === \"\") {\n            setState({ ...state, errorMessage: \"Please add applicant state.\" });\n            return;\n        }\n        if (applicant.state.length > 2) {\n            setState({ ...state, errorMessage: \"Please use 2-letter state abbreviation.\" });\n            return;\n        }\n        if (applicant.zip === \"\") {\n            setState({ ...state, errorMessage: \"Please add applicant zip code.\" });\n            return;\n        }\n        if (applicant.phoneNumber === \"\") {\n            setState({ ...state, errorMessage: \"Please add applicant phone number.\" });\n            return;\n        }\n        sendData(applicant, `/applicant`)\n            .then(({ target }) => {\n                const applicant = JSON.parse(target.response);\n                if (target.status === 201 && applicant.email) {\n                    // show success modal\n                    setApplicant(applicant)\n                    updateApplication({ applicantIdFk: applicant.id })\n                    postApplication()\n                } else {\n                    console.log(\"error adding application (non-201):\", target.response);\n                    setState({ ...state, \"errorMessage\": target.response });\n                }\n            })\n            .catch(error => {\n                // show error modal\n                console.log(\"error adding application (catch):\", error);\n                setState({ ...state, \"errorMessage\": error });\n            });\n    };\n\n    const postApplication = () => {\n        if (applicant.email === \"\") {\n            setState({ ...state, errorMessage: \"Please add applicant email.\" });\n            return;\n        }\n        if (applicant.firstName === \"\") {\n            setState({ ...state, errorMessage: \"Please add applicant first name.\" });\n            return;\n        }\n        if (applicant.lastName === \"\") {\n            setState({ ...state, errorMessage: \"Please add applicant last name.\" });\n            return;\n        }\n        if (applicant.street === \"\") {\n            setState({ ...state, errorMessage: \"Please add applicant street address.\" });\n            return;\n        }\n        if (applicant.city === \"\") {\n            setState({ ...state, errorMessage: \"Please add applicant city.\" });\n            return;\n        }\n        if (applicant.state === \"\") {\n            setState({ ...state, errorMessage: \"Please add applicant state.\" });\n            return;\n        }\n        if (applicant.state.length > 2) {\n            setState({ ...state, errorMessage: \"Please use 2-letter state abbreviation.\" });\n            return;\n        }\n        if (applicant.zip === \"\") {\n            setState({ ...state, errorMessage: \"Please add applicant zip code.\" });\n            return;\n        }\n        if (applicant.phoneNumber === \"\") {\n            setState({ ...state, errorMessage: \"Please add applicant phone number.\" });\n            return;\n        }\n        sendData(application, `/application`)\n            .then(({ target }) => {\n                if (target.status === 201) {\n                    // show success modal\n                    setState({ ...state, applicationId: JSON.parse(target.response).id, showModal: true });\n                } else {\n                    console.log(\"error adding application (non-201):\", target.response);\n                    setState({ ...state, \"errorMessage\": target.response });\n                }\n            })\n            .catch(error => {\n                // show error modal\n                console.log(\"error adding application (catch):\", error);\n                setState({ ...state, \"errorMessage\": error });\n            });\n    };\n\n    const submitApplication = () => {\n        if (application.applicantIdFk) {\n            postApplication();\n        } else {\n            postApplicant();\n        }\n    };\n\n    const resetPage = () => {\n        setApplicant({\n            city: \"\",\n            email: \"\",\n            firstName: \"\",\n            lastName: \"\",\n            phoneNumber: \"\",\n            state: \"\",\n            street: \"\",\n            zip: \"\"\n        });\n\n        setApplication({\n            coApplicantFirstName: \"\",\n            coApplicantLastName: \"\",\n            applicantIdFk: \"\",\n            date: \"\",\n            state: \"\"\n        });\n\n        setState({\n            ...state,\n            showModal: false,\n            dashboardRedirect: false,\n            errorMessage: \"\",\n            timeout: -1,\n            applicationId: \"\",\n            loginRedirect: false\n        });\n    }\n\n    return (\n        <>\n            {state.dashboardRedirect && <Redirect to={{ pathname: \"/dog-dashboard\", state: { from: \"/add-dog\" } }} />}\n            <NavLinks isTrustedVolunteer={state.cookie.isTrustedVolunteer} />\n            <main className=\"container\">\n                <h1>Add Application</h1>\n                <form>\n                    <div className=\"form-unit\">\n                        <label htmlFor=\"\">Applicant Email Address:</label>\n                        <input\n                            type=\"text\"\n                            id=\"applicant-email\"\n                            value={applicant.email}\n                            onChange={({ target }) => {\n                                updateApplicant({ \"email\": target.value })\n                                // debounce for 300 milliseconds\n                                clearTimeout(state.timeout);\n                                setState({\n                                    ...state, timeout: setTimeout(() => {\n                                        // make http call for applicant\n                                        getData(`/applicant/${applicant.email}`)\n                                            .then(({ target }) => {\n                                                let applicant = JSON.parse(target.response);\n                                                if (target.status === 200 && applicant.email) {\n                                                    setApplicant(applicant);\n                                                    updateApplication({ applicantIdFk: applicant.id })\n                                                }\n                                            })\n                                            .catch(error => {\n                                                console.log(error);\n                                            })\n                                    }, 400)\n                                });\n                            }}\n                        />\n                    </div>\n                    <div className=\"form-unit\">\n                        <label htmlFor=\"\">Applicant First Name:</label>\n                        <input\n                            type=\"text\"\n                            id=\"applicant-first-name\"\n                            value={applicant.firstName}\n                            onChange={({ target }) => updateApplicant({ \"firstName\": target.value })}\n                        />\n                    </div>\n                    <div className=\"form-unit\">\n                        <label htmlFor=\"\">Applicant Last Name:</label>\n                        <input\n                            type=\"text\"\n                            id=\"applicant-last-name\"\n                            value={applicant.lastName}\n                            onChange={({ target }) => updateApplicant({ \"lastName\": target.value })}\n                        />\n                    </div>\n                    <div className=\"form-unit\">\n                        <label htmlFor=\"\">Street Address:</label>\n                        <input\n                            type=\"text\"\n                            id=\"applicant-stree-address\"\n                            value={applicant.street}\n                            onChange={({ target }) => updateApplicant({ \"street\": target.value })}\n                        />\n                    </div>\n                    <div className=\"form-unit\">\n                        <label htmlFor=\"\">City:</label>\n                        <input\n                            type=\"text\"\n                            id=\"applicant-city\"\n                            value={applicant.city}\n                            onChange={({ target }) => updateApplicant({ \"city\": target.value })}\n                        />\n                    </div>\n                    <div className=\"form-unit\">\n                        <label htmlFor=\"\">State: (2 Letters)</label>\n                        <input\n                            type=\"text\"\n                            id=\"applicant-state\"\n                            value={applicant.state}\n                            onChange={({ target }) => updateApplicant({ \"state\": target.value })}\n                        />\n                    </div>\n                    <div className=\"form-unit\">\n                        <label htmlFor=\"\">Zip Code:</label>\n                        <input\n                            type=\"text\"\n                            id=\"applicant-zip-code\"\n                            value={applicant.zip}\n                            onChange={({ target }) => updateApplicant({ \"zip\": target.value })}\n                        />\n                    </div>\n                    <div className=\"form-unit\">\n                        <label htmlFor=\"\">Phone Number:</label>\n                        <input\n                            type=\"text\"\n                            id=\"applicant-phone-number\"\n                            value={applicant.phoneNumber}\n                            onChange={({ target }) => updateApplicant({ \"phoneNumber\": target.value })}\n                        />\n                    </div>\n                    <div className=\"form-unit\">\n                        <label htmlFor=\"\">Co-Applicant First Name:</label>\n                        <input\n                            type=\"text\"\n                            id=\"applicant-co-applicant-first-name\"\n                            value={applicant.coApplicantFirstName}\n                            onChange={({ target }) => updateApplication({ \"coApplicantFirstName\": target.value })}\n                        />\n                    </div>\n                    <div className=\"form-unit\">\n                        <label htmlFor=\"\">Co-Applicant Last Name:</label>\n                        <input\n                            type=\"text\"\n                            id=\"applicant-co-applicant-last-name\"\n                            value={applicant.coApplicantLastName}\n                            onChange={({ target }) => updateApplication({ \"coApplicantLastName\": target.value })}\n                        />\n                    </div>\n                    <button type=\"button\" onClick={submitApplication}>Submit Application</button><span style={{ color: \"red\", paddingLeft: \"10px\" }}>{state.errorMessage}</span>\n                </form>\n                {state.showModal && (\n                    <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\", overflow: \"hidden\" }}>\n                        <div style={{ position: \"fixed\", top: 0, right: 0, bottom: 0, left: 0, zIndex: 10, backgroundColor: \"black\", opacity: 0.5 }}></div>\n                        <div style={{ position: \"fixed\", left: \"50%\", bottom: \"50%\", marginLeft: \"-300px\", marginBottom: \"-150px\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\", zIndex: 100, height: \"300px\", width: \"600px\", backgroundColor: \"white\" }}>\n                            <div style={{ marginBottom: \"20px\" }}>\n                                <span>Application successfully created.</span>\n                            </div>\n                            <div style={{ marginBottom: \"20px\" }}>\n                                <span>Application #{state.applicationId}</span>\n                            </div>\n                            <div style={{ margin: \"20px\" }}>Would you like to go to</div>\n                            <div>\n                                <button onClick={resetPage}>Add another application</button>\n                                <span style={{ margin: \"20px\" }}> or </span>\n                                <button onClick={() => setState({ ...state, dashboardRedirect: true })}>Back to Dog Dashboard</button>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </main>\n        </>\n    )\n\n\n}\n\nexport default AddApplication;","import React, { useEffect, useReducer, useState } from \"react\"\nimport { Redirect } from \"react-router-dom\"\n\nimport { getData, sendData } from \"../services/api\";\nimport { isLoggedIn } from \"../services/auth\";\nimport { NavLinks } from \"../components\";\n\nconst AddDog = () => {\n    const [pageState, setPageState] = useState({\n        loginRedirect: false,\n        cookie: {}\n    });\n\n    // check auth\n    useEffect(() => {\n        const cookie = isLoggedIn();\n        if (cookie.hasOwnProperty(\"isTrustedVolunteer\") && cookie.isTrustedVolunteer !== null) {\n            setPageState({ ...pageState, cookie });\n        }\n        /* eslint-disable react-hooks/exhaustive-deps */\n    }, []);\n\n    const reducer = (state, action) => {\n        switch (action.type) {\n            case \"dogName\":\n                return { ...state, dogName: action.payload };\n            case \"breed\":\n                let newBreed = state.breed;\n                if (action.payload.checked) {\n                    newBreed[action.payload.breed] = true;\n                    if (action.payload.breed === \"Mixed\" || action.payload.breed === \"Unknown\") {\n                        // delete all other breeds\n                        for (const key in newBreed) {\n                            if (key !== action.payload.breed) {\n                                delete newBreed[key];\n                                document.querySelector(`#${key.split(\" \").join(\"-\")}`).checked = false;\n                            }\n                        }\n                    }\n                } else {\n                    delete newBreed[action.payload.breed];\n                }\n                return { ...state, breed: newBreed };\n            case \"sex\":\n                return { ...state, sex: action.payload }\n            case \"alterationStatus\":\n                return { ...state, alterationStatus: action.payload }\n            case \"dateOfBirth\":\n                return { ...state, dateOfBirth: action.payload }\n            case \"description\":\n                return { ...state, description: action.payload }\n            case \"microchipId\":\n                return { ...state, microchipId: action.payload }\n            case \"expenses\":\n                return { ...state, expenses: action.payload }\n            case \"surrenderDate\":\n                return { ...state, surrenderDate: action.payload }\n            case \"surrenderReason\":\n                return { ...state, surrenderReason: action.payload }\n            case \"surrenderedByAnimalControl\":\n                return { ...state, surrenderedByAnimalControl: action.payload }\n            case \"availableBreeds\":\n                return { ...state, availableBreeds: action.payload }\n            case \"errorMessage\":\n                return { ...state, errorMessage: action.payload }\n            case \"showModal\":\n                return { ...state, id: action.payload, showModal: true }\n            case \"dogDetail\":\n                return { ...state, detailRedirect: true }\n            case \"dogDashboard\":\n                return { ...state, dashboardRedirect: true }\n            default:\n                throw new Error();\n        }\n    };\n\n    const [state, dispatch] = useReducer(\n        reducer,\n        {\n            dogName: \"\",\n            breed: {},\n            sex: null,\n            alterationStatus: null,\n            dateOfBirth: \"\",\n            description: \"\",\n            microchipId: \"\",\n            surrenderDate: \"\",\n            surrenderReason: \"\",\n            surrenderedByAnimalControl: null,\n            availableBreeds: [],\n            errorMessage: \"\",\n            showModal: false,\n            detailRedirect: false,\n            dashboardRedirect: false,\n            id: -1\n        });\n\n    const {\n        dogName,\n        breed,\n        sex,\n        alterationStatus,\n        dateOfBirth,\n        description,\n        microchipId,\n        surrenderDate,\n        surrenderReason,\n        surrenderedByAnimalControl,\n        availableBreeds,\n        errorMessage,\n        showModal,\n        detailRedirect,\n        dashboardRedirect,\n        id\n    } = state;\n\n    useEffect(() => {\n        if (pageState.cookie.hasOwnProperty(\"isTrustedVolunteer\") && pageState.cookie.isTrustedVolunteer !== null) {\n            getData(\"/breed\")\n                .then(({ target }) => {\n                    dispatch({ type: 'availableBreeds', payload: JSON.parse(target.response) });\n                })\n                .catch(error => {\n                    dispatch({ type: \"errorMessage\", payload: error });\n                    console.log(\"error:\", error);\n                })\n        }\n    }, [pageState.cookie]);\n\n    const addDog = () => {\n        const volunteerId = JSON.parse(localStorage.getItem(\"volunteerId\"));\n        const dogData = {\n            name: dogName,\n            breed: Object.keys(breed),\n            sex,\n            alterationStatus: alterationStatus === \"true\" ? true : false,\n            dateOfBirth,\n            description,\n            surrenderDate,\n            surrenderReason,\n            surrenderedByAnimalControl,\n            volunteerId\n        };\n        if (microchipId) {\n            dogData.microchipId = { \"String\": microchipId, \"Valid\": true };\n        }\n        if (validateDog()) {\n            sendData(dogData, \"/dog\")\n                .then(data => {\n                    const { target } = data;\n                    if (target.status === 201) {\n                        // show success modal\n                        dispatch({ type: \"showModal\", payload: JSON.parse(target.response).id });\n                    } else {\n                        console.log(\"error adding dog (non-201):\", target.response);\n                        dispatch({ type: \"errorMessage\", payload: target.response });\n                    }\n                })\n                .catch(error => {\n                    // show error modal\n                    console.log(\"error adding dog (catch):\", error);\n                    dispatch({ type: \"errorMessage\", payload: error });\n                });\n        }\n    }\n\n    const validateDog = () => {\n        if (!dogName) {\n            dispatch({ type: \"errorMessage\", payload: \"Please enter dog name.\" });\n            return false;\n        }\n        if (dogName.toLowerCase() === \"uga\") {\n            let isError = false;\n            Object.keys(breed).forEach(b => {\n                // prohibit any type of bulldog named Uga\n                if (b.toLowerCase().indexOf(\"bulldog\") !== -1) {\n                    dispatch({ type: \"errorMessage\", payload: \"BullDog can not be named 'Uga'.\" });\n                    isError = true;\n                }\n            })\n            if (isError) {\n                return false;\n            }\n        }\n        if (!Object.keys(breed).length) {\n            dispatch({ type: \"errorMessage\", payload: \"Please select at least one dog breed.\" });\n            return false;\n        }\n        if (!sex) {\n            dispatch({ type: \"errorMessage\", payload: \"Please indicate dog's sex (or select unknown).\" });\n            return false;\n        }\n        if (!alterationStatus) {\n            dispatch({ type: \"errorMessage\", payload: \"Please indicate dog's alteration status.\" });\n            return false;\n        }\n        if (!dateOfBirth) {\n            dispatch({ type: \"errorMessage\", payload: \"Please enter dog's date of birth.\" });\n            return false;\n        }\n        if (!description) {\n            dispatch({ type: \"errorMessage\", payload: \"Please enter dog description.\" });\n            return false;\n        }\n        if (!surrenderDate) {\n            dispatch({ type: \"errorMessage\", payload: \"Please enter dog's surrender date.\" });\n            return false;\n        }\n        if (!surrenderReason) {\n            dispatch({ type: \"errorMessage\", payload: \"Please enter reason for dog surrender.\" });\n            return false;\n        }\n        if (!surrenderedByAnimalControl) {\n            dispatch({ type: \"errorMessage\", payload: \"Please indicate whether dog was surrendered by Animal Control.\" });\n            return false;\n        }\n        return true;\n    }\n\n    return (\n        <>\n            {detailRedirect && <Redirect to={{ pathname: `/dog-details/${id}`, state: { from: \"/add-dog\" } }} />}\n            {dashboardRedirect && <Redirect to={{ pathname: \"/dog-dashboard\", state: { from: \"/add-dog\" } }} />}\n            <NavLinks isTrustedVolunteer={pageState.cookie.isTrustedVolunteer} />\n            <main className=\"container\">\n                <h1>Add Dog</h1>\n                <div style={{ overflow: showModal ? \"hidden\" : \"scroll\", clear: \"left\" }}>\n                    <h3>All fields are required unless otherwise stated.</h3>\n                    <form>\n                        <div className=\"form-unit\">\n                            <label htmlFor=\"dogName\">Dog Name:</label>\n                            <input type=\"text\"\n                                value={dogName}\n                                id=\"dogName\"\n                                onChange={({ target }) => {\n                                    dispatch({ type: 'dogName', payload: target.value })\n                                }}\n                            />\n                        </div>\n                        <div className=\"form-unit\">\n                            <label htmlFor=\"breed\">Dog Breed: (Please select at least one.)</label>\n                            <div className=\"scroll-box\">\n                                {availableBreeds.map(({ id, breed: b = \"\" }) => (\n                                    <p key={id}>\n                                        <input type=\"checkbox\"\n                                            value={b}\n                                            id={b.split(\" \").join(\"-\")}\n                                            onChange={({ target }) => {\n                                                dispatch({ type: 'breed', payload: { breed: target.value, checked: target.checked } })\n                                            }}\n                                            disabled={(breed[\"Mixed\"] || breed[\"Unknown\"]) && !(b === \"Mixed\" || b === \"Unknown\")}\n                                        /><label htmlFor={b} style={{ display: \"inline\", paddingLeft: \"10px\" }}>{b}</label>\n                                    </p>\n                                ))}\n                            </div>\n                        </div>\n                        <div className=\"form-unit\">\n                            <label htmlFor=\"sex\">Dog Sex:</label>\n                            <p>\n                                <input type=\"radio\"\n                                    id=\"male\"\n                                    name=\"sex\"\n                                    value=\"male\"\n                                    onChange={({ target }) => {\n                                        dispatch({ type: 'sex', payload: target.value })\n                                    }}\n                                />\n                                <label htmlFor=\"male\" style={{ display: \"inline\" }}>Male</label>\n                            </p>\n                            <p>\n                                <input type=\"radio\"\n                                    id=\"female\"\n                                    name=\"sex\"\n                                    value=\"female\"\n                                    onChange={({ target }) => {\n                                        dispatch({ type: 'sex', payload: target.value })\n                                    }}\n                                />\n                                <label htmlFor=\"female\" style={{ display: \"inline\" }}>Female</label>\n                            </p>\n                            <p>\n                                <input type=\"radio\"\n                                    id=\"unknown\"\n                                    name=\"sex\"\n                                    value=\"unknown\"\n                                    onChange={({ target }) => {\n                                        dispatch({ type: 'sex', payload: target.value })\n                                    }}\n                                />\n                                <label htmlFor=\"unknown\" style={{ display: \"inline\" }}>Unknown</label>\n                            </p>\n\n                        </div>\n                        <div className=\"form-unit\">\n                            <label htmlFor=\"alterationStatus\">Dog Alteration Status:</label>\n                            <p>\n                                <input type=\"radio\"\n                                    id=\"altered\"\n                                    name=\"alterationStatus\"\n                                    value={true}\n                                    onChange={({ target }) => {\n                                        dispatch({ type: 'alterationStatus', payload: target.value })\n                                    }}\n                                />\n                                <label htmlFor=\"altered\" style={{ display: \"inline\" }}>Spayed/Neutered</label>\n                            </p>\n                            <p>\n                                <input type=\"radio\"\n                                    id=\"unaltered\"\n                                    name=\"alterationStatus\"\n                                    value={false}\n                                    onChange={({ target }) => {\n                                        dispatch({ type: 'alterationStatus', payload: target.value })\n                                    }}\n                                />\n                                <label htmlFor=\"unaltered\" style={{ display: \"inline\" }}>Unaltered</label>\n                            </p>\n                        </div>\n                        <div className=\"form-unit\">\n                            <label htmlFor=\"dateOfBirth\">Dog Date of Birth:</label>\n                            <input type=\"date\"\n                                value={dateOfBirth}\n                                id=\"dateOfBirth\"\n                                onChange={({ target }) => {\n                                    dispatch({ type: 'dateOfBirth', payload: target.value })\n                                }}\n                            />\n                        </div>\n                        <div className=\"form-unit\">\n                            <label htmlFor=\"description\">Dog Description:</label>\n                            <textarea value={description}\n                                id=\"description\"\n                                onChange={({ target }) => {\n                                    dispatch({ type: 'description', payload: target.value })\n                                }}\n                            />\n                        </div>\n                        <div className=\"form-unit\">\n                            <label htmlFor=\"microchipId\">Dog Microchip ID: (leave blank if none)</label>\n                            <input type=\"text\"\n                                value={microchipId}\n                                id=\"microchipId\"\n                                onChange={({ target }) => {\n                                    dispatch({ type: 'microchipId', payload: target.value })\n                                }}\n                            />\n                        </div>\n                        <div className=\"form-unit\">\n                            <label htmlFor=\"surrenderDate\">Dog Surrender Date:</label>\n                            <input type=\"date\"\n                                value={surrenderDate}\n                                id=\"surrenderDate\"\n                                onChange={({ target }) => {\n                                    dispatch({ type: 'surrenderDate', payload: target.value })\n                                }}\n                            />\n                        </div>\n                        <div className=\"form-unit\">\n                            <label htmlFor=\"surrenderReason\">Dog Surrender Reason:</label>\n                            <textarea value={surrenderReason}\n                                id=\"surrenderReason\"\n                                onChange={({ target }) => {\n                                    dispatch({ type: 'surrenderReason', payload: target.value })\n                                }}\n                            />\n                        </div>\n                        <div className=\"form-unit\">\n                            <label htmlFor=\"surrenderedByAnimalControl\">Dog Was Surrendered by Animal Control:</label>\n                            <p>\n                                <input type=\"radio\"\n                                    id=\"was\"\n                                    name=\"surrenderedByAnimalControl\"\n                                    value=\"true\"\n                                    onChange={({ target }) => {\n                                        dispatch({ type: 'surrenderedByAnimalControl', payload: target.value })\n                                    }}\n                                />\n                                <label htmlFor=\"was\" style={{ display: \"inline\" }}>Yes</label>\n                            </p>\n                            <p>\n                                <input type=\"radio\"\n                                    id=\"wasNot\"\n                                    name=\"surrenderedByAnimalControl\"\n                                    value=\"false\"\n                                    onChange={({ target }) => {\n                                        dispatch({ type: 'surrenderedByAnimalControl', payload: target.value })\n                                    }}\n                                />\n                                <label htmlFor=\"wasNot\" style={{ display: \"inline\" }}>No</label>\n                            </p>\n                        </div>\n                        <button type=\"button\" onClick={addDog}>Submit</button><span style={{ color: \"red\", paddingLeft: \"10px\" }}>{errorMessage}</span>\n                    </form>\n                    {showModal && (\n                        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\", overflow: \"hidden\" }}>\n                            <div style={{ position: \"fixed\", top: 0, right: 0, bottom: 0, left: 0, zIndex: 10, backgroundColor: \"black\", opacity: 0.5 }}></div>\n                            <div style={{ position: \"fixed\", left: \"50%\", bottom: \"50%\", marginLeft: \"-300px\", marginBottom: \"-150px\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\", zIndex: 100, height: \"300px\", width: \"600px\", backgroundColor: \"white\" }}>\n                                <div style={{ marginBottom: \"20px\" }}>\n                                    <span>Dog successfully created.</span>\n                                </div>\n                                <div style={{ margin: \"20px\" }}>Would you like to go to</div>\n                                <div>\n                                    <button onClick={() => dispatch({ type: \"dogDetail\", payload: id })}>Dog Detail View</button>\n                                    <span style={{ margin: \"20px\" }}> or </span>\n                                    <button onClick={() => dispatch({ type: \"dogDashboard\" })}>Back to Dog Dashboard</button>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </main>\n        </>\n    );\n}\n\nexport default AddDog;","import React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { getData } from \"../services/api\";\nimport { isLoggedIn } from \"../services/auth\";\nimport { NavLinks } from \"../components\";\n\nconst AnimalControlReport = () => {\n\n    const [state, setState] = useState({\n        data: [],\n        errorMessage: \"\",\n        cookie: {},\n        drillDownRedirect: false\n    });\n\n    // check auth\n    useEffect(() => {\n        const cookie = isLoggedIn();\n        if (cookie.hasOwnProperty(\"isTrustedVolunteer\") && cookie.isTrustedVolunteer) {\n            setState({ ...state, cookie });\n        }\n        /* eslint-disable react-hooks/exhaustive-deps */\n    }, []);\n\n    useEffect(() => {\n        if (state.cookie.hasOwnProperty(\"isTrustedVolunteer\") && state.cookie.isTrustedVolunteer) {\n            getData(\"/animal-control-report\")\n                .then(({ target }) => {\n                    if (target.status === 200) {\n                        setState({ ...state, data: JSON.parse(target.response) });\n                    } else {\n                        setState({ ...state, errorMessage: target.response });\n                    }\n                })\n                .catch(error => {\n                    console.log(error);\n                    setState({ ...state, errorMessage: JSON.stringify(error) });\n                })\n        }\n    }, [state.cookie]);\n    return (\n        <>\n            {state.drillDownRedirect && <Redirect to={{ pathname: state.drillDownRedirect, state: { from: \"/animal-control-report\" } }} />}\n            <NavLinks isTrustedVolunteer={state.cookie.isTrustedVolunteer} />\n            <main className=\"container\">\n                <h1>Animal Control Report</h1>\n                <table>\n                    <thead>\n                        <td>Month</td>\n                        <td>Year</td>\n                        <td>Total Dogs Count</td>\n                        <td>Dogs 60 Days Count</td>\n                        <td>Expenses</td>\n                    </thead>\n                    <tbody>\n                        {state.data.length && (\n                            state.data.map(datum => {\n                                const expenseDollars = Math.floor(datum.expenses);\n                                const expenseCents = (() => {\n                                    const cents = Math.round((datum.expenses % 1) * 100);\n                                    return cents < 10 ? \"0\" + cents : cents;\n                                })();\n\n                                return (\n                                    <tr onClick={() => setState({ ...state, drillDownRedirect: `/animal-control-report/${datum.month.trim()}-${datum.year}` })}>\n                                        <td>{datum.month}</td>\n                                        <td>{datum.year}</td>\n                                        <td>{datum.dogsTotalCount}</td>\n                                        <td>{datum.dogsSixtyDaysCount}</td>\n                                        <td>${expenseDollars}.{expenseCents}</td>\n                                    </tr>\n                                )\n                            })\n                        )}\n                    </tbody>\n                </table>\n\n                {\n                    state.errorMessage && (\n                        <div styles={{ color: \"red\" }}>{state.errorMessage}</div>\n                    )\n                }\n            </main>\n        </>\n    );\n}\n\nexport default AnimalControlReport;","import React, { useEffect, useState } from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\n\nimport { getData } from \"../services/api\";\nimport { isLoggedIn } from \"../services/auth\";\nimport { NavLinks } from \"../components\";\n\nconst AnimalControlDrillDownReport = () => {\n\n    const [state, setState] = useState({\n        errorMessage: \"\",\n        cookie: {},\n        backRedirect: false\n    });\n\n    const [surrenderedData, setSurrenderedData] = useState([]);\n\n    const [adoptedData, setAdoptedData] = useState([]);\n\n    const { monthAndYear } = useParams();\n\n    const [month, year] = monthAndYear.split(\"-\");\n\n    // check auth\n    useEffect(() => {\n        const cookie = isLoggedIn();\n        if (cookie.hasOwnProperty(\"isTrustedVolunteer\") && cookie.isTrustedVolunteer) {\n            setState({ ...state, cookie });\n        }\n        /* eslint-disable react-hooks/exhaustive-deps */\n    }, []);\n\n    useEffect(() => {\n        if (state.cookie.hasOwnProperty(\"isTrustedVolunteer\") && state.cookie.isTrustedVolunteer) {\n            const startMonth = (() => {\n                switch (month) {\n                    case \"January\":\n                        return \"01\";\n                    case \"February\":\n                        return \"02\";\n                    case \"March\":\n                        return \"03\";\n                    case \"April\":\n                        return \"04\";\n                    case \"May\":\n                        return \"05\";\n                    case \"June\":\n                        return \"06\";\n                    case \"July\":\n                        return \"07\";\n                    case \"August\":\n                        return \"08\";\n                    case \"September\":\n                        return \"09\";\n                    case \"October\":\n                        return \"10\";\n                    case \"November\":\n                        return \"11\";\n                    case \"December\":\n                        return \"12\";\n                    default:\n                        throw new Error(\"Invalid month provided\");\n                }\n            })();\n            const endMonth = (() => {\n                switch (month) {\n                    case \"January\":\n                        return \"02\";\n                    case \"February\":\n                        return \"03\";\n                    case \"March\":\n                        return \"04\";\n                    case \"April\":\n                        return \"05\";\n                    case \"May\":\n                        return \"06\";\n                    case \"June\":\n                        return \"07\";\n                    case \"July\":\n                        return \"08\";\n                    case \"August\":\n                        return \"09\";\n                    case \"September\":\n                        return \"10\";\n                    case \"October\":\n                        return \"11\";\n                    case \"November\":\n                        return \"12\";\n                    case \"December\":\n                        return \"01\";\n                    default:\n                        throw new Error(\"Invalid month provided\");\n                }\n            })();\n\n            const endYear = (() => {\n                return month === \"December\" ? year + 1 : year;\n            })();\n\n            getData(`/animal-control-report-drilldown-surrendered?startDate=${year + \"-\" + startMonth + \"-01\"}&endDate=${endYear + \"-\" + endMonth + \"-01\"}`)\n                .then(({ target }) => {\n                    const surrenderedData = JSON.parse(target.response);\n                    if (target.status === 200 && surrenderedData.length) {\n                        setSurrenderedData(surrenderedData);\n                    }\n                })\n                .catch(error => {\n                    console.log(error);\n                    setState({ ...state, errorMessage: error });\n                });\n\n            getData(`/animal-control-report-drilldown-adopted?startDate=${year + \"-\" + startMonth + \"-01\"}&endDate=${endYear + \"-\" + endMonth + \"-01\"}`)\n                .then(({ target }) => {\n                    const adoptedData = JSON.parse(target.response);\n                    if (target.status === 200 && adoptedData.length) {\n                        setAdoptedData(adoptedData);\n                    }\n                })\n                .catch(error => {\n                    console.log(error);\n                    setState({ ...state, errorMessage: error });\n                })\n        }\n    }, [state.cookie]);\n\n    return (\n        <>\n            {state.backRedirect && <Redirect to={{ pathname: \"/animal-control-report\", state: { from: `/animal-control-report/${month}-${year}` } }} />}\n            <NavLinks isTrustedVolunteer={state.cookie.isTrustedVolunteer} />\n            <main className=\"container\">\n                <h1>Animal Control Drill Down Report</h1>\n                <button type=\"button\" onClick={() => setState({ ...state, backRedirect: true })} className=\"back\">Back to Animal Control Report</button>\n                <h3>Dogs Surrendered</h3>\n                <table>\n                    <thead>\n                        <td>Dog ID</td>\n                        <td>Breed</td>\n                        <td>Sex</td>\n                        <td>Alteration Status</td>\n                        <td>Microchip ID</td>\n                        <td>Surrender Date</td>\n                    </thead>\n                    <tbody>\n                        {surrenderedData.length > 0 && (\n                            surrenderedData.map(dog => {\n\n                                return (\n                                    <tr>\n                                        <td>{dog.dogId}</td>\n                                        <td>{dog.breed}</td>\n                                        <td>{dog.sex}</td>\n                                        <td>{dog.alterationStatus ? \"Altered\" : \"Not yet altered\"}</td>\n                                        <td>{dog.microchipId || \"None recorded\"}</td>\n                                        <td>{dog.surrenderDate}</td>\n                                    </tr>\n                                )\n                            })\n                        )}\n                    </tbody>\n                </table>\n\n                <h3>Dogs Adopted</h3>\n                <table>\n                    <thead>\n                        <td>Dog ID</td>\n                        <td>Breed</td>\n                        <td>Sex</td>\n                        <td>Alteration Status</td>\n                        <td>Microchip ID</td>\n                        <td>Surrender Date</td>\n                        <td>Days in Rescue</td>\n                    </thead>\n                    <tbody>\n                        {adoptedData.length > 0 && (\n                            adoptedData.map(dog => {\n                                console.log(\"running\")\n                                const surrendered = new Date(dog.surrenderDate);\n                                const adopted = new Date(dog.adoptionDate);\n                                const daysInShelter = Math.round((adopted - surrendered) / (1000 * 60 * 60 * 24));\n                                return (\n                                    <tr>\n                                        <td>{dog.dogId}</td>\n                                        <td>{dog.breed}</td>\n                                        <td>{dog.sex}</td>\n                                        <td>{dog.alterationStatus ? \"Altered\" : \"Not yet altered\"}</td>\n                                        <td>{dog.microchipId || \"None recorded\"}</td>\n                                        <td>{dog.surrenderDate}</td>\n                                        <td>{daysInShelter}</td>\n                                    </tr>\n                                )\n                            })\n                        )}\n                    </tbody>\n                </table>\n\n                {\n                    state.errorMessage && (\n                        <div className=\"error-message\">{state.errorMessage}</div>\n                    )\n                }\n            </main>\n        </>\n    );\n}\n\nexport default AnimalControlDrillDownReport;","import React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { getData } from \"../services/api\";\nimport { isLoggedIn } from \"../services/auth\";\nimport { NavLinks } from \"../components\";\n\nconst DogDashboard = () => {\n\n    const CAPACITY = 15;\n    const [state, setState] = useState({\n        dogs: [],\n        addDogRedirect: false,\n        addApplicationRedirect: false,\n        showAvailable: true,\n        showUnavailable: true,\n        dogDetailRedirect: \"\",\n        loginRedirect: false,\n        cookie: {}\n    });\n\n    // check auth\n    useEffect(() => {\n        const cookie = isLoggedIn();\n        if (cookie.hasOwnProperty(\"isTrustedVolunteer\") && cookie.isTrustedVolunteer !== null) {\n            setState({ ...state, cookie });\n        }\n        /* eslint-disable react-hooks/exhaustive-deps */\n    }, []);\n\n    const setShowAvailable = () => {\n        setState({ ...state, showAvailable: !state.showAvailable });\n    }\n\n    const setShowUnavailable = () => {\n        setState({ ...state, showUnavailable: !state.showUnavailable });\n    }\n\n    // get data for dogs currently in the shelter\n    useEffect(() => {\n        if (state.cookie.hasOwnProperty(\"isTrustedVolunteer\") && state.cookie.isTrustedVolunteer !== null) {\n            getData(\"/dog?current=true\")\n                .then(({ target }) => {\n                    setState({ ...state, dogs: JSON.parse(target.response) });\n                })\n                .catch(error => {\n                    console.log(error);\n                })\n        }\n    }, [state.cookie]);\n\n    const addApplication = () => {\n        setState({ ...state, addApplicationRedirect: true });\n    }\n\n    const addDog = () => {\n        setState({ ...state, addDogRedirect: true });\n    }\n\n    const {\n        addApplicationRedirect,\n        addDogRedirect,\n        dogs,\n        showAvailable,\n        showUnavailable,\n        dogDetailRedirect,\n        cookie\n    } = state;\n\n    return (\n        <>\n            {addApplicationRedirect && <Redirect to={{ pathname: \"/add-application\", state: { from: \"/dog-dashboard\" } }} />}\n            {addDogRedirect && <Redirect to={{ pathname: \"/add-dog\", state: { from: \"/dog-dashboard\" } }} />}\n            {dogDetailRedirect && <Redirect to={{ pathname: dogDetailRedirect, state: { from: \"/dog-dashboard\" } }} />}\n\n            <NavLinks isTrustedVolunteer={cookie.isTrustedVolunteer} />\n            <main className=\"container\">\n                <h1>Dog Dashboard</h1>\n\n                <ControlPanel\n                    addApplication={addApplication}\n                    addDog={addDog}\n                    availableSpaces={CAPACITY - dogs.length}\n                    showAvailable={showAvailable}\n                    setShowAvailable={setShowAvailable}\n                    showUnavailable={showUnavailable}\n                    setShowUnavailable={setShowUnavailable}\n                />\n                {\n                    dogs.length ? (\n                        <table>\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th>Breed</th>\n                                    <th>Sex</th>\n                                    <th>Alteration Status</th>\n                                    <th>Age</th>\n                                    <th>Adoptability Status</th>\n                                    <th>Date Surrendered</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {dogs.map((dog, index) => {\n                                    const ONE_DAY = 1000 * 60 * 60 * 24;\n                                    const now = Date.now();\n                                    const then = Date.parse(dog.dateOfBirth);\n                                    const years = Math.floor((now - then) / (ONE_DAY * 365));\n                                    const yearsStr = `${years}${!years || years > 1 ? \" years \" : \" year \"}`;\n                                    const months = Math.floor((now - then) / (ONE_DAY * 30)) % 12;\n                                    const monthsStr = `${months}${!months || months > 1 ? \" months\" : \" month\"}`;\n                                    const isAvailable = dog.microchipId.String && dog.alterationStatus;\n                                    if ((isAvailable && showAvailable) || (!isAvailable && showUnavailable)) {\n                                        return (\n                                            <tr key={index} onClick={() => setState({ ...state, dogDetailRedirect: `/dog-details/${dog.id}` })}>\n                                                <td>{dog.name}</td>\n                                                <td>{dog.breed.join(\"/\")}</td>\n                                                <td>{dog.sex}</td>\n                                                <td>{dog.alterationStatus ? \"Altered\" : \"Not yet altered\"}</td>\n                                                <td>{yearsStr}{monthsStr}</td>\n                                                <td>{isAvailable ? \"Available\" : \"Not yet available\"}</td>\n                                                <td>{(new Date(dog.surrenderDate)).toDateString()}</td>\n                                            </tr>\n                                        );\n                                    }\n                                    return null;\n                                })}\n                            </tbody>\n\n                        </table>\n                    ) : (<h3>There are not any dogs currently in the shelter.</h3>)\n                }\n            </main>\n        </>\n    );\n};\n\nconst ControlPanel = ({\n    addApplication,\n    addDog,\n    availableSpaces,\n    showAvailable,\n    setShowAvailable,\n    showUnavailable,\n    setShowUnavailable,\n    logout\n}) => {\n    return (\n        <div className=\"control-panel\">\n            <h3>Currently Available Spaces: {availableSpaces}</h3>\n            <div>\n                <p>\n                    <input\n                        type=\"checkbox\"\n                        checked={showAvailable}\n                        id=\"showAvailable\"\n                        onChange={setShowAvailable}\n                    />\n                    <label\n                        htmlFor=\"showAvailable\"\n                        style={{ paddingLeft: \"10px\" }}\n                    >Show dogs available for adoption</label>\n                </p>\n                <p>\n                    <input\n                        type=\"checkbox\"\n                        checked={showUnavailable}\n                        id=\"showUnavailable\"\n                        onChange={setShowUnavailable}\n                    />\n                    <label\n                        htmlFor=\"showUnavailable\"\n                        style={{ paddingLeft: \"10px\" }}\n                    >Show dogs NOT available for adoption</label>\n                </p>\n            </div>\n            <div>\n                <p>\n                    {availableSpaces && <button onClick={addDog}>Add Dog</button>}\n                </p>\n                <p>\n                    <button onClick={addApplication}>Add Adoption Application</button>\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport default DogDashboard;","import React, { useEffect, useReducer, useState } from \"react\";\nimport { useParams, Redirect } from \"react-router-dom\";\n\nimport { getData, sendData } from \"../services/api\";\nimport { isLoggedIn } from \"../services/auth\";\nimport { NavLinks } from \"../components\";\n\nconst DogDetails = () => {\n\n    const [pageState, setPageState] = useState({\n        loginRedirect: false,\n        cookie: {}\n    });\n\n    // check auth\n    useEffect(() => {\n        const cookie = isLoggedIn();\n        if (cookie.hasOwnProperty(\"isTrustedVolunteer\") && cookie.isTrustedVolunteer !== null) {\n            setPageState({ ...pageState, cookie });\n        }\n        /* eslint-disable react-hooks/exhaustive-deps */\n    }, []);\n\n    const { dogId } = useParams();\n\n    const reducer = (state, action) => {\n        switch (action.type) {\n            case \"setDog\":\n                return { ...state, ...action.payload };\n            case \"sex\":\n                return { ...state, sex: action.payload };\n            case \"alterationStatus\":\n                return { ...state, alterationStatus: action.payload === \"true\" };\n            case \"microchipId\":\n                return { ...state, microchipId: action.payload };\n            case \"expenses\":\n                return { ...state, expenses: action.payload };\n            case \"availableBreeds\":\n                return { ...state, availableBreeds: action.payload };\n            case \"errorMessage\":\n                return { ...state, errorMessage: action.payload };\n            case \"showModal\":\n                return { ...state, id: action.payload, showModal: true };\n            case \"dogDashboard\":\n                return { ...state, dashboardRedirect: true };\n            case \"breed\":\n                const newBreed = (() => {\n                    if (action.payload.checked) {\n                        if (action.payload.value === \"Mixed\" || action.payload.value === \"Unknown\") {\n                            const falseBreeds = Object.keys(state.breed).reduce((breeds, breed) => {\n                                breeds[breed] = false;\n                                return breeds;\n                            }, {});\n                            return { ...falseBreeds, [action.payload.value]: true };\n                        } else {\n                            return { ...state.breed, [action.payload.value]: true };\n                        }\n                    } else {\n                        return { ...state.breed, [action.payload.value]: false }\n                    }\n                })();\n                return { ...state, breed: newBreed };\n            case \"canEditBreeds\":\n                return { ...state, canEditBreeds: true };\n            case \"canEditSex\":\n                return { ...state, canEditSex: true };\n            case \"canEditAlterationStatus\":\n                return { ...state, canEditAlterationStatus: true };\n            case \"canEditMicrochipId\":\n                return { ...state, canEditMicrochipId: true };\n            case \"showAddExpenseForm\":\n                return { ...state, showAddExpenseForm: action.payload };\n            case \"newExpenseVendor\":\n                return { ...state, newExpense: { ...(state.newExpense), vendor: action.payload } };\n            case \"newExpenseDate\":\n                return { ...state, newExpense: { ...(state.newExpense), date: action.payload } };\n            case \"newExpenseAmount\":\n                if (typeof +action.payload !== \"number\" || +action.payload < 0) {\n                    return { ...state, expenseErrorMessage: \"Please enter a valid numeric amount.\" }\n                } else {\n                    if (state.expenseErrorMessage === \"Please enter a valid numeric amount.\") {\n                        return { ...state, expenseErrorMessage: \"\" }\n                    }\n                }\n                return { ...state, newExpense: { ...(state.newExpense), amountInCents: Math.floor(+action.payload * 100) } };\n            case \"newExpenseDescription\":\n                return { ...state, newExpense: { ...(state.newExpense), description: action.payload } };\n            case \"resetNewExpense\":\n                return { ...state, newExpense: { dogIdFk: +dogId } };\n            case \"addExpense\":\n                return { ...state, expenses: [...(state.expenses), action.payload] };\n            case \"expenseErrorMessage\":\n                return { ...state, expenseErrorMessage: action.payload }\n            case \"addAdoptionRedirect\":\n                return { ...state, addAdoptionRedirect: true };\n            case \"isAdoptable\":\n                return { ...state, isAdoptable: true };\n            default:\n                throw new Error();\n        }\n    };\n\n    const [dog, dispatch] = useReducer(\n        reducer,\n        {\n            name: \"\",\n            breed: {},\n            sex: null,\n            alterationStatus: null,\n            dateOfBirth: \"\",\n            description: \"\",\n            microchipId: \"\",\n            surrenderDate: \"\",\n            surrenderReason: \"\",\n            surrenderedByAnimalControl: null,\n            volunteerId: -1,\n            expenses: [],\n            errorMessage: \"\",\n            showModal: false,\n            canEditBreeds: false,\n            canEditSex: false,\n            canEditAlterationStatus: false,\n            canEditMicrochipId: false,\n            showAddExpenseForm: false,\n            newExpense: { dogIdFk: +dogId },\n            expenseErrorMessage: \"\",\n            addAdoptionRedirect: false,\n            isAdoptable: false\n        });\n\n    useEffect(() => {\n        if (pageState.cookie.hasOwnProperty(\"isTrustedVolunteer\") && pageState.cookie.isTrustedVolunteer !== null) {\n            const breedsObj = {};\n            getData(\"/breed\")\n                .then(({ target }) => {\n                    JSON.parse(target.response).forEach(breed => {\n                        breedsObj[breed.breed] = false;\n                    });\n                }).then(() => {\n                    getData(`/dog/${dogId}`)\n                        .then(({ target }) => {\n                            const dog = JSON.parse(target.response);\n                            dog.breed.forEach(breed => {\n                                breedsObj[breed] = true;\n                            });\n                            dog.breed = breedsObj;\n\n                            // derive permissions\n                            if (dog.breed[\"Unknown\"] || dog.breed[\"Mixed\"]) {\n                                dispatch({ type: \"canEditBreeds\" });\n                            }\n                            if (dog.sex === \"unknown\") {\n                                dispatch({ type: \"canEditSex\" });\n                            }\n                            if (!dog.alterationStatus) {\n                                dispatch({ type: \"canEditAlterationStatus\" });\n                            }\n                            dog.microchipId = dog.microchipId.String;\n                            if (!dog.microchipId) {\n                                dispatch({ type: \"canEditMicrochipId\" });\n                            }\n\n                            if (dog.microchipId && dog.alterationStatus) {\n                                dispatch({ type: \"isAdoptable\" });\n                            }\n\n                            // set dog\n                            dispatch({ type: \"setDog\", payload: dog });\n                        })\n                })\n                .catch(error => {\n                    dispatch({ type: \"errorMessage\", payload: error });\n                    console.log(\"error calling the API:\", error);\n                })\n        }\n    }, [dogId, pageState.cookie]);\n\n    const updateDog = () => {\n        const dogData = {\n            breed: Object.keys(dog.breed).filter(breed => {\n                return dog.breed[breed];\n            }),\n            sex: dog.sex,\n            alterationStatus: dog.alterationStatus\n        };\n        dogData.microchipId = { \"String\": dog.microchipId, \"Valid\": dog.microchipId.length ? true : false };\n        if (!Object.keys(dog.breed).length) {\n            dispatch({ type: \"errorMessage\", payload: \"Please select at least one dog breed.\" });\n            return;\n        }\n        sendData(dogData, `/dog/${dogId}`, \"put\")\n            .then(({ target }) => {\n                if (target.status === 204) {\n                    // show success modal\n                    /* eslint-disable no-restricted-globals */\n                    location.reload();\n                } else {\n                    console.log(\"error adding dog (non-200):\", target.response);\n                    dispatch({ type: \"errorMessage\", payload: target.response });\n                }\n            })\n            .catch(error => {\n                // show error modal\n                console.log(\"error adding dog (catch):\", error);\n                dispatch({ type: \"errorMessage\", payload: JSON.parse(error) });\n            });\n    }\n\n    const addExpense = () => {\n        sendData(dog.newExpense, `/expense`)\n            .then(({ target }) => {\n                if (target.status === 201) {\n                    dispatch({ type: \"resetNewExpense\" });\n                    dispatch({ type: \"showAddExpenseForm\", payload: false });\n                    dispatch({ type: \"addExpense\", payload: JSON.parse(target.response) });\n                    dispatch({ type: \"expenseErrorMessage\", payload: \"\" });\n                } else {\n                    console.log(target.response);\n                    dispatch({ type: \"expenseErrorMessage\", payload: target.response });\n                }\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch({ type: \"expenseErrorMessage\", payload: error });\n            });\n    }\n\n    const Checkbox = ({ breed }) => {\n        return (\n            <p key={breed}>\n                <input\n                    type=\"checkbox\"\n                    value={breed}\n                    name={breed.split(\" \").join(\"-\")}\n                    checked={dog.breed[breed]}\n                    onChange={({ target }) => {\n                        dispatch({ type: 'breed', payload: target })\n                    }}\n                    disabled={(dog.breed[\"Mixed\"] || dog.breed[\"Unknown\"]) && !(breed === \"Mixed\" || breed === \"Unknown\")}\n                /><label htmlFor={breed} style={{ display: \"inline\", paddingLeft: \"10px\" }}>{breed}</label>\n            </p>\n        )\n    }\n\n    return (\n        <>\n            {dog.dashboardRedirect && <Redirect to={{ pathname: `/dog-dashboard` }} />}\n            {dog.addAdoptionRedirect && <Redirect to={{ pathname: `/add-adoption`, state: { dog } }} />}\n            <NavLinks isTrustedVolunteer={pageState.cookie.isTrustedVolunteer} />\n            <main className=\"container\">\n                <h1>Dog Details</h1>\n                <button type=\"button\" onClick={() => dispatch({ type: \"dogDashboard\" })} className=\"back\">Back to Dog Dashboard</button>\n                {dog.isAdoptable && pageState.cookie.isTrustedVolunteer &&\n                    <button type=\"button\" onClick={() => dispatch({ type: \"addAdoptionRedirect\" })} className=\"back\">Add Adoption</button>}\n                <form>\n                    <div className=\"form-unit\">\n                        <span>Name: {dog.name}</span>\n                    </div>\n                    {dog.canEditBreeds ? (\n                        <div className=\"form-unit\">\n                            <label htmlFor=\"breed\">Dog Breed: (Please select at least one.)</label>\n                            {Object.keys(dog.breed).map(b => {\n                                return <Checkbox breed={b} key={b} />\n                            })}\n                        </div>\n                    ) : (\n                            <div className=\"form-unit\">\n                                <span>Breed: {Object.keys(dog.breed).filter(breed => {\n                                    return dog.breed[breed];\n                                }).join(\"/\")}</span>\n                            </div>\n                        )}\n                    <div className=\"form-unit\">\n                        {dog.canEditSex ? (\n                            <>\n                                <label htmlFor=\"sex\">Dog Sex:</label>\n                                <p>\n                                    <input type=\"radio\"\n                                        id=\"male\"\n                                        name=\"sex\"\n                                        value=\"male\"\n                                        onChange={({ target }) => {\n                                            dispatch({ type: \"sex\", payload: target.value })\n                                        }}\n                                        checked={dog.sex === \"male\"}\n                                    />\n                                    <label htmlFor=\"male\" style={{ display: \"inline\" }}>Male</label>\n                                </p>\n                                <p>\n                                    <input type=\"radio\"\n                                        id=\"female\"\n                                        name=\"sex\"\n                                        value=\"female\"\n                                        onChange={({ target }) => {\n                                            dispatch({ type: \"sex\", payload: target.value })\n                                        }}\n                                        checked={dog.sex === \"female\"}\n                                    />\n                                    <label htmlFor=\"female\" style={{ display: \"inline\" }}>Female</label>\n                                </p>\n                                <p>\n                                    <input type=\"radio\"\n                                        id=\"unknown\"\n                                        name=\"sex\"\n                                        value=\"unknown\"\n                                        onChange={({ target }) => {\n                                            dispatch({ type: 'sex', payload: target.value })\n                                        }}\n                                        checked={dog.sex === \"unknown\"}\n                                    />\n                                    <label htmlFor=\"unknown\" style={{ display: \"inline\" }}>Unknown</label>\n                                </p>\n                            </>\n                        ) : (\n                                <span>Sex: {dog.sex}</span>\n                            )}\n                    </div>\n                    <div className=\"form-unit\">\n                        {dog.canEditAlterationStatus ? (\n                            <>\n                                <label htmlFor=\"alterationStatus\">Dog Alteration Status:</label>\n                                <p>\n                                    <input type=\"radio\"\n                                        id=\"altered\"\n                                        name=\"alterationStatus\"\n                                        value={true}\n                                        onChange={({ target }) => {\n                                            dispatch({ type: 'alterationStatus', payload: target.value })\n                                        }}\n                                        checked={dog.alterationStatus}\n                                    />\n                                    <label htmlFor=\"altered\" style={{ display: \"inline\" }}>Spayed/Neutered</label>\n                                </p>\n                                <p>\n                                    <input type=\"radio\"\n                                        id=\"unaltered\"\n                                        name=\"alterationStatus\"\n                                        value={false}\n                                        onChange={({ target }) => {\n                                            dispatch({ type: 'alterationStatus', payload: target.value })\n                                        }}\n                                        checked={!dog.alterationStatus}\n                                    />\n                                    <label htmlFor=\"unaltered\" style={{ display: \"inline\" }}>Unaltered</label>\n                                </p>\n                            </>\n                        ) : (\n                                <span>Alteration Status: {dog.alterationStatus ? \"Spayed/Neutered\" : \"Unaltered\"}</span>\n                            )}\n                    </div>\n                    <div className=\"form-unit\">\n                        <span>Date of Birth: {new Date(dog.dateOfBirth).toDateString()}</span>\n                    </div>\n                    <div className=\"form-unit\">\n                        <span>Description: {dog.description}</span>\n                    </div>\n                    <div className=\"form-unit\">\n                        {dog.canEditMicrochipId ? (\n                            <>\n                                <label>Microchip ID:</label>\n                                <input\n                                    type=\"text\"\n                                    onChange={({ target }) => {\n                                        dispatch({ type: \"microchipId\", payload: target.value })\n                                    }} />\n                            </>\n                        ) : (\n                                <span>Microchip ID: {dog.microchipId}</span>\n                            )}\n                    </div>\n                    <div className=\"form-unit\">\n                        <span>Surrender Date: {new Date(dog.surrenderDate).toDateString()}</span>\n                    </div>\n                    <div className=\"form-unit\">\n                        <span>Surrender Reason: {dog.surrenderReason}</span>\n                    </div>\n                    <div className=\"form-unit\">\n                        <span>Surrender was by Animal Control: {dog.surrenderedByAnimalControl ? \"Yes\" : \"No\"}</span>\n                    </div>\n                    <div className=\"form-unit\">\n                        <span>Surrender recorded by volunteer {dog.volunteerId}</span>\n                    </div>\n                    {(\n                        dog.canEditBreeds || dog.canEditSex ||\n                        dog.canEditAlterationStatus || dog.canEditMicrochipId\n                    ) && (\n                            <>\n                                <button type=\"button\" onClick={updateDog}>Update Dog</button>\n                                <span style={{ color: \"red\", paddingLeft: \"10px\" }}>{dog.errorMessage}</span>\n                            </>\n                        )}\n                </form>\n                <button type=\"button\" onClick={() => dispatch({ type: \"dogDashboard\" })}> Back to Dog Dashboard</button >\n                <hr></hr>\n                <h1>Expenses</h1>\n                <h3>Dog Total : ${(dog.expenses.reduce((totalExpense, currentExpense) => totalExpense += currentExpense.amountInCents, 0)) / 100}</h3>\n                {dog.showAddExpenseForm ? (\n                    <div>\n                        <h3>New Expense</h3>\n                        <form>\n                            <div className=\"form-unit\">\n                                <label id=\"expense-date\">Date</label>\n                                <input\n                                    type=\"date\"\n                                    onChange={\n                                        ({ target }) => dispatch({ type: \"newExpenseDate\", payload: target.value })\n                                    } />\n                            </div>\n                            <div className=\"form-unit\">\n                                <label id=\"expense-vendor\">Vendor</label>\n                                <input\n                                    type=\"text\"\n                                    onChange={\n                                        ({ target }) => dispatch({ type: \"newExpenseVendor\", payload: target.value })\n                                    } />\n                            </div>\n                            <div className=\"form-unit\">\n                                <label id=\"expense-amount\">Amount (in dollars)</label>\n                            $<input\n                                    type=\"number\"\n                                    step={0.01}\n                                    min={0}\n                                    onChange={({ target }) => {\n                                        if (typeof +target.value === \"number\") {\n                                            dispatch({ type: \"newExpenseAmount\", payload: target.value });\n                                        }\n                                    }\n                                    } />\n                            </div>\n                            <div className=\"form-unit\">\n                                <label id=\"expense-description\">Description</label>\n                                <input\n                                    type=\"text\"\n                                    onChange={\n                                        ({ target }) => dispatch({ type: \"newExpenseDescription\", payload: target.value })\n                                    } />\n                            </div>\n                            <button type=\"button\" onClick={addExpense}>Submit Expense</button>\n                            {dog.expenseErrorMessage && <span style={{ color: \"red\", paddingLeft: \"10px\" }}>{dog.expenseErrorMessage}</span>}\n                        </form>\n                    </div>\n                ) : (\n                        <>\n                            <button type=\"button\" onClick={() => dispatch({ type: \"showAddExpenseForm\", payload: true })}>Add New Expense</button>\n                            {dog.expenseErrorMessage && <span style={{ color: \"red\", paddingLeft: \"10px\" }}>{dog.expenseErrorMessage}</span>}\n                        </>\n                    )}\n\n                {\n                    dog.expenses.length ? (\n                        dog.expenses.map((expense, index) => (\n                            <div key={index} className=\"form-unit\">\n                                <div>\n                                    <span>Date: {new Date(expense.date).toDateString()}</span>\n                                </div>\n                                <div>\n                                    <span>Vendor: {expense.vendor}</span>\n                                </div>\n                                <div>\n                                    <span>Description: {expense.description}</span>\n                                </div>\n                                <div>\n                                    <span>Cost: ${expense.amountInCents / 100}</span>\n                                </div>\n                            </div>\n                        ))\n                    ) : (<div>No expenses entered yet.</div>)\n                }\n            </main>\n        </>\n    );\n}\n\nexport default DogDetails;","import React, { useEffect, useState } from \"react\";\n\nimport { getData } from \"../services/api\";\nimport { isLoggedIn } from \"../services/auth\";\nimport { NavLinks } from \"../components\";\n\nconst ExpenseAnalysis = () => {\n\n    const [state, setState] = useState({\n        data: [],\n        errorMessage: \"\",\n        loginRedirect: false,\n        cookie: {}\n    });\n\n    // check auth\n    useEffect(() => {\n        const cookie = isLoggedIn();\n        if (cookie.hasOwnProperty(\"isTrustedVolunteer\") && cookie.isTrustedVolunteer) {\n            setState({ ...state, cookie });\n        }\n        /* eslint-disable react-hooks/exhaustive-deps */\n    }, []);\n\n    useEffect(() => {\n        if (state.cookie.hasOwnProperty(\"isTrustedVolunteer\") && state.cookie.isTrustedVolunteer) {\n            getData(\"/expense-analysis\")\n                .then(({ target }) => {\n                    if (target.status === 200) {\n                        setState({ ...state, data: JSON.parse(target.response) });\n                    } else {\n                        setState({ ...state, errorMessage: target.response });\n                    }\n                })\n                .catch(error => {\n                    console.log(error);\n                    setState({ ...state, errorMessage: JSON.stringify(error) });\n                })\n        }\n    }, [state.cookie]);\n    return (\n        <>\n            <NavLinks isTrustedVolunteer={state.cookie.isTrustedVolunteer} />\n            <main className=\"container\">\n                <h1>Expense Analysis</h1>\n                {\n\n                    state.data.length ?\n                        // && (return <div className=\"form-unit\">{JSON.stringify(datum)}</div>\n\n                        <table>\n                            <thead>\n                                <tr>\n                                    <th>Vendor</th>\n                                    <th>Total Spending in dollars</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    state.data.map((data, index) => {\n                                        return (<tr>\n                                            <td>\n                                                {data.vendor}\n                                            </td>\n                                            <td>\n                                                ${data.totalSpending / 100}\n                                            </td>\n                                        </tr>)\n                                    })\n                                }\n                            </tbody>\n                        </table>\n\n                        :\n                        <p>No expenses found</p>\n\n                }\n\n                {\n                    state.errorMessage && (\n                        <div styles={{ color: \"red\" }}>{state.errorMessage}</div>\n                    )}\n            </main>\n        </>\n    );\n}\n\nexport default ExpenseAnalysis;","import React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { getData, sendData } from \"../services/api\";\nimport { NavLinks } from \"../components\";\n\nconst Login = () => {\n    const [state, setState] = useState({\n        email: \"\",\n        password: \"\",\n        errorMessage: \"\",\n        redirect: false\n    });\n\n    useEffect(() => {\n        getData(\"/logout\")\n            .then(data => {\n                setState({ ...state, loginRedirect: true });\n            })\n            .catch(error => {\n                console.log(error);\n            })\n        /* eslint-disable react-hooks/exhaustive-deps */\n    }, [])\n\n    const handleEmailChange = ({ target }) => {\n        setState({ ...state, email: target.value });\n    }\n\n    const handlePasswordChange = ({ target }) => {\n        setState({ ...state, password: target.value });\n    }\n\n    const submitForm = form => {\n        const { email, password } = state;\n\n        if (password && email.indexOf(\"@\") !== 0 && email.length > 4) {\n            sendData({ email, password }, \"/login\")\n                .then(data => {\n                    const { target } = data;\n                    if (target.status === 200) {\n                        // redirect to Dog Dashboard\n                        const volunteer = JSON.parse(target.response);\n                        localStorage.setItem(\"volunteerId\", volunteer.id);\n                        localStorage.setItem(\"isTrusted\", volunteer.isTrusted);\n                        setState({ ...state, redirect: true });\n                    } else {\n                        setState({ ...state, errorMessage: target.response })\n                    }\n                })\n                .catch(error => {\n                    setState({ ...state, errorMessage: error })\n                });\n        } else {\n            if (!password) {\n                setState({ ...state, errorMessage: \"Please enter valid password.\" })\n            } else {\n                setState({ ...state, errorMessage: \"Please enter valid email address.\" })\n            }\n        }\n    }\n    return (\n        <>\n            <NavLinks titleOnly={true} />\n            <main className=\"container\">\n                <h1>Login</h1>\n\n                <form action=\"/login\" method=\"post\">\n\n                    <div className=\"form-unit\">\n                        <label htmlFor=\"email\">Email:</label>\n                        <input type=\"email\" id=\"email\" name=\"email\" onChange={handleEmailChange} value={state.email} autoComplete=\"username\" />\n                    </div>\n\n                    <div className=\"form-unit\">\n                        <label htmlFor=\"password\">Password:</label>\n                        <input type=\"password\" id=\"password\" name=\"password\" onChange={handlePasswordChange} value={state.password} autoComplete=\"current-password\" />\n                    </div>\n\n                    <button type=\"button\" onClick={submitForm}>Log In</button>\n\n                </form>\n                {state.errorMessage && <div style={{ color: \"red\" }}>{state.errorMessage}</div>}\n                {state.redirect && <Redirect to={{ pathname: \"/dog-dashboard\", state: { from: \"/login\" } }} />}\n            </main>\n        </>\n    );\n};\n\nexport default Login;","import React, { useEffect, useState } from \"react\";\n\nimport { getData } from \"../services/api\";\nimport { isLoggedIn } from \"../services/auth\";\nimport { NavLinks } from \"../components\";\n\nfunction getMonthName(monthNum) {\n    switch (monthNum) {\n        case 0: return \"January\"\n        case 1: return \"February\"\n        case 2: return \"March\"\n        case 3: return \"April\"\n        case 4: return \"May\"\n        case 5: return \"June\"\n        case 6: return \"July\"\n        case 7: return \"August\"\n        case 8: return \"September\"\n        case 9: return \"October\"\n        case 10: return \"November\"\n        case 11: return \"December\"\n\n        default: return \"month\"\n\n    }\n}\n\nfunction GetMonthOffset(offset) {\n    let today = new Date()\n    today.setMonth(today.getMonth() + offset)\n\n    return getMonthName(today.getMonth()) + \" \" + today.getFullYear()\n}\n\nconst MonthlyAdoptionReport = () => {\n\n    const [state, setState] = useState({\n        data: {},\n        acc:{},\n        errorMessage: \"\",\n        loginRedirect: false,\n        cookie: {}\n    });\n\n    // check auth\n    useEffect(() => {\n        const cookie = isLoggedIn();\n        if (cookie.hasOwnProperty(\"isTrustedVolunteer\") && cookie.isTrustedVolunteer) {\n            setState({ ...state, cookie });\n        }\n        /* eslint-disable react-hooks/exhaustive-deps */\n    }, []);\n\n    useEffect(() => {\n        for (let i = -11; i <= 0; i++) {\n            UpdateTables(i)\n        }\n\n    }, [state.cookie]);\n\n    function UpdateTables(ind) {\n\n        if (state.cookie.hasOwnProperty(\"isTrustedVolunteer\") && state.cookie.isTrustedVolunteer) {\n            getData(\"/monthly-adoption-report?month=\" + ind)\n                .then(({ target }) => {\n                    if (target.status === 200) {\n\n                        const dataDict = state.data\n                        dataDict[ind] = JSON.parse(target.response)\n\n                        setState({ ...state, data: dataDict });\n\n                    } else {\n                        setState({ ...state, errorMessage: target.response });\n                    }\n                })\n                .catch(error => {\n                    console.log(error);\n                    setState({ ...state, errorMessage: JSON.stringify(error) });\n                })\n        }\n    }\n\n    function getTotalValues(indx) {\n        var acc = {\"SurrenderCount\":0.0, \"AdoptionCount\":0.0, \"AdoptionFees\":0.0, \"Expenses\":0.0, \"Profit\":0.0}\n\n        state.data[indx].map(datum=> {\n            acc.SurrenderCount += datum.SurrenderCount.Float64\n            acc.AdoptionCount += datum.AdoptionCount.Float64\n            acc.AdoptionFees += datum.AdoptionFees.Float64\n            acc.Expenses += datum.Expenses.Float64\n            acc.Profit += datum.Profit.Float64\n        })\n\n        const expenseCents = (() => {\n            const cents = Math.round(acc.Expenses % 100);\n            return cents < 10 ? \"0\" + cents : cents;\n        })();\n        const expenseDollars = Math.floor(acc.Expenses / 100);\n\n        const adoptionFeeCents = (() => {\n            const cents = Math.round(acc.AdoptionFees % 100);\n            return cents < 10 ? \"0\" + cents : cents;\n        })();\n        const adoptionFeeDollars = Math.floor(acc.AdoptionFees / 100);\n\n        const profitCents = (() => {\n            const cents = Math.round(acc.Profit % 100);\n            return cents < 10 ? \"0\" + cents : cents;\n        })();\n        const profitDollars = Math.floor(acc.Profit / 100);\n\n        return (\n            <>\n                <td></td>\n                <td>{acc.SurrenderCount}</td>\n                <td>{acc.AdoptionCount}</td>\n                <td>${expenseDollars}.{expenseCents}</td>\n                <td>${adoptionFeeDollars}.{adoptionFeeCents}</td>\n                <td>${profitDollars}.{profitCents}</td>\n           </>\n        )\n    }\n\n    function getTableValues() {\n        var indices = [];\n        var i = 0;\n        for (i = -11; i <= 0; i++) {\n            indices.push(i);\n        }\n\n        return (\n            indices.map(indx => {\n                if (indx in state.data && state.data[indx].length) {\n\n\n                    return (\n                        <>\n                            <tr>\n\n                                <td>\n                                    <h3>{GetMonthOffset(indx)}</h3></td>\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                            </tr>\n                            {state.data[indx].map(datum => {\n                                const expenseCents = (() => {\n                                    const cents = Math.round(datum.Expenses.Float64 % 100);\n                                    return cents < 10 ? \"0\" + cents : cents;\n                                })();\n                                const expenseDollars = Math.floor(datum.Expenses.Float64 / 100);\n\n                                const adoptionFeeCents = (() => {\n                                    const cents = Math.round(datum.AdoptionFees.Float64 % 100);\n                                    return cents < 10 ? \"0\" + cents : cents;\n                                })();\n                                const adoptionFeeDollars = Math.floor(datum.AdoptionFees.Float64 / 100);\n\n                                const profitCents = (() => {\n                                    const cents = Math.round(datum.Profit.Float64 % 100);\n                                    return cents < 10 ? \"0\" + cents : cents;\n                                })();\n                                const profitDollars = Math.floor(datum.Profit.Float64 / 100);\n\n                                return (\n                                    <tr>\n                                    <td></td>\n                                        <td>{datum.breed}</td>\n                                        <td>{datum.SurrenderCount.Float64}</td>\n                                        <td>{datum.AdoptionCount.Float64}</td>\n                                        <td>${expenseDollars}.{expenseCents}</td>\n                                        <td>${adoptionFeeDollars}.{adoptionFeeCents}</td>\n                                        <td>${profitDollars}.{profitCents}</td>\n                                    </tr>\n                                )\n                            }\n                            )}\n                            <tr>\n                                <td><h3>Total</h3></td>\n                                {\n                                    getTotalValues(indx)\n                                }\n                            </tr>\n                        </>\n\n                    )\n\n                }\n            }\n\n            )\n\n        )\n    }\n\n    return (\n        <>\n            <NavLinks isTrustedVolunteer={state.cookie.isTrustedVolunteer} />\n            <main className=\"container\">\n                <h1>Monthly Adoption Report</h1>\n                <table>\n                    <thead>\n                        <td>Month</td>\n                        <td>Breed</td>\n                        <td>Surrender Count</td>\n                        <td>Adoption Count</td>\n                        <td>Expenses</td>\n                        <td>Adoption Fees</td>\n                        <td>Profit</td>\n                    </thead>\n                    <tbody>\n                        {\n                            getTableValues()\n                        }\n                    </tbody>\n                </table>\n\n                {state.errorMessage && (\n                    <div styles={{ color: \"red\" }}>{state.errorMessage}</div>\n                )}\n            </main>\n        </>\n    );\n}\n\nexport default MonthlyAdoptionReport;\n\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { isLoggedIn } from \"../services/auth\";\nimport { NavLinks } from \"../components\";\n\nconst Reports = () => {\n    const [state, setState] = useState({\n        cookie: {}\n    });\n\n    // check auth\n    useEffect(() => {\n        const cookie = isLoggedIn();\n        if (cookie.hasOwnProperty(\"isTrustedVolunteer\") && cookie.isTrustedVolunteer) {\n            setState({ ...state, cookie });\n        }\n        /* eslint-disable react-hooks/exhaustive-deps */\n    }, []);\n\n    return (\n        <>\n            <NavLinks isTrustedVolunteer={state.cookie.isTrustedVolunteer} />\n            <main className=\"container\">\n                <h1>Reports</h1>\n                <div className=\"interior-block\">\n                    <div className=\"form-unit\">\n                        <Link to=\"/monthly-adoption-report\">Monthly Adoption Report</Link>\n                    </div>\n                    <div className=\"form-unit\">\n                        <Link to=\"/animal-control-report\">Animal Control Report</Link>\n                    </div>\n                    <div className=\"form-unit\">\n                        <Link to=\"/expense-analysis\">Expense Analysis</Link>\n                    </div>\n                    <div className=\"form-unit\">\n                        <Link to=\"/volunteer-lookup\">Volunteer Lookup</Link>\n                    </div>\n                </div>\n            </main>\n        </>\n    );\n}\n\nexport default Reports;","import React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\"\n\nimport { getData, sendData } from \"../services/api\";\nimport { isLoggedIn } from \"../services/auth\";\nimport { NavLinks } from \"../components\";\n\nconst ReviewApplications = () => {\n    const [state, setState] = useState({\n        loginRedirect: false,\n        cookie: {}\n    });\n\n    // check auth\n    useEffect(() => {\n        const cookie = isLoggedIn();\n        if (cookie.hasOwnProperty(\"isTrustedVolunteer\") && cookie.isTrustedVolunteer) {\n            setState({ ...state, cookie });\n        }\n        /* eslint-disable react-hooks/exhaustive-deps */\n    }, []);\n\n    const [applications, setApplications] = useState([]);\n\n    useEffect(() => {\n        if (state.cookie.hasOwnProperty(\"isTrustedVolunteer\") && state.cookie.isTrustedVolunteer) {\n            getData(\"/application?status=pending\")\n                .then(({ target }) => {\n                    setApplications(JSON.parse(target.response));\n                })\n                .catch(error => {\n                    console.log(error);\n                })\n        }\n    }, [state.cookie]);\n\n    const submitDecision = (applicationId, decision) => {\n        const updatedApplicationState = decision ? \"true\" : \"false\";\n        sendData(decision, `/application/${applicationId}?approve=${updatedApplicationState}`, \"PUT\")\n            .then(({ target }) => {\n                if (target.status === 200) {\n                    const remainingApplications = applications.filter(application => {\n                        return application.id !== applicationId;\n                    });\n                    setApplications(remainingApplications);\n                }\n\n            })\n            .catch(error => {\n                console.log(\"Error updating application status: \", error);\n            })\n    }\n\n    return (\n        <>\n            {state.loginRedirect && <Redirect to={{ pathname: \"/login\", state: { from: \"/review-applications\" } }} />}\n            <NavLinks isTrustedVolunteer={state.cookie.isTrustedVolunteer} />\n            <main class=\"container\">\n                <h1>Review Applications</h1>\n                {applications.length ? (\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>First Name</th>\n                                <th>Last Name</th>\n                                <th>Email</th>\n                                <th>Street</th>\n                                <th>City</th>\n                                <th>State</th>\n                                <th>Zip</th>\n                                <th>Phone Number</th>\n                                <th>Co-Applicant First Name</th>\n                                <th>Co-Applicant Last Name</th>\n                                <th>Decision</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {applications.map(application => {\n                                return (\n                                    <tr key={application.id}>\n                                        <td>{application.applicant.firstName}</td>\n                                        <td>{application.applicant.lastName}</td>\n                                        <td>{application.applicant.email}</td>\n                                        <td>{application.applicant.street}</td>\n                                        <td>{application.applicant.city}</td>\n                                        <td>{application.applicant.state}</td>\n                                        <td>{application.applicant.zip}</td>\n                                        <td>{application.applicant.phoneNumber}</td>\n                                        <td>{application.coApplicantFirstName}</td>\n                                        <td>{application.coApplicantLastName}</td>\n                                        <td>\n                                            <button type=\"button\" onClick={() => {\n                                                submitDecision(application.id, true);\n                                            }} >Approve</button>\n                                            <button type=\"button\" onClick={() => {\n                                                submitDecision(application.id, false);\n                                            }} >Reject</button>\n                                        </td>\n                                    </tr>\n                                );\n                            })}\n                        </tbody>\n\n                    </table >\n                ) : (<h3>There are not any applications currently pending review.</h3>)\n                }\n            </main>\n        </>\n    );\n}\n\nexport default ReviewApplications;","import React, { useEffect, useState } from \"react\";\n\nimport { getData } from \"../services/api\";\nimport { isLoggedIn } from \"../services/auth\";\nimport { NavLinks } from \"../components\";\n\nconst VolunteerLookup = () => {\n    const [state, setState] = useState({\n        data: [],\n        errorMessage: \"\",\n        timeout: -1,\n        cookie: {}\n    });\n\n    // check auth\n    useEffect(() => {\n        const cookie = isLoggedIn();\n        if (cookie.hasOwnProperty(\"isTrustedVolunteer\") && cookie.isTrustedVolunteer) {\n            setState({ ...state, cookie });\n        }\n        /* eslint-disable react-hooks/exhaustive-deps */\n    }, []);\n\n    const [volunteerName, setVolunteerName] = useState(\"\");\n\n    useEffect(() => {\n        if (state.cookie.hasOwnProperty(\"isTrustedVolunteer\") && state.cookie.isTrustedVolunteer) {\n            getData(\"/volunteer\")\n                .then(({ target }) => {\n                    if (target) {\n                        setState({ ...state, data: JSON.parse(target.response) });\n                    } else {\n                        setState({ ...state, errorMessage: target.response });\n                    }\n                })\n                .catch(error => {\n                    console.log(error);\n                    setState({ ...state, errorMessage: JSON.stringify(error) });\n                })\n        }\n    }, [state.cookie]);\n\n    const getVolunteersLike = (volName) => {\n        getData(`/volunteer?like=${volName}`)\n            .then(({ target }) => {\n                if (target.status === 200) {\n                    const data = JSON.parse(target.response)\n                    setState({ ...state, data });\n\n                }\n            })\n            .catch(error => {\n                console.log(error);\n            })\n            .finally(() => {\n                console.log(state.data);\n            })\n    };\n\n    return (\n        <>\n            <NavLinks isTrustedVolunteer={state.cookie.isTrustedVolunteer} />\n            <main className=\"container\">\n                <h1>Volunteer Lookup</h1>\n                <div className=\"form-unit clearLeft\">\n                    <label htmlFor=\"volunteer-name\">Volunteer name:</label>\n                    <input\n                        type=\"text\"\n                        value={volunteerName}\n                        onChange={({ target }) => {\n                            setVolunteerName(target.value);\n                            clearTimeout(state.timeout);\n                            const timeout = setTimeout(() => {\n                                getVolunteersLike(target.value)\n                            }, 600)\n                            setState({ ...state, timeout });\n                        }}\n                    />\n                </div>\n\n                {\n                    state.data.length ? (\n\n                        <table>\n                            <thead>\n                                <tr>\n                                    <th>First Name</th>\n                                    <th>Last Name</th>\n                                    <th>Email</th>\n                                    <th>Phone Number</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    state.data.map((volunteer) => {\n                                        return (\n                                            <tr>\n                                                <td>{volunteer.firstName}</td>\n                                                <td>{volunteer.lastName}</td>\n                                                <td>{volunteer.email}</td>\n                                                <td>{volunteer.cell}</td>\n                                            </tr>\n                                        )\n                                    })\n                                }\n                            </tbody>\n                        </table>\n                    ) : (\n                            <p> No volunteers found</p>)\n                }\n                {state.errorMessage && (\n                    <div styles={{ color: \"red\" }}>{state.errorMessage}</div>\n                )}\n            </main>\n        </>\n    );\n}\n\nexport default VolunteerLookup;\n\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport {\n  AddAdoption,\n  AddApplication,\n  AddDog,\n  AnimalControlReport,\n  AnimalControlDrillDownReport,\n  DogDashboard,\n  DogDetails,\n  ExpenseAnalysis,\n  Login,\n  MonthlyAdoptionReport,\n  Reports,\n  ReviewApplications,\n  VolunteerLookup\n} from \"./containers\";\nimport \"./App.css\";\n\nexport default function App() {\n  return (\n    <Router>\n      <Routes />\n    </Router>\n  );\n}\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route path=\"/add-adoption\">\n        <AddAdoption />\n      </Route>\n      <Route path=\"/add-application\">\n        <AddApplication />\n      </Route>\n      <Route path=\"/add-dog\">\n        <AddDog />\n      </Route>\n      <Route path=\"/animal-control-report/:monthAndYear\">\n        <AnimalControlDrillDownReport />\n      </Route>\n      <Route path=\"/animal-control-report\">\n        <AnimalControlReport />\n      </Route>\n      <Route path=\"/dog-dashboard\">\n        <DogDashboard />\n      </Route>\n      <Route path=\"/dog-details/:dogId\">\n        <DogDetails />\n      </Route>\n      <Route path=\"/expense-analysis\">\n        <ExpenseAnalysis />\n      </Route>\n      <Route path=\"/monthly-adoption-report\">\n        <MonthlyAdoptionReport />\n      </Route>\n      <Route path=\"/reports\">\n        <Reports />\n      </Route>\n      <Route path=\"/review-applications\">\n        <ReviewApplications />\n      </Route>\n      <Route path=\"/volunteer-lookup\">\n        <VolunteerLookup />\n      </Route>\n      <Route path=\"/\">\n        <Login />\n      </Route>\n    </Switch>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}