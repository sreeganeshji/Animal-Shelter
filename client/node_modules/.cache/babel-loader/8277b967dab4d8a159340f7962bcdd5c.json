{"ast":null,"code":"var _jsxFileName = \"/Users/ganesh/Desktop/OMSCS/DBMS/Phase1/CS6400-2020-02-Team26/Phase_3/client/src/containers/DogDetails.js\";\nimport React, { useEffect, useReducer } from \"react\";\nimport { useParams, Redirect } from \"react-router-dom\";\nimport { getData, sendData } from \"../services/api\";\n\nconst DogDetails = () => {\n  const {\n    dogId\n  } = useParams();\n\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case \"setDog\":\n        return { ...state,\n          ...action.payload\n        };\n\n      case \"sex\":\n        return { ...state,\n          sex: action.payload\n        };\n\n      case \"alterationStatus\":\n        return { ...state,\n          alterationStatus: action.payload\n        };\n\n      case \"microchipId\":\n        return { ...state,\n          microchipId: action.payload\n        };\n\n      case \"expenses\":\n        return { ...state,\n          expenses: action.payload\n        };\n\n      case \"availableBreeds\":\n        return { ...state,\n          availableBreeds: action.payload\n        };\n\n      case \"errorMessage\":\n        return { ...state,\n          errorMessage: action.payload\n        };\n\n      case \"showModal\":\n        return { ...state,\n          id: action.payload,\n          showModal: true\n        };\n\n      case \"dogDashboard\":\n        return { ...state,\n          dashboardRedirect: true\n        };\n\n      case \"reloadPage\":\n        /* eslint-disable no-restricted-globals */\n        location.reload();\n        return;\n\n      case \"breed\":\n        let newBreed = state.breed;\n\n        if (action.payload.checked) {\n          newBreed[action.payload.breed] = true;\n\n          if (action.payload.breed === \"Mixed\" || action.payload.breed === \"Unknown\") {\n            // delete all other breeds\n            for (const key in newBreed) {\n              if (key !== action.payload.breed) {\n                delete newBreed[key];\n                document.querySelector(`#${key.split(\" \").join(\"-\")}`).checked = false;\n              }\n            }\n          }\n        } else {\n          delete newBreed[action.payload.breed];\n        }\n\n        return { ...state,\n          breed: newBreed\n        };\n\n      case \"canEditBreeds\":\n        return { ...state,\n          canEditBreeds: true\n        };\n\n      case \"canEditSex\":\n        return { ...state,\n          canEditSex: true\n        };\n\n      case \"canEditAlterationStatus\":\n        return { ...state,\n          canEditAlterationStatus: true\n        };\n\n      case \"canEditMicrochipId\":\n        return { ...state,\n          canEditMicrochipId: true\n        };\n\n      case \"showAddExpenseForm\":\n        return { ...state,\n          showAddExpenseForm: action.payload\n        };\n\n      case \"newExpenseVendor\":\n        return { ...state,\n          newExpense: { ...state.newExpense,\n            vendor: action.payload\n          }\n        };\n\n      case \"newExpenseDate\":\n        return { ...state,\n          newExpense: { ...state.newExpense,\n            date: action.payload\n          }\n        };\n\n      case \"newExpenseAmount\":\n        if (typeof +action.payload !== \"number\" || +action.payload < 0) {\n          return { ...state,\n            expenseErrorMessage: \"Please enter a valid numeric amount.\"\n          };\n        } else {\n          if (state.expenseErrorMessage === \"Please enter a valid numeric amount.\") {\n            return { ...state,\n              expenseErrorMessage: \"\"\n            };\n          }\n        }\n\n        return { ...state,\n          newExpense: { ...state.newExpense,\n            amountInCents: Math.floor(+action.payload * 100)\n          }\n        };\n\n      case \"newExpenseDescription\":\n        return { ...state,\n          newExpense: { ...state.newExpense,\n            description: action.payload\n          }\n        };\n\n      case \"resetNewExpense\":\n        return { ...state,\n          newExpense: {\n            dogIdFk: dogId\n          }\n        };\n\n      case \"addExpense\":\n        return { ...state,\n          expenses: [...state.expenses, action.payload]\n        };\n\n      case \"expenseErrorMessage\":\n        return { ...state,\n          expenseErrorMessage: action.payload\n        };\n\n      case \"addAdoptionRedirect\":\n        return { ...state,\n          addAdoptionRedirect: true\n        };\n\n      default:\n        throw new Error();\n    }\n  };\n\n  const [dog, dispatch] = useReducer(reducer, {\n    name: \"\",\n    breed: {},\n    sex: null,\n    alterationStatus: null,\n    dateOfBirth: \"\",\n    description: \"\",\n    microchipId: \"\",\n    surrenderDate: \"\",\n    surrenderReason: \"\",\n    surrenderedByAnimalControl: null,\n    volunteerId: -1,\n    expenses: [],\n    availableBreeds: [],\n    errorMessage: \"\",\n    showModal: false,\n    canEditBreeds: false,\n    canEditSex: false,\n    canEditAlterationStatus: false,\n    canEditMicrochipId: false,\n    showAddExpenseForm: false,\n    newExpense: {\n      dogIdFk: dogId\n    },\n    expenseErrorMessage: \"\",\n    addAdoptionRedirect: false\n  });\n  useEffect(() => {\n    getData(`/dog?id=${dogId}`).then(({\n      target\n    }) => {\n      const dog = JSON.parse(target.response); // convert breed[] to breed{}\n\n      let newBreed = {};\n\n      if (dog.breed) {\n        dog.breed.forEach(b => {\n          newBreed[b] = true;\n        });\n        dog.breed = newBreed;\n      } // derive permissions\n\n\n      if (dog.breed[\"Unknown\"] || dog.breed[\"Mixed\"]) {\n        dispatch({\n          type: \"canEditBreeds\"\n        });\n      }\n\n      if (dog.sex === \"unknown\") {\n        dispatch({\n          type: \"canEditSex\"\n        });\n      }\n\n      if (!dog.alterationStatus) {\n        dispatch({\n          type: \"canEditAlterationStatus\"\n        });\n      }\n\n      dog.microchipId = dog.microchipId.String;\n\n      if (!dog.microchipId) {\n        dispatch({\n          type: \"canEditMicrochipId\"\n        });\n      }\n\n      dispatch({\n        type: \"setDog\",\n        payload: dog\n      });\n\n      if (dog.breed[\"Unknown\"] || dog.breed[\"Mixed\"]) {\n        getData(\"/breed\").then(({\n          target\n        }) => {\n          dispatch({\n            type: \"availableBreeds\",\n            payload: JSON.parse(target.response)\n          });\n        }).catch(error => {\n          dispatch({\n            type: \"errorMessage\",\n            payload: error\n          });\n          console.log(\"error getting available breeds:\", error);\n        });\n      }\n    }).catch(error => {\n      dispatch({\n        type: \"errorMessage\",\n        payload: error\n      });\n      console.log(\"error getting dog data:\", error);\n    });\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, [dogId]);\n  useEffect(() => {\n    const radioButton = document.querySelector(`#${dog.sex}`);\n    if (radioButton) radioButton.checked = true;\n  }, [dog.sex]);\n  useEffect(() => {\n    const radioButton = document.querySelector(`#unaltered`);\n    if (radioButton) radioButton.checked = true;\n  }, [dog.alterationStatus]);\n  useEffect(() => {\n    for (const breed in dog.breed) {\n      const checkbox = document.querySelector(`#${breed.split(\" \").join(\"-\")}`);\n      if (checkbox) checkbox.checked = true;\n    }\n  }, [dog]);\n\n  const updateDog = () => {\n    const dogData = {\n      breed: Object.keys(dog.breed),\n      sex: dog.sex,\n      alterationStatus: dog.alterationStatus === \"true\" ? true : false\n    };\n    dogData.microchipId = {\n      \"String\": dog.microchipId,\n      \"Valid\": true\n    };\n\n    if (!Object.keys(dog.breed).length) {\n      dispatch({\n        type: \"errorMessage\",\n        payload: \"Please select at least one dog breed.\"\n      });\n      return;\n    }\n\n    sendData(dogData, `/dog/${dogId}`, \"put\").then(({\n      target\n    }) => {\n      if (target.status === 204) {\n        // show success modal\n        dispatch({\n          type: \"reloadPage\"\n        });\n      } else {\n        console.log(\"error adding dog (non-200):\", target.response);\n        dispatch({\n          type: \"errorMessage\",\n          payload: target.response\n        });\n      }\n    }).catch(error => {\n      // show error modal\n      console.log(\"error adding dog (catch):\", error);\n      dispatch({\n        type: \"errorMessage\",\n        payload: JSON.parse(error)\n      });\n    });\n  };\n\n  const addExpense = () => {\n    sendData(dog.newExpense, `/expense`).then(({\n      target\n    }) => {\n      if (target.status === 201) {\n        dispatch({\n          type: \"resetNewExpense\"\n        });\n        dispatch({\n          type: \"showAddExpenseForm\",\n          payload: false\n        });\n        dispatch({\n          type: \"addExpense\",\n          payload: JSON.parse(target.response)\n        });\n        dispatch({\n          type: \"expenseErrorMessage\",\n          payload: \"\"\n        });\n      } else {\n        console.log(target.response);\n        dispatch({\n          type: \"expenseErrorMessage\",\n          payload: target.response\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n      dispatch({\n        type: \"expenseErrorMessage\",\n        payload: error\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, dog.dashboardRedirect && /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: `/dog-dashboard`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 39\n    }\n  }), dog.addAdoptionRedirect && /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: `/add-adoption`,\n      search: `?dogId=${dogId}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, \"Dog Details\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => dispatch({\n      type: \"dogDashboard\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }, \"Back to Dog Dashboard\"), dog.alterationStatus && dog.microchipId && /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => dispatch({\n      type: \"addAdoptionRedirect\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 17\n    }\n  }, \"Add Adoption\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 21\n    }\n  }, \"Name: \", dog.name)), dog.canEditBreeds ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"breed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 25\n    }\n  }, \"Dog Breed: (Please select at least one.)\"), dog.availableBreeds.map(({\n    id,\n    breed: b = \"\"\n  }) => {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      value: b,\n      id: b.split(\" \").join(\"-\"),\n      onChange: ({\n        target\n      }) => {\n        dispatch({\n          type: 'breed',\n          payload: {\n            breed: target.value,\n            checked: target.checked\n          }\n        });\n      },\n      disabled: (dog.breed[\"Mixed\"] || dog.breed[\"Unknown\"]) && !(b === \"Mixed\" || b === \"Unknown\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: b,\n      style: {\n        display: \"inline\",\n        paddingLeft: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 39\n      }\n    }, b));\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 29\n    }\n  }, \"Breed: \", Object.keys(dog.breed).join(\"/\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 17\n    }\n  }, dog.canEditSex ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"sex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 29\n    }\n  }, \"Dog Sex:\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"male\",\n    name: \"sex\",\n    value: \"male\",\n    onChange: ({\n      target\n    }) => {\n      dispatch({\n        type: \"sex\",\n        payload: target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"male\",\n    style: {\n      display: \"inline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 33\n    }\n  }, \"Male\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"female\",\n    name: \"sex\",\n    value: \"female\",\n    onChange: ({\n      target\n    }) => {\n      dispatch({\n        type: \"sex\",\n        payload: target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"female\",\n    style: {\n      display: \"inline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 33\n    }\n  }, \"Female\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"unknown\",\n    name: \"sex\",\n    value: \"unknown\",\n    onChange: ({\n      target\n    }) => {\n      dispatch({\n        type: 'sex',\n        payload: target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"unknown\",\n    style: {\n      display: \"inline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 33\n    }\n  }, \"Unknown\"))) : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 29\n    }\n  }, \"Sex: \", dog.sex)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 17\n    }\n  }, dog.canEditAlterationStatus ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"alterationStatus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 29\n    }\n  }, \"Dog Alteration Status:\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"altered\",\n    name: \"alterationStatus\",\n    value: true,\n    onChange: ({\n      target\n    }) => {\n      dispatch({\n        type: 'alterationStatus',\n        payload: target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"altered\",\n    style: {\n      display: \"inline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 33\n    }\n  }, \"Spayed/Neutered\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"unaltered\",\n    name: \"alterationStatus\",\n    value: false,\n    onChange: ({\n      target\n    }) => {\n      dispatch({\n        type: 'alterationStatus',\n        payload: target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"unaltered\",\n    style: {\n      display: \"inline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 33\n    }\n  }, \"Unaltered\"))) : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 29\n    }\n  }, \"Alteration Status: \", dog.alterationStatus ? \"Spayed/Neutered\" : \"Unaltered\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 21\n    }\n  }, \"Date of Birth: \", new Date(dog.dateOfBirth).toDateString())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 21\n    }\n  }, \"Description: \", dog.description)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 17\n    }\n  }, dog.canEditMicrochipId ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 29\n    }\n  }, \"Microchip ID:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: dog.microchipId,\n    onChange: ({\n      target\n    }) => {\n      dispatch({\n        type: \"microchipId\",\n        payload: target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 29\n    }\n  })) : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 29\n    }\n  }, \"Microchip ID: \", dog.microchipId)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 21\n    }\n  }, \"Surrender Date: \", new Date(dog.surrenderDate).toDateString())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 21\n    }\n  }, \"Surrender Reason: \", dog.surrenderReason)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 21\n    }\n  }, \"Surrender was by Animal Control: \", dog.surrenderedByAnimalControl ? \"Yes\" : \"No\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 21\n    }\n  }, \"Surrender recorded by volunteer \", dog.volunteerId)), (dog.canEditBreeds || dog.canEditSex || dog.canEditAlterationStatus || dog.canEditMicrochipId) && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: updateDog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 29\n    }\n  }, \"Update Dog\"), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\",\n      paddingLeft: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 29\n    }\n  }, dog.errorMessage))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => dispatch({\n      type: \"dogDashboard\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 13\n    }\n  }, \" Back to Dog Dashboard\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 13\n    }\n  }, \"Expenses\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 13\n    }\n  }, \"Dog Total : $\", dog.expenses.reduce((totalExpense, currentExpense) => totalExpense += currentExpense.amountInCents / 100, 0)), dog.showAddExpenseForm ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 21\n    }\n  }, \"New Expense\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    id: \"expense-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 29\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    onChange: ({\n      target\n    }) => dispatch({\n      type: \"newExpenseDate\",\n      payload: target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    id: \"expense-vendor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 29\n    }\n  }, \"Vendor\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: ({\n      target\n    }) => dispatch({\n      type: \"newExpenseVendor\",\n      payload: target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    id: \"expense-amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 29\n    }\n  }, \"Amount (in dollars)\"), \"$\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    step: 0.01,\n    min: 0,\n    onChange: ({\n      target\n    }) => {\n      if (typeof +target.value === \"number\") {\n        dispatch({\n          type: \"newExpenseAmount\",\n          payload: target.value\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 30\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    id: \"expense-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 29\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: ({\n      target\n    }) => dispatch({\n      type: \"newExpenseDescription\",\n      payload: target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: addExpense,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 25\n    }\n  }, \"Submit Expense\"), dog.expenseErrorMessage && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\",\n      paddingLeft: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 53\n    }\n  }, dog.expenseErrorMessage))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => dispatch({\n      type: \"showAddExpenseForm\",\n      payload: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 25\n    }\n  }, \"Add New Expense\"), dog.expenseErrorMessage && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\",\n      paddingLeft: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 53\n    }\n  }, dog.expenseErrorMessage)), dog.expenses.length ? dog.expenses.map((expense, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"form-unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 33\n    }\n  }, \"Date: \", new Date(expense.date).toDateString())), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 33\n    }\n  }, \"Vendor: \", expense.vendor)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 33\n    }\n  }, \"Description: \", expense.description)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 33\n    }\n  }, \"Cost: $\", expense.amountInCents / 100)))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 22\n    }\n  }, \"No expenses entered yet.\"));\n};\n\nexport default DogDetails;","map":{"version":3,"sources":["/Users/ganesh/Desktop/OMSCS/DBMS/Phase1/CS6400-2020-02-Team26/Phase_3/client/src/containers/DogDetails.js"],"names":["React","useEffect","useReducer","useParams","Redirect","getData","sendData","DogDetails","dogId","reducer","state","action","type","payload","sex","alterationStatus","microchipId","expenses","availableBreeds","errorMessage","id","showModal","dashboardRedirect","location","reload","newBreed","breed","checked","key","document","querySelector","split","join","canEditBreeds","canEditSex","canEditAlterationStatus","canEditMicrochipId","showAddExpenseForm","newExpense","vendor","date","expenseErrorMessage","amountInCents","Math","floor","description","dogIdFk","addAdoptionRedirect","Error","dog","dispatch","name","dateOfBirth","surrenderDate","surrenderReason","surrenderedByAnimalControl","volunteerId","then","target","JSON","parse","response","forEach","b","String","catch","error","console","log","radioButton","checkbox","updateDog","dogData","Object","keys","length","status","addExpense","pathname","search","map","value","display","paddingLeft","Date","toDateString","color","reduce","totalExpense","currentExpense","expense","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,kBAApC;AAEA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,iBAAlC;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAYL,SAAS,EAA3B;;AAEA,QAAMM,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,YAAQA,MAAM,CAACC,IAAf;AACI,WAAK,QAAL;AACI,eAAO,EAAE,GAAGF,KAAL;AAAY,aAAGC,MAAM,CAACE;AAAtB,SAAP;;AACJ,WAAK,KAAL;AACI,eAAO,EAAE,GAAGH,KAAL;AAAYI,UAAAA,GAAG,EAAEH,MAAM,CAACE;AAAxB,SAAP;;AACJ,WAAK,kBAAL;AACI,eAAO,EAAE,GAAGH,KAAL;AAAYK,UAAAA,gBAAgB,EAAEJ,MAAM,CAACE;AAArC,SAAP;;AACJ,WAAK,aAAL;AACI,eAAO,EAAE,GAAGH,KAAL;AAAYM,UAAAA,WAAW,EAAEL,MAAM,CAACE;AAAhC,SAAP;;AACJ,WAAK,UAAL;AACI,eAAO,EAAE,GAAGH,KAAL;AAAYO,UAAAA,QAAQ,EAAEN,MAAM,CAACE;AAA7B,SAAP;;AACJ,WAAK,iBAAL;AACI,eAAO,EAAE,GAAGH,KAAL;AAAYQ,UAAAA,eAAe,EAAEP,MAAM,CAACE;AAApC,SAAP;;AACJ,WAAK,cAAL;AACI,eAAO,EAAE,GAAGH,KAAL;AAAYS,UAAAA,YAAY,EAAER,MAAM,CAACE;AAAjC,SAAP;;AACJ,WAAK,WAAL;AACI,eAAO,EAAE,GAAGH,KAAL;AAAYU,UAAAA,EAAE,EAAET,MAAM,CAACE,OAAvB;AAAgCQ,UAAAA,SAAS,EAAE;AAA3C,SAAP;;AACJ,WAAK,cAAL;AACI,eAAO,EAAE,GAAGX,KAAL;AAAYY,UAAAA,iBAAiB,EAAE;AAA/B,SAAP;;AACJ,WAAK,YAAL;AACI;AACAC,QAAAA,QAAQ,CAACC,MAAT;AACA;;AACJ,WAAK,OAAL;AACI,YAAIC,QAAQ,GAAGf,KAAK,CAACgB,KAArB;;AACA,YAAIf,MAAM,CAACE,OAAP,CAAec,OAAnB,EAA4B;AACxBF,UAAAA,QAAQ,CAACd,MAAM,CAACE,OAAP,CAAea,KAAhB,CAAR,GAAiC,IAAjC;;AACA,cAAIf,MAAM,CAACE,OAAP,CAAea,KAAf,KAAyB,OAAzB,IAAoCf,MAAM,CAACE,OAAP,CAAea,KAAf,KAAyB,SAAjE,EAA4E;AACxE;AACA,iBAAK,MAAME,GAAX,IAAkBH,QAAlB,EAA4B;AACxB,kBAAIG,GAAG,KAAKjB,MAAM,CAACE,OAAP,CAAea,KAA3B,EAAkC;AAC9B,uBAAOD,QAAQ,CAACG,GAAD,CAAf;AACAC,gBAAAA,QAAQ,CAACC,aAAT,CAAwB,IAAGF,GAAG,CAACG,KAAJ,CAAU,GAAV,EAAeC,IAAf,CAAoB,GAApB,CAAyB,EAApD,EAAuDL,OAAvD,GAAiE,KAAjE;AACH;AACJ;AACJ;AACJ,SAXD,MAWO;AACH,iBAAOF,QAAQ,CAACd,MAAM,CAACE,OAAP,CAAea,KAAhB,CAAf;AACH;;AACD,eAAO,EAAE,GAAGhB,KAAL;AAAYgB,UAAAA,KAAK,EAAED;AAAnB,SAAP;;AACJ,WAAK,eAAL;AACI,eAAO,EAAE,GAAGf,KAAL;AAAYuB,UAAAA,aAAa,EAAE;AAA3B,SAAP;;AACJ,WAAK,YAAL;AACI,eAAO,EAAE,GAAGvB,KAAL;AAAYwB,UAAAA,UAAU,EAAE;AAAxB,SAAP;;AACJ,WAAK,yBAAL;AACI,eAAO,EAAE,GAAGxB,KAAL;AAAYyB,UAAAA,uBAAuB,EAAE;AAArC,SAAP;;AACJ,WAAK,oBAAL;AACI,eAAO,EAAE,GAAGzB,KAAL;AAAY0B,UAAAA,kBAAkB,EAAE;AAAhC,SAAP;;AACJ,WAAK,oBAAL;AACI,eAAO,EAAE,GAAG1B,KAAL;AAAY2B,UAAAA,kBAAkB,EAAE1B,MAAM,CAACE;AAAvC,SAAP;;AACJ,WAAK,kBAAL;AACI,eAAO,EAAE,GAAGH,KAAL;AAAY4B,UAAAA,UAAU,EAAE,EAAE,GAAI5B,KAAK,CAAC4B,UAAZ;AAAyBC,YAAAA,MAAM,EAAE5B,MAAM,CAACE;AAAxC;AAAxB,SAAP;;AACJ,WAAK,gBAAL;AACI,eAAO,EAAE,GAAGH,KAAL;AAAY4B,UAAAA,UAAU,EAAE,EAAE,GAAI5B,KAAK,CAAC4B,UAAZ;AAAyBE,YAAAA,IAAI,EAAE7B,MAAM,CAACE;AAAtC;AAAxB,SAAP;;AACJ,WAAK,kBAAL;AACI,YAAI,OAAO,CAACF,MAAM,CAACE,OAAf,KAA2B,QAA3B,IAAuC,CAACF,MAAM,CAACE,OAAR,GAAkB,CAA7D,EAAgE;AAC5D,iBAAO,EAAE,GAAGH,KAAL;AAAY+B,YAAAA,mBAAmB,EAAE;AAAjC,WAAP;AACH,SAFD,MAEO;AACH,cAAI/B,KAAK,CAAC+B,mBAAN,KAA8B,sCAAlC,EAA0E;AACtE,mBAAO,EAAE,GAAG/B,KAAL;AAAY+B,cAAAA,mBAAmB,EAAE;AAAjC,aAAP;AACH;AACJ;;AACD,eAAO,EAAE,GAAG/B,KAAL;AAAY4B,UAAAA,UAAU,EAAE,EAAE,GAAI5B,KAAK,CAAC4B,UAAZ;AAAyBI,YAAAA,aAAa,EAAEC,IAAI,CAACC,KAAL,CAAW,CAACjC,MAAM,CAACE,OAAR,GAAkB,GAA7B;AAAxC;AAAxB,SAAP;;AACJ,WAAK,uBAAL;AACI,eAAO,EAAE,GAAGH,KAAL;AAAY4B,UAAAA,UAAU,EAAE,EAAE,GAAI5B,KAAK,CAAC4B,UAAZ;AAAyBO,YAAAA,WAAW,EAAElC,MAAM,CAACE;AAA7C;AAAxB,SAAP;;AACJ,WAAK,iBAAL;AACI,eAAO,EAAE,GAAGH,KAAL;AAAY4B,UAAAA,UAAU,EAAE;AAAEQ,YAAAA,OAAO,EAAEtC;AAAX;AAAxB,SAAP;;AACJ,WAAK,YAAL;AACI,eAAO,EAAE,GAAGE,KAAL;AAAYO,UAAAA,QAAQ,EAAE,CAAC,GAAIP,KAAK,CAACO,QAAX,EAAsBN,MAAM,CAACE,OAA7B;AAAtB,SAAP;;AACJ,WAAK,qBAAL;AACI,eAAO,EAAE,GAAGH,KAAL;AAAY+B,UAAAA,mBAAmB,EAAE9B,MAAM,CAACE;AAAxC,SAAP;;AACJ,WAAK,qBAAL;AACI,eAAO,EAAE,GAAGH,KAAL;AAAYqC,UAAAA,mBAAmB,EAAE;AAAjC,SAAP;;AACJ;AACI,cAAM,IAAIC,KAAJ,EAAN;AA1ER;AA4EH,GA7ED;;AA+EA,QAAM,CAACC,GAAD,EAAMC,QAAN,IAAkBhD,UAAU,CAC9BO,OAD8B,EAE9B;AACI0C,IAAAA,IAAI,EAAE,EADV;AAEIzB,IAAAA,KAAK,EAAE,EAFX;AAGIZ,IAAAA,GAAG,EAAE,IAHT;AAIIC,IAAAA,gBAAgB,EAAE,IAJtB;AAKIqC,IAAAA,WAAW,EAAE,EALjB;AAMIP,IAAAA,WAAW,EAAE,EANjB;AAOI7B,IAAAA,WAAW,EAAE,EAPjB;AAQIqC,IAAAA,aAAa,EAAE,EARnB;AASIC,IAAAA,eAAe,EAAE,EATrB;AAUIC,IAAAA,0BAA0B,EAAE,IAVhC;AAWIC,IAAAA,WAAW,EAAE,CAAC,CAXlB;AAYIvC,IAAAA,QAAQ,EAAE,EAZd;AAaIC,IAAAA,eAAe,EAAE,EAbrB;AAcIC,IAAAA,YAAY,EAAE,EAdlB;AAeIE,IAAAA,SAAS,EAAE,KAff;AAgBIY,IAAAA,aAAa,EAAE,KAhBnB;AAiBIC,IAAAA,UAAU,EAAE,KAjBhB;AAkBIC,IAAAA,uBAAuB,EAAE,KAlB7B;AAmBIC,IAAAA,kBAAkB,EAAE,KAnBxB;AAoBIC,IAAAA,kBAAkB,EAAE,KApBxB;AAqBIC,IAAAA,UAAU,EAAE;AAAEQ,MAAAA,OAAO,EAAEtC;AAAX,KArBhB;AAsBIiC,IAAAA,mBAAmB,EAAE,EAtBzB;AAuBIM,IAAAA,mBAAmB,EAAE;AAvBzB,GAF8B,CAAlC;AA4BA9C,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,OAAO,CAAE,WAAUG,KAAM,EAAlB,CAAP,CACKiD,IADL,CACU,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAgB;AAClB,YAAMT,GAAG,GAAGU,IAAI,CAACC,KAAL,CAAWF,MAAM,CAACG,QAAlB,CAAZ,CADkB,CAElB;;AACA,UAAIpC,QAAQ,GAAG,EAAf;;AACA,UAAIwB,GAAG,CAACvB,KAAR,EAAe;AACXuB,QAAAA,GAAG,CAACvB,KAAJ,CAAUoC,OAAV,CAAkBC,CAAC,IAAI;AACnBtC,UAAAA,QAAQ,CAACsC,CAAD,CAAR,GAAc,IAAd;AACH,SAFD;AAGAd,QAAAA,GAAG,CAACvB,KAAJ,GAAYD,QAAZ;AACH,OATiB,CAUlB;;;AACA,UAAIwB,GAAG,CAACvB,KAAJ,CAAU,SAAV,KAAwBuB,GAAG,CAACvB,KAAJ,CAAU,OAAV,CAA5B,EAAgD;AAC5CwB,QAAAA,QAAQ,CAAC;AAAEtC,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAR;AACH;;AACD,UAAIqC,GAAG,CAACnC,GAAJ,KAAY,SAAhB,EAA2B;AACvBoC,QAAAA,QAAQ,CAAC;AAAEtC,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAR;AACH;;AACD,UAAI,CAACqC,GAAG,CAAClC,gBAAT,EAA2B;AACvBmC,QAAAA,QAAQ,CAAC;AAAEtC,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAR;AACH;;AACDqC,MAAAA,GAAG,CAACjC,WAAJ,GAAkBiC,GAAG,CAACjC,WAAJ,CAAgBgD,MAAlC;;AACA,UAAI,CAACf,GAAG,CAACjC,WAAT,EAAsB;AAClBkC,QAAAA,QAAQ,CAAC;AAAEtC,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAR;AACH;;AACDsC,MAAAA,QAAQ,CAAC;AAAEtC,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,OAAO,EAAEoC;AAA3B,OAAD,CAAR;;AACA,UAAIA,GAAG,CAACvB,KAAJ,CAAU,SAAV,KAAwBuB,GAAG,CAACvB,KAAJ,CAAU,OAAV,CAA5B,EAAgD;AAC5CrB,QAAAA,OAAO,CAAC,QAAD,CAAP,CACKoD,IADL,CACU,CAAC;AAAEC,UAAAA;AAAF,SAAD,KAAgB;AAClBR,UAAAA,QAAQ,CAAC;AAAEtC,YAAAA,IAAI,EAAE,iBAAR;AAA2BC,YAAAA,OAAO,EAAE8C,IAAI,CAACC,KAAL,CAAWF,MAAM,CAACG,QAAlB;AAApC,WAAD,CAAR;AACH,SAHL,EAIKI,KAJL,CAIWC,KAAK,IAAI;AACZhB,UAAAA,QAAQ,CAAC;AAAEtC,YAAAA,IAAI,EAAE,cAAR;AAAwBC,YAAAA,OAAO,EAAEqD;AAAjC,WAAD,CAAR;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CF,KAA/C;AACH,SAPL;AAQH;AACJ,KApCL,EAqCKD,KArCL,CAqCWC,KAAK,IAAI;AACZhB,MAAAA,QAAQ,CAAC;AAAEtC,QAAAA,IAAI,EAAE,cAAR;AAAwBC,QAAAA,OAAO,EAAEqD;AAAjC,OAAD,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;AACH,KAxCL;AAyCA;AACH,GA3CQ,EA2CN,CAAC1D,KAAD,CA3CM,CAAT;AA6CAP,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMoE,WAAW,GAAGxC,QAAQ,CAACC,aAAT,CAAwB,IAAGmB,GAAG,CAACnC,GAAI,EAAnC,CAApB;AACA,QAAIuD,WAAJ,EAAiBA,WAAW,CAAC1C,OAAZ,GAAsB,IAAtB;AACpB,GAHQ,EAGN,CAACsB,GAAG,CAACnC,GAAL,CAHM,CAAT;AAKAb,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMoE,WAAW,GAAGxC,QAAQ,CAACC,aAAT,CAAwB,YAAxB,CAApB;AACA,QAAIuC,WAAJ,EAAiBA,WAAW,CAAC1C,OAAZ,GAAsB,IAAtB;AACpB,GAHQ,EAGN,CAACsB,GAAG,CAAClC,gBAAL,CAHM,CAAT;AAKAd,EAAAA,SAAS,CAAC,MAAM;AACZ,SAAK,MAAMyB,KAAX,IAAoBuB,GAAG,CAACvB,KAAxB,EAA+B;AAC3B,YAAM4C,QAAQ,GAAGzC,QAAQ,CAACC,aAAT,CAAwB,IAAGJ,KAAK,CAACK,KAAN,CAAY,GAAZ,EAAiBC,IAAjB,CAAsB,GAAtB,CAA2B,EAAtD,CAAjB;AACA,UAAIsC,QAAJ,EAAcA,QAAQ,CAAC3C,OAAT,GAAmB,IAAnB;AACjB;AACJ,GALQ,EAKN,CAACsB,GAAD,CALM,CAAT;;AAOA,QAAMsB,SAAS,GAAG,MAAM;AACpB,UAAMC,OAAO,GAAG;AACZ9C,MAAAA,KAAK,EAAE+C,MAAM,CAACC,IAAP,CAAYzB,GAAG,CAACvB,KAAhB,CADK;AAEZZ,MAAAA,GAAG,EAAEmC,GAAG,CAACnC,GAFG;AAGZC,MAAAA,gBAAgB,EAAEkC,GAAG,CAAClC,gBAAJ,KAAyB,MAAzB,GAAkC,IAAlC,GAAyC;AAH/C,KAAhB;AAKAyD,IAAAA,OAAO,CAACxD,WAAR,GAAsB;AAAE,gBAAUiC,GAAG,CAACjC,WAAhB;AAA6B,eAAS;AAAtC,KAAtB;;AACA,QAAI,CAACyD,MAAM,CAACC,IAAP,CAAYzB,GAAG,CAACvB,KAAhB,EAAuBiD,MAA5B,EAAoC;AAChCzB,MAAAA,QAAQ,CAAC;AAAEtC,QAAAA,IAAI,EAAE,cAAR;AAAwBC,QAAAA,OAAO,EAAE;AAAjC,OAAD,CAAR;AACA;AACH;;AACDP,IAAAA,QAAQ,CAACkE,OAAD,EAAW,QAAOhE,KAAM,EAAxB,EAA2B,KAA3B,CAAR,CACKiD,IADL,CACU,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAgB;AAClB,UAAIA,MAAM,CAACkB,MAAP,KAAkB,GAAtB,EAA2B;AACvB;AACA1B,QAAAA,QAAQ,CAAC;AAAEtC,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAR;AACH,OAHD,MAGO;AACHuD,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CV,MAAM,CAACG,QAAlD;AACAX,QAAAA,QAAQ,CAAC;AAAEtC,UAAAA,IAAI,EAAE,cAAR;AAAwBC,UAAAA,OAAO,EAAE6C,MAAM,CAACG;AAAxC,SAAD,CAAR;AACH;AACJ,KATL,EAUKI,KAVL,CAUWC,KAAK,IAAI;AACZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,KAAzC;AACAhB,MAAAA,QAAQ,CAAC;AAAEtC,QAAAA,IAAI,EAAE,cAAR;AAAwBC,QAAAA,OAAO,EAAE8C,IAAI,CAACC,KAAL,CAAWM,KAAX;AAAjC,OAAD,CAAR;AACH,KAdL;AAeH,GA1BD;;AA4BA,QAAMW,UAAU,GAAG,MAAM;AACrBvE,IAAAA,QAAQ,CAAC2C,GAAG,CAACX,UAAL,EAAkB,UAAlB,CAAR,CACKmB,IADL,CACU,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAgB;AAClB,UAAIA,MAAM,CAACkB,MAAP,KAAkB,GAAtB,EAA2B;AACvB1B,QAAAA,QAAQ,CAAC;AAAEtC,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAR;AACAsC,QAAAA,QAAQ,CAAC;AAAEtC,UAAAA,IAAI,EAAE,oBAAR;AAA8BC,UAAAA,OAAO,EAAE;AAAvC,SAAD,CAAR;AACAqC,QAAAA,QAAQ,CAAC;AAAEtC,UAAAA,IAAI,EAAE,YAAR;AAAsBC,UAAAA,OAAO,EAAE8C,IAAI,CAACC,KAAL,CAAWF,MAAM,CAACG,QAAlB;AAA/B,SAAD,CAAR;AACAX,QAAAA,QAAQ,CAAC;AAAEtC,UAAAA,IAAI,EAAE,qBAAR;AAA+BC,UAAAA,OAAO,EAAE;AAAxC,SAAD,CAAR;AACH,OALD,MAKO;AACHsD,QAAAA,OAAO,CAACC,GAAR,CAAYV,MAAM,CAACG,QAAnB;AACAX,QAAAA,QAAQ,CAAC;AAAEtC,UAAAA,IAAI,EAAE,qBAAR;AAA+BC,UAAAA,OAAO,EAAE6C,MAAM,CAACG;AAA/C,SAAD,CAAR;AACH;AACJ,KAXL,EAYKI,KAZL,CAYWC,KAAK,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAhB,MAAAA,QAAQ,CAAC;AAAEtC,QAAAA,IAAI,EAAE,qBAAR;AAA+BC,QAAAA,OAAO,EAAEqD;AAAxC,OAAD,CAAR;AACH,KAfL;AAgBH,GAjBD;;AAmBA,sBACI,0CACKjB,GAAG,CAAC3B,iBAAJ,iBAAyB,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AAAEwD,MAAAA,QAAQ,EAAG;AAAb,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD9B,EAEK7B,GAAG,CAACF,mBAAJ,iBAA2B,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AAAE+B,MAAAA,QAAQ,EAAG,eAAb;AAA6BC,MAAAA,MAAM,EAAG,UAASvE,KAAM;AAArD,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFhC,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,eAII;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE,MAAM0C,QAAQ,CAAC;AAAEtC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAJJ,EAKKqC,GAAG,CAAClC,gBAAJ,IAAwBkC,GAAG,CAACjC,WAA5B,iBACG;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE,MAAMkC,QAAQ,CAAC;AAAEtC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANR,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAaqC,GAAG,CAACE,IAAjB,CADJ,CADJ,EAIKF,GAAG,CAAChB,aAAJ,gBACG;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADJ,EAEKgB,GAAG,CAAC/B,eAAJ,CAAoB8D,GAApB,CAAwB,CAAC;AAAE5D,IAAAA,EAAF;AAAMM,IAAAA,KAAK,EAAEqC,CAAC,GAAG;AAAjB,GAAD,KAA2B;AAChD,wBACI;AAAG,MAAA,GAAG,EAAE3C,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,IAAI,EAAC,UAAZ;AACI,MAAA,KAAK,EAAE2C,CADX;AAEI,MAAA,EAAE,EAAEA,CAAC,CAAChC,KAAF,CAAQ,GAAR,EAAaC,IAAb,CAAkB,GAAlB,CAFR;AAGI,MAAA,QAAQ,EAAE,CAAC;AAAE0B,QAAAA;AAAF,OAAD,KAAgB;AACtBR,QAAAA,QAAQ,CAAC;AAAEtC,UAAAA,IAAI,EAAE,OAAR;AAAiBC,UAAAA,OAAO,EAAE;AAAEa,YAAAA,KAAK,EAAEgC,MAAM,CAACuB,KAAhB;AAAuBtD,YAAAA,OAAO,EAAE+B,MAAM,CAAC/B;AAAvC;AAA1B,SAAD,CAAR;AACH,OALL;AAMI,MAAA,QAAQ,EAAE,CAACsB,GAAG,CAACvB,KAAJ,CAAU,OAAV,KAAsBuB,GAAG,CAACvB,KAAJ,CAAU,SAAV,CAAvB,KAAgD,EAAEqC,CAAC,KAAK,OAAN,IAAiBA,CAAC,KAAK,SAAzB,CAN9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAQM;AAAO,MAAA,OAAO,EAAEA,CAAhB;AAAmB,MAAA,KAAK,EAAE;AAAEmB,QAAAA,OAAO,EAAE,QAAX;AAAqBC,QAAAA,WAAW,EAAE;AAAlC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuEpB,CAAvE,CARN,CADJ;AAYH,GAbA,CAFL,CADH,gBAmBO;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAcU,MAAM,CAACC,IAAP,CAAYzB,GAAG,CAACvB,KAAhB,EAAuBM,IAAvB,CAA4B,GAA5B,CAAd,CADJ,CAvBZ,eA2BI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKiB,GAAG,CAACf,UAAJ,gBACG,uDACI;AAAO,IAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,OAAZ;AACI,IAAA,EAAE,EAAC,MADP;AAEI,IAAA,IAAI,EAAC,KAFT;AAGI,IAAA,KAAK,EAAC,MAHV;AAII,IAAA,QAAQ,EAAE,CAAC;AAAEwB,MAAAA;AAAF,KAAD,KAAgB;AACtBR,MAAAA,QAAQ,CAAC;AAAEtC,QAAAA,IAAI,EAAE,KAAR;AAAeC,QAAAA,OAAO,EAAE6C,MAAM,CAACuB;AAA/B,OAAD,CAAR;AACH,KANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eASI;AAAO,IAAA,OAAO,EAAC,MAAf;AAAsB,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,CAFJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,OAAZ;AACI,IAAA,EAAE,EAAC,QADP;AAEI,IAAA,IAAI,EAAC,KAFT;AAGI,IAAA,KAAK,EAAC,QAHV;AAII,IAAA,QAAQ,EAAE,CAAC;AAAExB,MAAAA;AAAF,KAAD,KAAgB;AACtBR,MAAAA,QAAQ,CAAC;AAAEtC,QAAAA,IAAI,EAAE,KAAR;AAAeC,QAAAA,OAAO,EAAE6C,MAAM,CAACuB;AAA/B,OAAD,CAAR;AACH,KANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eASI;AAAO,IAAA,OAAO,EAAC,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,CAbJ,eAwBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,OAAZ;AACI,IAAA,EAAE,EAAC,SADP;AAEI,IAAA,IAAI,EAAC,KAFT;AAGI,IAAA,KAAK,EAAC,SAHV;AAII,IAAA,QAAQ,EAAE,CAAC;AAAExB,MAAAA;AAAF,KAAD,KAAgB;AACtBR,MAAAA,QAAQ,CAAC;AAAEtC,QAAAA,IAAI,EAAE,KAAR;AAAeC,QAAAA,OAAO,EAAE6C,MAAM,CAACuB;AAA/B,OAAD,CAAR;AACH,KANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eASI;AAAO,IAAA,OAAO,EAAC,SAAf;AAAyB,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eATJ,CAxBJ,CADH,gBAsCO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAYjC,GAAG,CAACnC,GAAhB,CAvCZ,CA3BJ,eAqEI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKmC,GAAG,CAACd,uBAAJ,gBACG,uDACI;AAAO,IAAA,OAAO,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,OAAZ;AACI,IAAA,EAAE,EAAC,SADP;AAEI,IAAA,IAAI,EAAC,kBAFT;AAGI,IAAA,KAAK,EAAE,IAHX;AAII,IAAA,QAAQ,EAAE,CAAC;AAAEuB,MAAAA;AAAF,KAAD,KAAgB;AACtBR,MAAAA,QAAQ,CAAC;AAAEtC,QAAAA,IAAI,EAAE,kBAAR;AAA4BC,QAAAA,OAAO,EAAE6C,MAAM,CAACuB;AAA5C,OAAD,CAAR;AACH,KANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eASI;AAAO,IAAA,OAAO,EAAC,SAAf;AAAyB,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBATJ,CAFJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,OAAZ;AACI,IAAA,EAAE,EAAC,WADP;AAEI,IAAA,IAAI,EAAC,kBAFT;AAGI,IAAA,KAAK,EAAE,KAHX;AAII,IAAA,QAAQ,EAAE,CAAC;AAAExB,MAAAA;AAAF,KAAD,KAAgB;AACtBR,MAAAA,QAAQ,CAAC;AAAEtC,QAAAA,IAAI,EAAE,kBAAR;AAA4BC,QAAAA,OAAO,EAAE6C,MAAM,CAACuB;AAA5C,OAAD,CAAR;AACH,KANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eASI;AAAO,IAAA,OAAO,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBATJ,CAbJ,CADH,gBA2BO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAA0BjC,GAAG,CAAClC,gBAAJ,GAAuB,iBAAvB,GAA2C,WAArE,CA5BZ,CArEJ,eAoGI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAsB,IAAIqE,IAAJ,CAASnC,GAAG,CAACG,WAAb,EAA0BiC,YAA1B,EAAtB,CADJ,CApGJ,eAuGI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAoBpC,GAAG,CAACJ,WAAxB,CADJ,CAvGJ,eA0GI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKI,GAAG,CAACb,kBAAJ,gBACG,uDACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,KAAK,EAAEa,GAAG,CAACjC,WAFf;AAGI,IAAA,QAAQ,EAAE,CAAC;AAAE0C,MAAAA;AAAF,KAAD,KAAgB;AACtBR,MAAAA,QAAQ,CAAC;AAAEtC,QAAAA,IAAI,EAAE,aAAR;AAAuBC,QAAAA,OAAO,EAAE6C,MAAM,CAACuB;AAAvC,OAAD,CAAR;AACH,KALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADH,gBAWO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAqBhC,GAAG,CAACjC,WAAzB,CAZZ,CA1GJ,eAyHI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAuB,IAAIoE,IAAJ,CAASnC,GAAG,CAACI,aAAb,EAA4BgC,YAA5B,EAAvB,CADJ,CAzHJ,eA4HI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAyBpC,GAAG,CAACK,eAA7B,CADJ,CA5HJ,eA+HI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAAwCL,GAAG,CAACM,0BAAJ,GAAiC,KAAjC,GAAyC,IAAjF,CADJ,CA/HJ,eAkII;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAuCN,GAAG,CAACO,WAA3C,CADJ,CAlIJ,EAqIK,CACGP,GAAG,CAAChB,aAAJ,IAAqBgB,GAAG,CAACf,UAAzB,IACAe,GAAG,CAACd,uBADJ,IAC+Bc,GAAG,CAACb,kBAFtC,kBAIO,uDACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEmC,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAM,IAAA,KAAK,EAAE;AAAEe,MAAAA,KAAK,EAAE,KAAT;AAAgBH,MAAAA,WAAW,EAAE;AAA7B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqDlC,GAAG,CAAC9B,YAAzD,CAFJ,CAzIZ,CAPJ,eAsJI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE,MAAM+B,QAAQ,CAAC;AAAEtC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAtJJ,eAuJI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvJJ,eAwJI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxJJ,eAyJI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAkBqC,GAAG,CAAChC,QAAJ,CAAasE,MAAb,CAAoB,CAACC,YAAD,EAAeC,cAAf,KAAkCD,YAAY,IAAIC,cAAc,CAAC/C,aAAf,GAA+B,GAArG,EAA0G,CAA1G,CAAlB,CAzJJ,EA0JKO,GAAG,CAACZ,kBAAJ,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,EAAE,EAAC,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,QAAQ,EACJ,CAAC;AAAEqB,MAAAA;AAAF,KAAD,KAAgBR,QAAQ,CAAC;AAAEtC,MAAAA,IAAI,EAAE,gBAAR;AAA0BC,MAAAA,OAAO,EAAE6C,MAAM,CAACuB;AAA1C,KAAD,CAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,eASI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,EAAE,EAAC,gBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,QAAQ,EACJ,CAAC;AAAEvB,MAAAA;AAAF,KAAD,KAAgBR,QAAQ,CAAC;AAAEtC,MAAAA,IAAI,EAAE,kBAAR;AAA4BC,MAAAA,OAAO,EAAE6C,MAAM,CAACuB;AAA5C,KAAD,CAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CATJ,eAiBI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,EAAE,EAAC,gBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,oBAEK;AACG,IAAA,IAAI,EAAC,QADR;AAEG,IAAA,IAAI,EAAE,IAFT;AAGG,IAAA,GAAG,EAAE,CAHR;AAIG,IAAA,QAAQ,EAAE,CAAC;AAAEvB,MAAAA;AAAF,KAAD,KAAgB;AACtB,UAAI,OAAO,CAACA,MAAM,CAACuB,KAAf,KAAyB,QAA7B,EAAuC;AACnC/B,QAAAA,QAAQ,CAAC;AAAEtC,UAAAA,IAAI,EAAE,kBAAR;AAA4BC,UAAAA,OAAO,EAAE6C,MAAM,CAACuB;AAA5C,SAAD,CAAR;AACH;AACJ,KARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFL,CAjBJ,eA8BI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,EAAE,EAAC,qBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,QAAQ,EACJ,CAAC;AAAEvB,MAAAA;AAAF,KAAD,KAAgBR,QAAQ,CAAC;AAAEtC,MAAAA,IAAI,EAAE,uBAAR;AAAiCC,MAAAA,OAAO,EAAE6C,MAAM,CAACuB;AAAjD,KAAD,CAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CA9BJ,eAsCI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEJ,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAtCJ,EAuCK5B,GAAG,CAACR,mBAAJ,iBAA2B;AAAM,IAAA,KAAK,EAAE;AAAE6C,MAAAA,KAAK,EAAE,KAAT;AAAgBH,MAAAA,WAAW,EAAE;AAA7B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqDlC,GAAG,CAACR,mBAAzD,CAvChC,CAFJ,CADH,gBA8CO,uDACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE,MAAMS,QAAQ,CAAC;AAAEtC,MAAAA,IAAI,EAAE,oBAAR;AAA8BC,MAAAA,OAAO,EAAE;AAAvC,KAAD,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEKoC,GAAG,CAACR,mBAAJ,iBAA2B;AAAM,IAAA,KAAK,EAAE;AAAE6C,MAAAA,KAAK,EAAE,KAAT;AAAgBH,MAAAA,WAAW,EAAE;AAA7B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqDlC,GAAG,CAACR,mBAAzD,CAFhC,CAxMZ,EA+MQQ,GAAG,CAAChC,QAAJ,CAAa0D,MAAb,GACI1B,GAAG,CAAChC,QAAJ,CAAa+D,GAAb,CAAiB,CAACU,OAAD,EAAUC,KAAV,kBACb;AAAK,IAAA,GAAG,EAAEA,KAAV;AAAiB,IAAA,SAAS,EAAC,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAa,IAAIP,IAAJ,CAASM,OAAO,CAAClD,IAAjB,EAAuB6C,YAAvB,EAAb,CADJ,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAeK,OAAO,CAACnD,MAAvB,CADJ,CAJJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAoBmD,OAAO,CAAC7C,WAA5B,CADJ,CAPJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAc6C,OAAO,CAAChD,aAAR,GAAwB,GAAtC,CADJ,CAVJ,CADJ,CADJ,gBAiBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAhOb,CADJ;AAqOH,CAhcD;;AAkcA,eAAenC,UAAf","sourcesContent":["import React, { useEffect, useReducer } from \"react\";\nimport { useParams, Redirect } from \"react-router-dom\";\n\nimport { getData, sendData } from \"../services/api\";\n\nconst DogDetails = () => {\n    const { dogId } = useParams();\n\n    const reducer = (state, action) => {\n        switch (action.type) {\n            case \"setDog\":\n                return { ...state, ...action.payload };\n            case \"sex\":\n                return { ...state, sex: action.payload };\n            case \"alterationStatus\":\n                return { ...state, alterationStatus: action.payload };\n            case \"microchipId\":\n                return { ...state, microchipId: action.payload };\n            case \"expenses\":\n                return { ...state, expenses: action.payload };\n            case \"availableBreeds\":\n                return { ...state, availableBreeds: action.payload };\n            case \"errorMessage\":\n                return { ...state, errorMessage: action.payload };\n            case \"showModal\":\n                return { ...state, id: action.payload, showModal: true };\n            case \"dogDashboard\":\n                return { ...state, dashboardRedirect: true };\n            case \"reloadPage\":\n                /* eslint-disable no-restricted-globals */\n                location.reload();\n                return;\n            case \"breed\":\n                let newBreed = state.breed;\n                if (action.payload.checked) {\n                    newBreed[action.payload.breed] = true;\n                    if (action.payload.breed === \"Mixed\" || action.payload.breed === \"Unknown\") {\n                        // delete all other breeds\n                        for (const key in newBreed) {\n                            if (key !== action.payload.breed) {\n                                delete newBreed[key];\n                                document.querySelector(`#${key.split(\" \").join(\"-\")}`).checked = false;\n                            }\n                        }\n                    }\n                } else {\n                    delete newBreed[action.payload.breed];\n                }\n                return { ...state, breed: newBreed };\n            case \"canEditBreeds\":\n                return { ...state, canEditBreeds: true };\n            case \"canEditSex\":\n                return { ...state, canEditSex: true };\n            case \"canEditAlterationStatus\":\n                return { ...state, canEditAlterationStatus: true };\n            case \"canEditMicrochipId\":\n                return { ...state, canEditMicrochipId: true };\n            case \"showAddExpenseForm\":\n                return { ...state, showAddExpenseForm: action.payload };\n            case \"newExpenseVendor\":\n                return { ...state, newExpense: { ...(state.newExpense), vendor: action.payload } };\n            case \"newExpenseDate\":\n                return { ...state, newExpense: { ...(state.newExpense), date: action.payload } };\n            case \"newExpenseAmount\":\n                if (typeof +action.payload !== \"number\" || +action.payload < 0) {\n                    return { ...state, expenseErrorMessage: \"Please enter a valid numeric amount.\" }\n                } else {\n                    if (state.expenseErrorMessage === \"Please enter a valid numeric amount.\") {\n                        return { ...state, expenseErrorMessage: \"\" }\n                    }\n                }\n                return { ...state, newExpense: { ...(state.newExpense), amountInCents: Math.floor(+action.payload * 100) } };\n            case \"newExpenseDescription\":\n                return { ...state, newExpense: { ...(state.newExpense), description: action.payload } };\n            case \"resetNewExpense\":\n                return { ...state, newExpense: { dogIdFk: dogId } };\n            case \"addExpense\":\n                return { ...state, expenses: [...(state.expenses), action.payload] };\n            case \"expenseErrorMessage\":\n                return { ...state, expenseErrorMessage: action.payload }\n            case \"addAdoptionRedirect\":\n                return { ...state, addAdoptionRedirect: true };\n            default:\n                throw new Error();\n        }\n    };\n\n    const [dog, dispatch] = useReducer(\n        reducer,\n        {\n            name: \"\",\n            breed: {},\n            sex: null,\n            alterationStatus: null,\n            dateOfBirth: \"\",\n            description: \"\",\n            microchipId: \"\",\n            surrenderDate: \"\",\n            surrenderReason: \"\",\n            surrenderedByAnimalControl: null,\n            volunteerId: -1,\n            expenses: [],\n            availableBreeds: [],\n            errorMessage: \"\",\n            showModal: false,\n            canEditBreeds: false,\n            canEditSex: false,\n            canEditAlterationStatus: false,\n            canEditMicrochipId: false,\n            showAddExpenseForm: false,\n            newExpense: { dogIdFk: dogId },\n            expenseErrorMessage: \"\",\n            addAdoptionRedirect: false\n        });\n\n    useEffect(() => {\n        getData(`/dog?id=${dogId}`)\n            .then(({ target }) => {\n                const dog = JSON.parse(target.response);\n                // convert breed[] to breed{}\n                let newBreed = {};\n                if (dog.breed) {\n                    dog.breed.forEach(b => {\n                        newBreed[b] = true;\n                    });\n                    dog.breed = newBreed;\n                }\n                // derive permissions\n                if (dog.breed[\"Unknown\"] || dog.breed[\"Mixed\"]) {\n                    dispatch({ type: \"canEditBreeds\" });\n                }\n                if (dog.sex === \"unknown\") {\n                    dispatch({ type: \"canEditSex\" });\n                }\n                if (!dog.alterationStatus) {\n                    dispatch({ type: \"canEditAlterationStatus\" });\n                }\n                dog.microchipId = dog.microchipId.String;\n                if (!dog.microchipId) {\n                    dispatch({ type: \"canEditMicrochipId\" });\n                }\n                dispatch({ type: \"setDog\", payload: dog });\n                if (dog.breed[\"Unknown\"] || dog.breed[\"Mixed\"]) {\n                    getData(\"/breed\")\n                        .then(({ target }) => {\n                            dispatch({ type: \"availableBreeds\", payload: JSON.parse(target.response) });\n                        })\n                        .catch(error => {\n                            dispatch({ type: \"errorMessage\", payload: error });\n                            console.log(\"error getting available breeds:\", error);\n                        })\n                }\n            })\n            .catch(error => {\n                dispatch({ type: \"errorMessage\", payload: error });\n                console.log(\"error getting dog data:\", error);\n            })\n        /* eslint-disable react-hooks/exhaustive-deps */\n    }, [dogId]);\n\n    useEffect(() => {\n        const radioButton = document.querySelector(`#${dog.sex}`);\n        if (radioButton) radioButton.checked = true;\n    }, [dog.sex]);\n\n    useEffect(() => {\n        const radioButton = document.querySelector(`#unaltered`);\n        if (radioButton) radioButton.checked = true;\n    }, [dog.alterationStatus]);\n\n    useEffect(() => {\n        for (const breed in dog.breed) {\n            const checkbox = document.querySelector(`#${breed.split(\" \").join(\"-\")}`);\n            if (checkbox) checkbox.checked = true;\n        }\n    }, [dog]);\n\n    const updateDog = () => {\n        const dogData = {\n            breed: Object.keys(dog.breed),\n            sex: dog.sex,\n            alterationStatus: dog.alterationStatus === \"true\" ? true : false,\n        };\n        dogData.microchipId = { \"String\": dog.microchipId, \"Valid\": true };\n        if (!Object.keys(dog.breed).length) {\n            dispatch({ type: \"errorMessage\", payload: \"Please select at least one dog breed.\" });\n            return;\n        }\n        sendData(dogData, `/dog/${dogId}`, \"put\")\n            .then(({ target }) => {\n                if (target.status === 204) {\n                    // show success modal\n                    dispatch({ type: \"reloadPage\" });\n                } else {\n                    console.log(\"error adding dog (non-200):\", target.response);\n                    dispatch({ type: \"errorMessage\", payload: target.response });\n                }\n            })\n            .catch(error => {\n                // show error modal\n                console.log(\"error adding dog (catch):\", error);\n                dispatch({ type: \"errorMessage\", payload: JSON.parse(error) });\n            });\n    }\n\n    const addExpense = () => {\n        sendData(dog.newExpense, `/expense`)\n            .then(({ target }) => {\n                if (target.status === 201) {\n                    dispatch({ type: \"resetNewExpense\" });\n                    dispatch({ type: \"showAddExpenseForm\", payload: false });\n                    dispatch({ type: \"addExpense\", payload: JSON.parse(target.response) });\n                    dispatch({ type: \"expenseErrorMessage\", payload: \"\" });\n                } else {\n                    console.log(target.response);\n                    dispatch({ type: \"expenseErrorMessage\", payload: target.response });\n                }\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch({ type: \"expenseErrorMessage\", payload: error });\n            });\n    }\n\n    return (\n        <>\n            {dog.dashboardRedirect && <Redirect to={{ pathname: `/dog-dashboard` }} />}\n            {dog.addAdoptionRedirect && <Redirect to={{ pathname: `/add-adoption`, search: `?dogId=${dogId}` }} />}\n            <h1>Dog Details</h1>\n            <button type=\"button\" onClick={() => dispatch({ type: \"dogDashboard\" })}>Back to Dog Dashboard</button>\n            {dog.alterationStatus && dog.microchipId &&\n                <button type=\"button\" onClick={() => dispatch({ type: \"addAdoptionRedirect\" })}>Add Adoption</button>}\n            <form>\n                <div className=\"form-unit\">\n                    <span>Name: {dog.name}</span>\n                </div>\n                {dog.canEditBreeds ? (\n                    <div className=\"form-unit\">\n                        <label htmlFor=\"breed\">Dog Breed: (Please select at least one.)</label>\n                        {dog.availableBreeds.map(({ id, breed: b = \"\" }) => {\n                            return (\n                                <p key={id}>\n                                    <input type=\"checkbox\"\n                                        value={b}\n                                        id={b.split(\" \").join(\"-\")}\n                                        onChange={({ target }) => {\n                                            dispatch({ type: 'breed', payload: { breed: target.value, checked: target.checked } })\n                                        }}\n                                        disabled={(dog.breed[\"Mixed\"] || dog.breed[\"Unknown\"]) && !(b === \"Mixed\" || b === \"Unknown\")}\n                                    /><label htmlFor={b} style={{ display: \"inline\", paddingLeft: \"10px\" }}>{b}</label>\n                                </p>\n                            )\n                        })}\n                    </div>\n                ) : (\n                        <div className=\"form-unit\">\n                            <span>Breed: {Object.keys(dog.breed).join(\"/\")}</span>\n                        </div>\n                    )}\n                <div className=\"form-unit\">\n                    {dog.canEditSex ? (\n                        <>\n                            <label htmlFor=\"sex\">Dog Sex:</label>\n                            <p>\n                                <input type=\"radio\"\n                                    id=\"male\"\n                                    name=\"sex\"\n                                    value=\"male\"\n                                    onChange={({ target }) => {\n                                        dispatch({ type: \"sex\", payload: target.value })\n                                    }}\n                                />\n                                <label htmlFor=\"male\" style={{ display: \"inline\" }}>Male</label>\n                            </p>\n                            <p>\n                                <input type=\"radio\"\n                                    id=\"female\"\n                                    name=\"sex\"\n                                    value=\"female\"\n                                    onChange={({ target }) => {\n                                        dispatch({ type: \"sex\", payload: target.value })\n                                    }}\n                                />\n                                <label htmlFor=\"female\" style={{ display: \"inline\" }}>Female</label>\n                            </p>\n                            <p>\n                                <input type=\"radio\"\n                                    id=\"unknown\"\n                                    name=\"sex\"\n                                    value=\"unknown\"\n                                    onChange={({ target }) => {\n                                        dispatch({ type: 'sex', payload: target.value })\n                                    }}\n                                />\n                                <label htmlFor=\"unknown\" style={{ display: \"inline\" }}>Unknown</label>\n                            </p>\n                        </>\n                    ) : (\n                            <span>Sex: {dog.sex}</span>\n                        )}\n                </div>\n                <div className=\"form-unit\">\n                    {dog.canEditAlterationStatus ? (\n                        <>\n                            <label htmlFor=\"alterationStatus\">Dog Alteration Status:</label>\n                            <p>\n                                <input type=\"radio\"\n                                    id=\"altered\"\n                                    name=\"alterationStatus\"\n                                    value={true}\n                                    onChange={({ target }) => {\n                                        dispatch({ type: 'alterationStatus', payload: target.value })\n                                    }}\n                                />\n                                <label htmlFor=\"altered\" style={{ display: \"inline\" }}>Spayed/Neutered</label>\n                            </p>\n                            <p>\n                                <input type=\"radio\"\n                                    id=\"unaltered\"\n                                    name=\"alterationStatus\"\n                                    value={false}\n                                    onChange={({ target }) => {\n                                        dispatch({ type: 'alterationStatus', payload: target.value })\n                                    }}\n                                />\n                                <label htmlFor=\"unaltered\" style={{ display: \"inline\" }}>Unaltered</label>\n                            </p>\n                        </>\n                    ) : (\n                            <span>Alteration Status: {dog.alterationStatus ? \"Spayed/Neutered\" : \"Unaltered\"}</span>\n                        )}\n                </div>\n                <div className=\"form-unit\">\n                    <span>Date of Birth: {new Date(dog.dateOfBirth).toDateString()}</span>\n                </div>\n                <div className=\"form-unit\">\n                    <span>Description: {dog.description}</span>\n                </div>\n                <div className=\"form-unit\">\n                    {dog.canEditMicrochipId ? (\n                        <>\n                            <label>Microchip ID:</label>\n                            <input\n                                type=\"text\"\n                                value={dog.microchipId}\n                                onChange={({ target }) => {\n                                    dispatch({ type: \"microchipId\", payload: target.value })\n                                }} />\n                        </>\n                    ) : (\n                            <span>Microchip ID: {dog.microchipId}</span>\n                        )}\n                </div>\n                <div className=\"form-unit\">\n                    <span>Surrender Date: {new Date(dog.surrenderDate).toDateString()}</span>\n                </div>\n                <div className=\"form-unit\">\n                    <span>Surrender Reason: {dog.surrenderReason}</span>\n                </div>\n                <div className=\"form-unit\">\n                    <span>Surrender was by Animal Control: {dog.surrenderedByAnimalControl ? \"Yes\" : \"No\"}</span>\n                </div>\n                <div className=\"form-unit\">\n                    <span>Surrender recorded by volunteer {dog.volunteerId}</span>\n                </div>\n                {(\n                    dog.canEditBreeds || dog.canEditSex ||\n                    dog.canEditAlterationStatus || dog.canEditMicrochipId\n                ) && (\n                        <>\n                            <button type=\"button\" onClick={updateDog}>Update Dog</button>\n                            <span style={{ color: \"red\", paddingLeft: \"10px\" }}>{dog.errorMessage}</span>\n                        </>\n                    )}\n            </form>\n            <button type=\"button\" onClick={() => dispatch({ type: \"dogDashboard\" })}> Back to Dog Dashboard</button >\n            <hr></hr>\n            <h1>Expenses</h1>\n            <h3>Dog Total : ${dog.expenses.reduce((totalExpense, currentExpense) => totalExpense += currentExpense.amountInCents / 100, 0)}</h3>\n            {dog.showAddExpenseForm ? (\n                <div>\n                    <h3>New Expense</h3>\n                    <form>\n                        <div className=\"form-unit\">\n                            <label id=\"expense-date\">Date</label>\n                            <input\n                                type=\"date\"\n                                onChange={\n                                    ({ target }) => dispatch({ type: \"newExpenseDate\", payload: target.value })\n                                } />\n                        </div>\n                        <div className=\"form-unit\">\n                            <label id=\"expense-vendor\">Vendor</label>\n                            <input\n                                type=\"text\"\n                                onChange={\n                                    ({ target }) => dispatch({ type: \"newExpenseVendor\", payload: target.value })\n                                } />\n                        </div>\n                        <div className=\"form-unit\">\n                            <label id=\"expense-amount\">Amount (in dollars)</label>\n                            $<input\n                                type=\"number\"\n                                step={0.01}\n                                min={0}\n                                onChange={({ target }) => {\n                                    if (typeof +target.value === \"number\") {\n                                        dispatch({ type: \"newExpenseAmount\", payload: target.value });\n                                    }\n                                }\n                                } />\n                        </div>\n                        <div className=\"form-unit\">\n                            <label id=\"expense-description\">Description</label>\n                            <input\n                                type=\"text\"\n                                onChange={\n                                    ({ target }) => dispatch({ type: \"newExpenseDescription\", payload: target.value })\n                                } />\n                        </div>\n                        <button type=\"button\" onClick={addExpense}>Submit Expense</button>\n                        {dog.expenseErrorMessage && <span style={{ color: \"red\", paddingLeft: \"10px\" }}>{dog.expenseErrorMessage}</span>}\n                    </form>\n                </div>\n            ) : (\n                    <>\n                        <button type=\"button\" onClick={() => dispatch({ type: \"showAddExpenseForm\", payload: true })}>Add New Expense</button>\n                        {dog.expenseErrorMessage && <span style={{ color: \"red\", paddingLeft: \"10px\" }}>{dog.expenseErrorMessage}</span>}\n                    </>\n                )}\n\n            {\n                dog.expenses.length ? (\n                    dog.expenses.map((expense, index) => (\n                        <div key={index} className=\"form-unit\">\n                            <div>\n                                <span>Date: {new Date(expense.date).toDateString()}</span>\n                            </div>\n                            <div>\n                                <span>Vendor: {expense.vendor}</span>\n                            </div>\n                            <div>\n                                <span>Description: {expense.description}</span>\n                            </div>\n                            <div>\n                                <span>Cost: ${expense.amountInCents / 100}</span>\n                            </div>\n                        </div>\n                    ))\n                ) : (<div>No expenses entered yet.</div>)\n            }\n        </>\n    );\n}\n\nexport default DogDetails;"]},"metadata":{},"sourceType":"module"}