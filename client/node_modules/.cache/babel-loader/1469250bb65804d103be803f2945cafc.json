{"ast":null,"code":"var _jsxFileName = \"/Users/ganesh/Desktop/OMSCS/DBMS/Phase1/CS6400-2020-02-Team26/Phase_3/client/src/containers/DogDashboard.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { getData } from \"../services/api\";\nimport { isLoggedIn } from \"../services/auth\";\nimport { NavLinks } from \"../components\";\n\nconst DogDashboard = () => {\n  const CAPACITY = 15;\n  const [state, setState] = useState({\n    dogs: [],\n    addDogRedirect: false,\n    addApplicationRedirect: false,\n    showAvailable: true,\n    showUnavailable: true,\n    dogDetailRedirect: \"\",\n    loginRedirect: false,\n    cookie: {}\n  }); // check auth\n\n  useEffect(() => {\n    const cookie = isLoggedIn();\n\n    if (cookie.hasOwnProperty(\"isTrustedVolunteer\") && cookie.isTrustedVolunteer !== null) {\n      setState({ ...state,\n        cookie\n      });\n    }\n    /* eslint-disable react-hooks/exhaustive-deps */\n\n  }, []);\n\n  const setShowAvailable = () => {\n    setState({ ...state,\n      showAvailable: !state.showAvailable\n    });\n  };\n\n  const setShowUnavailable = () => {\n    setState({ ...state,\n      showUnavailable: !state.showUnavailable\n    });\n  }; // get data for dogs currently in the shelter\n\n\n  useEffect(() => {\n    if (state.cookie.hasOwnProperty(\"isTrustedVolunteer\") && state.cookie.isTrustedVolunteer !== null) {\n      getData(\"/dog?current=true\").then(({\n        target\n      }) => {\n        setState({ ...state,\n          dogs: JSON.parse(target.response)\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }, [state.cookie]);\n\n  const addApplication = () => {\n    setState({ ...state,\n      addApplicationRedirect: true\n    });\n  };\n\n  const addDog = () => {\n    setState({ ...state,\n      addDogRedirect: true\n    });\n  };\n\n  const {\n    addApplicationRedirect,\n    addDogRedirect,\n    dogs,\n    showAvailable,\n    showUnavailable,\n    dogDetailRedirect,\n    cookie\n  } = state;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, addApplicationRedirect && /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: \"/add-application\",\n      state: {\n        from: \"/dog-dashboard\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 40\n    }\n  }), addDogRedirect && /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: \"/add-dog\",\n      state: {\n        from: \"/dog-dashboard\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 32\n    }\n  }), dogDetailRedirect && /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: dogDetailRedirect,\n      state: {\n        from: \"/dog-dashboard\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 35\n    }\n  }), /*#__PURE__*/React.createElement(NavLinks, {\n    isTrustedVolunteer: cookie.isTrustedVolunteer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"main\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, \"Dog Dashboard\"), /*#__PURE__*/React.createElement(ControlPanel, {\n    addApplication: addApplication,\n    addDog: addDog,\n    availableSpaces: CAPACITY - dogs.length,\n    showAvailable: showAvailable,\n    setShowAvailable: setShowAvailable,\n    showUnavailable: showUnavailable,\n    setShowUnavailable: setShowUnavailable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }), dogs.length ? /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 37\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 37\n    }\n  }, \"Breed\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 37\n    }\n  }, \"Sex\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 37\n    }\n  }, \"Alteration Status\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 37\n    }\n  }, \"Age\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 37\n    }\n  }, \"Adoptability Status\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 37\n    }\n  }, \"Date Surrendered\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }, dogs.map((dog, index) => {\n    const ONE_DAY = 1000 * 60 * 60 * 24;\n    const now = Date.now();\n    const then = Date.parse(dog.dateOfBirth);\n    const years = Math.floor((now - then) / (ONE_DAY * 365));\n    const yearsStr = `${years}${!years || years > 1 ? \" years \" : \" year \"}`;\n    const months = Math.floor((now - then) / (ONE_DAY * 30)) % 12;\n    const monthsStr = `${months}${!months || months > 1 ? \" months\" : \" month\"}`;\n    const isAvailable = dog.microchipId.String && dog.alterationStatus;\n\n    if (isAvailable && showAvailable || !isAvailable && showUnavailable) {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        onClick: () => setState({ ...state,\n          dogDetailRedirect: `/dog-details/${dog.id}`\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 49\n        }\n      }, dog.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 49\n        }\n      }, dog.breed.join(\"/\")), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 49\n        }\n      }, dog.sex), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 49\n        }\n      }, dog.alterationStatus ? \"Altered\" : \"Not yet altered\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 49\n        }\n      }, yearsStr, monthsStr), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 49\n        }\n      }, isAvailable ? \"Available\" : \"Not yet available\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 49\n        }\n      }, new Date(dog.surrenderDate).toDateString()));\n    }\n\n    return null;\n  }))) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 26\n    }\n  }, \"There are not any dogs currently in the shelter.\")));\n};\n\nconst ControlPanel = ({\n  addApplication,\n  addDog,\n  availableSpaces,\n  showAvailable,\n  setShowAvailable,\n  showUnavailable,\n  setShowUnavailable,\n  logout\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control-panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, \"Currently Available Spaces: \", availableSpaces), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: showAvailable,\n    id: \"showAvailable\",\n    onChange: setShowAvailable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"showAvailable\",\n    style: {\n      paddingLeft: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }, \"Show dogs available for adoption\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: showUnavailable,\n    id: \"showUnavailable\",\n    onChange: setShowUnavailable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"showUnavailable\",\n    style: {\n      paddingLeft: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  }, \"Show dogs NOT available for adoption\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, availableSpaces && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addDog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 41\n    }\n  }, \"Add Dog\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addApplication,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 21\n    }\n  }, \"Add Adoption Application\"))));\n};\n\nexport default DogDashboard;","map":{"version":3,"sources":["/Users/ganesh/Desktop/OMSCS/DBMS/Phase1/CS6400-2020-02-Team26/Phase_3/client/src/containers/DogDashboard.js"],"names":["React","useEffect","useState","Redirect","getData","isLoggedIn","NavLinks","DogDashboard","CAPACITY","state","setState","dogs","addDogRedirect","addApplicationRedirect","showAvailable","showUnavailable","dogDetailRedirect","loginRedirect","cookie","hasOwnProperty","isTrustedVolunteer","setShowAvailable","setShowUnavailable","then","target","JSON","parse","response","catch","error","console","log","addApplication","addDog","pathname","from","length","map","dog","index","ONE_DAY","now","Date","dateOfBirth","years","Math","floor","yearsStr","months","monthsStr","isAvailable","microchipId","String","alterationStatus","id","name","breed","join","sex","surrenderDate","toDateString","ControlPanel","availableSpaces","logout","paddingLeft"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { getData } from \"../services/api\";\nimport { isLoggedIn } from \"../services/auth\";\nimport { NavLinks } from \"../components\";\n\nconst DogDashboard = () => {\n\n    const CAPACITY = 15;\n    const [state, setState] = useState({\n        dogs: [],\n        addDogRedirect: false,\n        addApplicationRedirect: false,\n        showAvailable: true,\n        showUnavailable: true,\n        dogDetailRedirect: \"\",\n        loginRedirect: false,\n        cookie: {}\n    });\n\n    // check auth\n    useEffect(() => {\n        const cookie = isLoggedIn();\n        if (cookie.hasOwnProperty(\"isTrustedVolunteer\") && cookie.isTrustedVolunteer !== null) {\n            setState({ ...state, cookie });\n        }\n        /* eslint-disable react-hooks/exhaustive-deps */\n    }, []);\n\n    const setShowAvailable = () => {\n        setState({ ...state, showAvailable: !state.showAvailable });\n    }\n\n    const setShowUnavailable = () => {\n        setState({ ...state, showUnavailable: !state.showUnavailable });\n    }\n\n    // get data for dogs currently in the shelter\n    useEffect(() => {\n        if (state.cookie.hasOwnProperty(\"isTrustedVolunteer\") && state.cookie.isTrustedVolunteer !== null) {\n            getData(\"/dog?current=true\")\n                .then(({ target }) => {\n                    setState({ ...state, dogs: JSON.parse(target.response) });\n                })\n                .catch(error => {\n                    console.log(error);\n                })\n        }\n    }, [state.cookie]);\n\n    const addApplication = () => {\n        setState({ ...state, addApplicationRedirect: true });\n    }\n\n    const addDog = () => {\n        setState({ ...state, addDogRedirect: true });\n    }\n\n    const {\n        addApplicationRedirect,\n        addDogRedirect,\n        dogs,\n        showAvailable,\n        showUnavailable,\n        dogDetailRedirect,\n        cookie\n    } = state;\n\n    return (\n        <>\n            {addApplicationRedirect && <Redirect to={{ pathname: \"/add-application\", state: { from: \"/dog-dashboard\" } }} />}\n            {addDogRedirect && <Redirect to={{ pathname: \"/add-dog\", state: { from: \"/dog-dashboard\" } }} />}\n            {dogDetailRedirect && <Redirect to={{ pathname: dogDetailRedirect, state: { from: \"/dog-dashboard\" } }} />}\n\n            <NavLinks isTrustedVolunteer={cookie.isTrustedVolunteer} />\n            <main className=\"container\">\n                <h1>Dog Dashboard</h1>\n\n                <ControlPanel\n                    addApplication={addApplication}\n                    addDog={addDog}\n                    availableSpaces={CAPACITY - dogs.length}\n                    showAvailable={showAvailable}\n                    setShowAvailable={setShowAvailable}\n                    showUnavailable={showUnavailable}\n                    setShowUnavailable={setShowUnavailable}\n                />\n                {\n                    dogs.length ? (\n                        <table>\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th>Breed</th>\n                                    <th>Sex</th>\n                                    <th>Alteration Status</th>\n                                    <th>Age</th>\n                                    <th>Adoptability Status</th>\n                                    <th>Date Surrendered</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {dogs.map((dog, index) => {\n                                    const ONE_DAY = 1000 * 60 * 60 * 24;\n                                    const now = Date.now();\n                                    const then = Date.parse(dog.dateOfBirth);\n                                    const years = Math.floor((now - then) / (ONE_DAY * 365));\n                                    const yearsStr = `${years}${!years || years > 1 ? \" years \" : \" year \"}`;\n                                    const months = Math.floor((now - then) / (ONE_DAY * 30)) % 12;\n                                    const monthsStr = `${months}${!months || months > 1 ? \" months\" : \" month\"}`;\n                                    const isAvailable = dog.microchipId.String && dog.alterationStatus;\n                                    if ((isAvailable && showAvailable) || (!isAvailable && showUnavailable)) {\n                                        return (\n                                            <tr key={index} onClick={() => setState({ ...state, dogDetailRedirect: `/dog-details/${dog.id}` })}>\n                                                <td>{dog.name}</td>\n                                                <td>{dog.breed.join(\"/\")}</td>\n                                                <td>{dog.sex}</td>\n                                                <td>{dog.alterationStatus ? \"Altered\" : \"Not yet altered\"}</td>\n                                                <td>{yearsStr}{monthsStr}</td>\n                                                <td>{isAvailable ? \"Available\" : \"Not yet available\"}</td>\n                                                <td>{(new Date(dog.surrenderDate)).toDateString()}</td>\n                                            </tr>\n                                        );\n                                    }\n                                    return null;\n                                })}\n                            </tbody>\n\n                        </table>\n                    ) : (<h3>There are not any dogs currently in the shelter.</h3>)\n                }\n            </main>\n        </>\n    );\n};\n\nconst ControlPanel = ({\n    addApplication,\n    addDog,\n    availableSpaces,\n    showAvailable,\n    setShowAvailable,\n    showUnavailable,\n    setShowUnavailable,\n    logout\n}) => {\n    return (\n        <div className=\"control-panel\">\n            <h3>Currently Available Spaces: {availableSpaces}</h3>\n            <div>\n                <p>\n                    <input\n                        type=\"checkbox\"\n                        checked={showAvailable}\n                        id=\"showAvailable\"\n                        onChange={setShowAvailable}\n                    />\n                    <label\n                        htmlFor=\"showAvailable\"\n                        style={{ paddingLeft: \"10px\" }}\n                    >Show dogs available for adoption</label>\n                </p>\n                <p>\n                    <input\n                        type=\"checkbox\"\n                        checked={showUnavailable}\n                        id=\"showUnavailable\"\n                        onChange={setShowUnavailable}\n                    />\n                    <label\n                        htmlFor=\"showUnavailable\"\n                        style={{ paddingLeft: \"10px\" }}\n                    >Show dogs NOT available for adoption</label>\n                </p>\n            </div>\n            <div>\n                <p>\n                    {availableSpaces && <button onClick={addDog}>Add Dog</button>}\n                </p>\n                <p>\n                    <button onClick={addApplication}>Add Adoption Application</button>\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport default DogDashboard;"]},"metadata":{},"sourceType":"module"}