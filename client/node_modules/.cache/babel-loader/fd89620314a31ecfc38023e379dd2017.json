{"ast":null,"code":"var _jsxFileName = \"/Users/ganesh/Desktop/OMSCS/DBMS/Phase1/CS6400-2020-02-Team26/Phase_3/client/src/containers/ExpenseAnalysis.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { getData } from \"../services/api\";\n\nconst ExpenseAnalysis = () => {\n  const [state, setState] = useState({\n    data: [],\n    errorMessage: \"\"\n  });\n  useEffect(() => {\n    // replace \"/expense-analysis\" with correct endpoint name\n    getData(\"/expense-analysis\").then(({\n      target\n    }) => {\n      console.log(target);\n\n      if (target.status === 200) {\n        setState({ ...state,\n          data: JSON.parse(target.response)\n        });\n      } else {\n        setState({ ...state,\n          errorMessage: target.response\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n      setState({ ...state,\n        errorMessage: JSON.stringify(error)\n      });\n    });\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"Expense Analysis\"), state.data.length && state.data.map(datum => {\n    {\n      return JSON.stringify(datum);\n    } // return <div className=\"form-unit\">{JSON.stringify(datum)}</div>\n  }), state.errorMessage && /*#__PURE__*/React.createElement(\"div\", {\n    styles: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, state.errorMessage));\n};\n\nexport default ExpenseAnalysis;","map":{"version":3,"sources":["/Users/ganesh/Desktop/OMSCS/DBMS/Phase1/CS6400-2020-02-Team26/Phase_3/client/src/containers/ExpenseAnalysis.js"],"names":["React","useEffect","useState","getData","ExpenseAnalysis","state","setState","data","errorMessage","then","target","console","log","status","JSON","parse","response","catch","error","stringify","length","map","datum","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAE1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC;AAC/BK,IAAAA,IAAI,EAAE,EADyB;AAE/BC,IAAAA,YAAY,EAAE;AAFiB,GAAD,CAAlC;AAKAP,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAE,IAAAA,OAAO,CAAC,mBAAD,CAAP,CACKM,IADL,CACU,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAgB;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAIA,MAAM,CAACG,MAAP,KAAkB,GAAtB,EAA2B;AACvBP,QAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYE,UAAAA,IAAI,EAAEO,IAAI,CAACC,KAAL,CAAWL,MAAM,CAACM,QAAlB;AAAlB,SAAD,CAAR;AACH,OAFD,MAEO;AACHV,QAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYG,UAAAA,YAAY,EAAEE,MAAM,CAACM;AAAjC,SAAD,CAAR;AACH;AACJ,KARL,EASKC,KATL,CASWC,KAAK,IAAI;AACZP,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACAZ,MAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYG,QAAAA,YAAY,EAAEM,IAAI,CAACK,SAAL,CAAeD,KAAf;AAA1B,OAAD,CAAR;AACH,KAZL;AAaA;AACH,GAhBQ,EAgBN,EAhBM,CAAT;AAiBA,sBACI,uDACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAGQb,KAAK,CAACE,IAAN,CAAWa,MAAX,IACAf,KAAK,CAACE,IAAN,CAAWc,GAAX,CAAeC,KAAK,IAAI;AACpB;AACA,aAAOR,IAAI,CAACK,SAAL,CAAeG,KAAf,CAAP;AACC,KAHmB,CAIpB;AACH,GALD,CAJR,EAWKjB,KAAK,CAACG,YAAN,iBACG;AAAK,IAAA,MAAM,EAAE;AAAEe,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgClB,KAAK,CAACG,YAAtC,CAZR,CADJ;AAiBH,CAzCD;;AA2CA,eAAeJ,eAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { getData } from \"../services/api\";\n\nconst ExpenseAnalysis = () => {\n\n    const [state, setState] = useState({\n        data: [],\n        errorMessage: \"\"\n    });\n\n    useEffect(() => {\n        // replace \"/expense-analysis\" with correct endpoint name\n        getData(\"/expense-analysis\")\n            .then(({ target }) => {\n                console.log(target)\n                if (target.status === 200) {\n                    setState({ ...state, data: JSON.parse(target.response) });\n                } else {\n                    setState({ ...state, errorMessage: target.response });\n                }\n            })\n            .catch(error => {\n                console.log(error);\n                setState({ ...state, errorMessage: JSON.stringify(error) });\n            })\n        /* eslint-disable react-hooks/exhaustive-deps */\n    }, []);\n    return (\n        <>\n            <h1>Expense Analysis</h1>\n            {\n                state.data.length && (\n                state.data.map(datum => {\n                    {\n                    return JSON.stringify(datum)\n                    }\n                    // return <div className=\"form-unit\">{JSON.stringify(datum)}</div>\n                })\n            )}\n            {state.errorMessage && (\n                <div styles={{ color: \"red\" }}>{state.errorMessage}</div>\n            )}\n        </>\n    );\n}\n\nexport default ExpenseAnalysis;"]},"metadata":{},"sourceType":"module"}