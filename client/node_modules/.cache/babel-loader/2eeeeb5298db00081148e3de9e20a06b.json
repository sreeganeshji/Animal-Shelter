{"ast":null,"code":"var _jsxFileName = \"/Users/ganesh/Desktop/OMSCS/DBMS/Phase1/CS6400-2020-02-Team26/Phase_3/client/src/containers/MonthlyAdoptionReport.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { getData } from \"../services/api\";\nimport { isLoggedIn } from \"../services/auth\";\nimport { NavLinks } from \"../components\";\n\nfunction getMonthName(monthNum) {\n  switch (monthNum) {\n    case 0:\n      return \"January\";\n\n    case 1:\n      return \"February\";\n\n    case 2:\n      return \"March\";\n\n    case 3:\n      return \"April\";\n\n    case 4:\n      return \"May\";\n\n    case 5:\n      return \"June\";\n\n    case 6:\n      return \"July\";\n\n    case 7:\n      return \"August\";\n\n    case 8:\n      return \"September\";\n\n    case 9:\n      return \"October\";\n\n    case 10:\n      return \"November\";\n\n    case 11:\n      return \"December\";\n\n    default:\n      return \"month\";\n  }\n}\n\nfunction GetMonthOffset(offset) {\n  let today = new Date();\n  today.setMonth(today.getMonth() + offset);\n  return getMonthName(today.getMonth()) + \" \" + today.getFullYear();\n}\n\nconst MonthlyAdoptionReport = () => {\n  const [state, setState] = useState({\n    data: {},\n    acc: {},\n    errorMessage: \"\",\n    loginRedirect: false,\n    cookie: {}\n  }); // check auth\n\n  useEffect(() => {\n    const cookie = isLoggedIn();\n\n    if (cookie.hasOwnProperty(\"isTrustedVolunteer\") && cookie.isTrustedVolunteer) {\n      setState({ ...state,\n        cookie\n      });\n    }\n    /* eslint-disable react-hooks/exhaustive-deps */\n\n  }, []);\n  useEffect(() => {\n    for (let i = -11; i <= 0; i++) {\n      UpdateTables(i);\n    }\n  }, [state.cookie]);\n\n  function UpdateTables(ind) {\n    // if (state.cookie.hasOwnProperty(\"isTrustedVolunteer\") && state.cookie.isTrustedVolunteer) {\n    getData(\"/monthly-adoption-report?month=\" + ind).then(({\n      target\n    }) => {\n      if (target.status === 200) {\n        const dataDict = state.data;\n        dataDict[ind] = JSON.parse(target.response);\n        setState({ ...state,\n          data: dataDict\n        });\n      } else {\n        setState({ ...state,\n          errorMessage: target.response\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n      setState({ ...state,\n        errorMessage: JSON.stringify(error)\n      });\n    }); // }\n  }\n\n  function getTotalValues(indx) {\n    var acc = {\n      \"SurrenderCount\": 0,\n      \"AdoptionCount\": 0,\n      \"AdoptionFees\": 0,\n      \"Expenses\": 0,\n      \"Profit\": 0\n    };\n\n    const expenseCents = (() => {\n      const cents = Math.round(acc.Expenses.Float64 % 100);\n      return cents < 10 ? \"0\" + cents : cents;\n    })();\n\n    const expenseDollars = Math.floor(acc.Expenses.Float64 / 100);\n\n    const adoptionFeeCents = (() => {\n      const cents = Math.round(acc.AdoptionFees.Float64 % 100);\n      return cents < 10 ? \"0\" + cents : cents;\n    })();\n\n    const adoptionFeeDollars = Math.floor(acc.AdoptionFees.Float64 / 100);\n\n    const profitCents = (() => {\n      const cents = Math.round(acc.Profit.Float64 % 100);\n      return cents < 10 ? \"0\" + cents : cents;\n    })();\n\n    const profitDollars = () => {\n      return Math.floor(acc.Profit.Float64 / 100);\n    };\n\n    state.data[indx].map(datum => {\n      acc.SurrenderCount += datum.SurrenderCount.Float64;\n      acc.AdoptionCount += datum.AdoptionCount.Float64;\n      acc.AdoptionFees += datum.AdoptionFees.Float64;\n      acc.Expenses += datum.Expenses.Float64;\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, acc.SurrenderCount.Float64), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, acc.AdoptionCount.Float64), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, \"$\", expenseDollars, \".\", expenseCents), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, \"$\", adoptionFeeDollars, \".\", adoptionFeeCents), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, \"$\", profitDollars, \".\", profitCents));\n  }\n\n  function getTableValues() {\n    var indices = [];\n    var i = 0;\n\n    for (i = -11; i <= 0; i++) {\n      indices.push(i);\n    }\n\n    return indices.map(indx => {\n      if (indx in state.data && state.data[indx].length) {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 37\n          }\n        }, GetMonthOffset(indx))), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 33\n          }\n        })), state.data[indx].map(datum => {\n          const expenseCents = (() => {\n            const cents = Math.round(datum.Expenses.Float64 % 100);\n            return cents < 10 ? \"0\" + cents : cents;\n          })();\n\n          const expenseDollars = Math.floor(datum.Expenses.Float64 / 100);\n\n          const adoptionFeeCents = (() => {\n            const cents = Math.round(datum.AdoptionFees.Float64 % 100);\n            return cents < 10 ? \"0\" + cents : cents;\n          })();\n\n          const adoptionFeeDollars = Math.floor(datum.AdoptionFees.Float64 / 100);\n\n          const profitCents = (() => {\n            const cents = Math.round(datum.Profit.Float64 % 100);\n            return cents < 10 ? \"0\" + cents : cents;\n          })();\n\n          const profitDollars = Math.floor(datum.Profit.Float64 / 100);\n          return /*#__PURE__*/React.createElement(\"tr\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 37\n            }\n          }), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 41\n            }\n          }, datum.breed), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 41\n            }\n          }, datum.SurrenderCount.Float64), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 41\n            }\n          }, datum.AdoptionCount.Float64), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 41\n            }\n          }, \"$\", expenseDollars, \".\", expenseCents), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 41\n            }\n          }, \"$\", adoptionFeeDollars, \".\", adoptionFeeCents), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 41\n            }\n          }, \"$\", profitDollars, \".\", profitCents));\n        }), /*#__PURE__*/React.createElement(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 37\n          }\n        }, \"Total\")), getTotalValues(indx)));\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"main\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }, \"Monthly Adoption Report\"), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 25\n    }\n  }, \"Month\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 25\n    }\n  }, \"Breed\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 25\n    }\n  }, \"Surrender Count\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 25\n    }\n  }, \"Adoption Count\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 25\n    }\n  }, \"Expenses\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 25\n    }\n  }, \"Adoption Fees\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 25\n    }\n  }, \"Profit\")), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 21\n    }\n  }, getTableValues())), state.errorMessage && /*#__PURE__*/React.createElement(\"div\", {\n    styles: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 21\n    }\n  }, state.errorMessage)));\n};\n\nexport default MonthlyAdoptionReport;","map":{"version":3,"sources":["/Users/ganesh/Desktop/OMSCS/DBMS/Phase1/CS6400-2020-02-Team26/Phase_3/client/src/containers/MonthlyAdoptionReport.js"],"names":["React","useEffect","useState","getData","isLoggedIn","NavLinks","getMonthName","monthNum","GetMonthOffset","offset","today","Date","setMonth","getMonth","getFullYear","MonthlyAdoptionReport","state","setState","data","acc","errorMessage","loginRedirect","cookie","hasOwnProperty","isTrustedVolunteer","i","UpdateTables","ind","then","target","status","dataDict","JSON","parse","response","catch","error","console","log","stringify","getTotalValues","indx","expenseCents","cents","Math","round","Expenses","Float64","expenseDollars","floor","adoptionFeeCents","AdoptionFees","adoptionFeeDollars","profitCents","Profit","profitDollars","map","datum","SurrenderCount","AdoptionCount","getTableValues","indices","push","length","breed","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { getData } from \"../services/api\";\nimport { isLoggedIn } from \"../services/auth\";\nimport { NavLinks } from \"../components\";\n\nfunction getMonthName(monthNum) {\n    switch (monthNum) {\n        case 0: return \"January\"\n        case 1: return \"February\"\n        case 2: return \"March\"\n        case 3: return \"April\"\n        case 4: return \"May\"\n        case 5: return \"June\"\n        case 6: return \"July\"\n        case 7: return \"August\"\n        case 8: return \"September\"\n        case 9: return \"October\"\n        case 10: return \"November\"\n        case 11: return \"December\"\n\n        default: return \"month\"\n\n    }\n}\n\nfunction GetMonthOffset(offset) {\n    let today = new Date()\n    today.setMonth(today.getMonth() + offset)\n\n    return getMonthName(today.getMonth()) + \" \" + today.getFullYear()\n}\n\nconst MonthlyAdoptionReport = () => {\n\n    const [state, setState] = useState({\n        data: {},\n        acc:{},\n        errorMessage: \"\",\n        loginRedirect: false,\n        cookie: {}\n    });\n\n    // check auth\n    useEffect(() => {\n        const cookie = isLoggedIn();\n        if (cookie.hasOwnProperty(\"isTrustedVolunteer\") && cookie.isTrustedVolunteer) {\n            setState({ ...state, cookie });\n        }\n        /* eslint-disable react-hooks/exhaustive-deps */\n    }, []);\n\n    useEffect(() => {\n        for (let i = -11; i <= 0; i++) {\n            UpdateTables(i)\n        }\n\n    }, [state.cookie]);\n\n    function UpdateTables(ind) {\n\n        // if (state.cookie.hasOwnProperty(\"isTrustedVolunteer\") && state.cookie.isTrustedVolunteer) {\n            getData(\"/monthly-adoption-report?month=\" + ind)\n                .then(({ target }) => {\n                    if (target.status === 200) {\n\n                        const dataDict = state.data\n                        dataDict[ind] = JSON.parse(target.response)\n\n                        setState({ ...state, data: dataDict });\n\n                    } else {\n                        setState({ ...state, errorMessage: target.response });\n                    }\n                })\n                .catch(error => {\n                    console.log(error);\n                    setState({ ...state, errorMessage: JSON.stringify(error) });\n                })\n        // }\n    }\n\n    function getTotalValues(indx) {\n        var acc = {\"SurrenderCount\":0, \"AdoptionCount\":0, \"AdoptionFees\":0, \"Expenses\":0, \"Profit\":0}\n\n        const expenseCents = (() => {\n            const cents = Math.round(acc.Expenses.Float64 % 100);\n            return cents < 10 ? \"0\" + cents : cents;\n        })();\n        const expenseDollars = Math.floor(acc.Expenses.Float64 / 100);\n\n        const adoptionFeeCents = (() => {\n            const cents = Math.round(acc.AdoptionFees.Float64 % 100);\n            return cents < 10 ? \"0\" + cents : cents;\n        })();\n        const adoptionFeeDollars = Math.floor(acc.AdoptionFees.Float64 / 100);\n\n        const profitCents = (() => {\n            const cents = Math.round(acc.Profit.Float64 % 100);\n            return cents < 10 ? \"0\" + cents : cents;\n        })();\n        const profitDollars = (()=>{return Math.floor(acc.Profit.Float64 / 100)});\n\n        state.data[indx].map(datum=> {\n\n            acc.SurrenderCount += datum.SurrenderCount.Float64\n            acc.AdoptionCount += datum.AdoptionCount.Float64\n            acc.AdoptionFees += datum.AdoptionFees.Float64\n            acc.Expenses += datum.Expenses.Float64\n        })\n\n        return (\n   <>\n                <td></td>\n                <td>{acc.SurrenderCount.Float64}</td>\n                <td>{acc.AdoptionCount.Float64}</td>\n                <td>${expenseDollars}.{expenseCents}</td>\n                <td>${adoptionFeeDollars}.{adoptionFeeCents}</td>\n                <td>${profitDollars}.{profitCents}</td>\n           </>\n        )\n    }\n\n    function getTableValues() {\n        var indices = [];\n        var i = 0;\n        for (i = -11; i <= 0; i++) {\n            indices.push(i);\n        }\n\n        return (\n            indices.map(indx => {\n                if (indx in state.data && state.data[indx].length) {\n\n\n                    return (\n                        <>\n                            <tr>\n\n                                <td>\n                                    <h3>{GetMonthOffset(indx)}</h3></td>\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                            </tr>\n                            {state.data[indx].map(datum => {\n                                const expenseCents = (() => {\n                                    const cents = Math.round(datum.Expenses.Float64 % 100);\n                                    return cents < 10 ? \"0\" + cents : cents;\n                                })();\n                                const expenseDollars = Math.floor(datum.Expenses.Float64 / 100);\n\n                                const adoptionFeeCents = (() => {\n                                    const cents = Math.round(datum.AdoptionFees.Float64 % 100);\n                                    return cents < 10 ? \"0\" + cents : cents;\n                                })();\n                                const adoptionFeeDollars = Math.floor(datum.AdoptionFees.Float64 / 100);\n\n                                const profitCents = (() => {\n                                    const cents = Math.round(datum.Profit.Float64 % 100);\n                                    return cents < 10 ? \"0\" + cents : cents;\n                                })();\n                                const profitDollars = Math.floor(datum.Profit.Float64 / 100);\n\n                                return (\n                                    <tr>\n                                    <td></td>\n                                        <td>{datum.breed}</td>\n                                        <td>{datum.SurrenderCount.Float64}</td>\n                                        <td>{datum.AdoptionCount.Float64}</td>\n                                        <td>${expenseDollars}.{expenseCents}</td>\n                                        <td>${adoptionFeeDollars}.{adoptionFeeCents}</td>\n                                        <td>${profitDollars}.{profitCents}</td>\n                                    </tr>\n                                )\n                            }\n                            )}\n                            <tr>\n                                <td><h3>Total</h3></td>\n                                {\n                                    getTotalValues(indx)\n                                }\n                            </tr>\n                        </>\n\n                    )\n\n                }\n            }\n\n            )\n\n        )\n    }\n\n    return (\n        <>\n            {/*<NavLinks isTrustedVolunteer={state.cookie.isTrustedVolunteer} />*/}\n            <main className=\"container\">\n                <h1>Monthly Adoption Report</h1>\n                <table>\n                    <thead>\n                        <td>Month</td>\n                        <td>Breed</td>\n                        <td>Surrender Count</td>\n                        <td>Adoption Count</td>\n                        <td>Expenses</td>\n                        <td>Adoption Fees</td>\n                        <td>Profit</td>\n                    </thead>\n                    <tbody>\n                        {\n                            getTableValues()\n                        }\n                    </tbody>\n                </table>\n\n                {state.errorMessage && (\n                    <div styles={{ color: \"red\" }}>{state.errorMessage}</div>\n                )}\n            </main>\n        </>\n    );\n}\n\nexport default MonthlyAdoptionReport;\n\n"]},"metadata":{},"sourceType":"module"}