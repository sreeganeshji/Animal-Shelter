{"ast":null,"code":"var _jsxFileName = \"/Users/ganesh/Desktop/OMSCS/DBMS/Phase1/CS6400-2020-02-Team26/Phase_3/client/src/containers/MonthlyAdoptionReport.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { getData } from \"../services/api\";\n\nfunction getMonthName(monthNum) {\n  switch (monthNum) {\n    case 1:\n      return \"January\";\n\n    case 2:\n      return \"February\";\n\n    case 3:\n      return \"March\";\n\n    case 4:\n      return \"April\";\n\n    case 5:\n      return \"May\";\n\n    case 6:\n      return \"June\";\n\n    case 7:\n      return \"July\";\n\n    case 8:\n      return \"August\";\n\n    case 9:\n      return \"September\";\n\n    case 10:\n      return \"October\";\n\n    case 11:\n      return \"November\";\n\n    case 12:\n      return \"December\";\n\n    default:\n      return \"month\";\n  }\n}\n\nfunction GetMonthOffset(offset) {\n  var today = new Date();\n  today.setMonth(today.getMonth() + offset);\n  return getMonthName(today.getMonth()) + \" \" + today.getFullYear();\n}\n\nconst MonthlyAdoptionReport = () => {\n  const [state, setState] = useState({\n    data: [],\n    errorMessage: \"\"\n  });\n  useEffect(() => {\n    // replace \"/monthly-adoption-report\" with correct endpoint name\n    getData(\"/monthly-adoption-report?month=-10\").then(({\n      target\n    }) => {\n      console.log(target);\n\n      if (target.status === 200) {\n        setState({ ...state,\n          data: JSON.parse(target.response)\n        });\n      } else {\n        setState({ ...state,\n          errorMessage: target.response\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n      setState({ ...state,\n        errorMessage: JSON.stringify(error)\n      });\n    });\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Monthly Adoption Report\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, GetMonthOffset(0)), state.data.length && state.data.map(datum => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-unit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 28\n      }\n    }, JSON.stringify(datum));\n  }), state.errorMessage && /*#__PURE__*/React.createElement(\"div\", {\n    styles: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, state.errorMessage));\n};\n\nexport default MonthlyAdoptionReport;","map":{"version":3,"sources":["/Users/ganesh/Desktop/OMSCS/DBMS/Phase1/CS6400-2020-02-Team26/Phase_3/client/src/containers/MonthlyAdoptionReport.js"],"names":["React","useEffect","useState","getData","getMonthName","monthNum","GetMonthOffset","offset","today","Date","setMonth","getMonth","getFullYear","MonthlyAdoptionReport","state","setState","data","errorMessage","then","target","console","log","status","JSON","parse","response","catch","error","stringify","length","map","datum","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { getData } from \"../services/api\";\n\nfunction getMonthName(monthNum){\n    switch (monthNum) {\n        case 1:return \"January\"\n        case 2:return \"February\"\n        case 3:return \"March\"\n        case 4:return \"April\"\n        case 5:return \"May\"\n        case 6:return \"June\"\n        case 7:return \"July\"\n        case 8:return \"August\"\n        case 9:return \"September\"\n        case 10:return \"October\"\n        case 11:return \"November\"\n        case 12:return \"December\"\n\n        default: return\"month\"\n\n    }\n}\n\nfunction GetMonthOffset(offset){\nvar today = new Date()\n    today.setMonth(today.getMonth()+offset)\n    return getMonthName(today.getMonth())+\" \"+today.getFullYear()\n}\n\nconst MonthlyAdoptionReport = () => {\n\n    const [state, setState] = useState({\n        data: [],\n        errorMessage: \"\"\n    });\n\n    useEffect(() => {\n        // replace \"/monthly-adoption-report\" with correct endpoint name\n        getData(\"/monthly-adoption-report?month=-10\")\n            .then(({ target }) => {\n                console.log(target)\n                if (target.status === 200) {\n                    setState({ ...state, data: JSON.parse(target.response) });\n                } else {\n                    setState({ ...state, errorMessage: target.response });\n                }\n            })\n            .catch(error => {\n                console.log(error);\n                setState({ ...state, errorMessage: JSON.stringify(error) });\n            })\n        /* eslint-disable react-hooks/exhaustive-deps */\n    }, []);\n    return (\n        <>\n            <h1>Monthly Adoption Report</h1>\n            <p>{GetMonthOffset(0)}</p>\n            {state.data.length && (\n                state.data.map(datum => {\n                    return <div className=\"form-unit\">{JSON.stringify(datum)}</div>\n                })\n            )}\n            {state.errorMessage && (\n                <div styles={{ color: \"red\" }}>{state.errorMessage}</div>\n            )}\n        </>\n    );\n}\n\nexport default MonthlyAdoptionReport;"]},"metadata":{},"sourceType":"module"}