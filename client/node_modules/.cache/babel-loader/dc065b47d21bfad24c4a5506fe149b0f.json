{"ast":null,"code":"var _jsxFileName = \"/Users/ganesh/Desktop/OMSCS/DBMS/Phase1/CS6400-2020-02-Team26/Phase_3/client/src/containers/MonthlyAdoptionReport.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { getData } from \"../services/api\";\nimport { isLoggedIn } from \"../services/auth\";\nimport { NavLinks } from \"../components\";\n\nfunction getMonthName(monthNum) {\n  switch (monthNum) {\n    case 0:\n      return \"January\";\n\n    case 1:\n      return \"February\";\n\n    case 2:\n      return \"March\";\n\n    case 3:\n      return \"April\";\n\n    case 4:\n      return \"May\";\n\n    case 5:\n      return \"June\";\n\n    case 6:\n      return \"July\";\n\n    case 7:\n      return \"August\";\n\n    case 8:\n      return \"September\";\n\n    case 9:\n      return \"October\";\n\n    case 10:\n      return \"November\";\n\n    case 11:\n      return \"December\";\n\n    default:\n      return \"month\";\n  }\n}\n\nfunction GetMonthOffset(offset) {\n  let today = new Date();\n  today.setMonth(today.getMonth() + offset);\n  return getMonthName(today.getMonth()) + \" \" + today.getFullYear();\n}\n\nconst MonthlyAdoptionReport = () => {\n  const [state, setState] = useState({\n    data: {},\n    errorMessage: \"\",\n    loginRedirect: false,\n    cookie: {}\n  }); // check auth\n\n  useEffect(() => {// const cookie = isLoggedIn();\n    // if (cookie.hasOwnProperty(\"isTrustedVolunteer\") && cookie.isTrustedVolunteer) {\n    //     setState({ ...state, cookie });\n    // }\n\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, []);\n  useEffect(() => {\n    var i = 0;\n\n    for (i = -11; i <= 0; i++) {\n      UpdateTables(i);\n    }\n  }, [state.cookie]);\n\n  function UpdateTables(ind) {\n    // if (state.cookie.hasOwnProperty(\"isTrustedVolunteer\") && state.cookie.isTrustedVolunteer) {\n    getData(\"/monthly-adoption-report?month=\" + ind).then(({\n      target\n    }) => {\n      if (target.status === 200) {\n        const dataDict = state.data;\n        dataDict[ind] = JSON.parse(target.response);\n        setState({ ...state,\n          data: dataDict\n        });\n      } else {\n        setState({ ...state,\n          errorMessage: target.response\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n      setState({ ...state,\n        errorMessage: JSON.stringify(error)\n      });\n    });\n  } // }\n\n\n  function getTableValues() {\n    var indices = [];\n    var i = 0;\n\n    for (i = -11; i <= 0; i++) {\n      indices.push(i);\n    }\n\n    return indices.map(indx => {\n      if (indx in state.data) {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 33\n          }\n        }, GetMonthOffset(indx))), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }\n        })), state.data[indx].map(datum => /*#__PURE__*/React.createElement(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 33\n          }\n        }, datum.breed), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 33\n          }\n        }, datum.SurrenderCount.Float64), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 33\n          }\n        }, datum.AdoptionCount.Float64), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 33\n          }\n        }, datum.Expenses.Float64), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 33\n          }\n        }, datum.AdoptionFees.Float64), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 33\n          }\n        }, datum.Profit.Float64))));\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, \"// \", /*#__PURE__*/React.createElement(NavLinks, {\n    isTrustedVolunteer: state.cookie.isTrustedVolunteer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, \"Monthly Adoption Report\"), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, \"Month\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, \"Breed\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, \"Surrender Count\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, \"Adoption Count\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }, \"Expenses\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, \"Adoption Fees\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, \"Profit\")), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, getTableValues())), state.errorMessage && /*#__PURE__*/React.createElement(\"div\", {\n    styles: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, state.errorMessage));\n};\n\nexport default MonthlyAdoptionReport;","map":{"version":3,"sources":["/Users/ganesh/Desktop/OMSCS/DBMS/Phase1/CS6400-2020-02-Team26/Phase_3/client/src/containers/MonthlyAdoptionReport.js"],"names":["React","useEffect","useState","getData","isLoggedIn","NavLinks","getMonthName","monthNum","GetMonthOffset","offset","today","Date","setMonth","getMonth","getFullYear","MonthlyAdoptionReport","state","setState","data","errorMessage","loginRedirect","cookie","i","UpdateTables","ind","then","target","status","dataDict","JSON","parse","response","catch","error","console","log","stringify","getTableValues","indices","push","map","indx","datum","breed","SurrenderCount","Float64","AdoptionCount","Expenses","AdoptionFees","Profit","isTrustedVolunteer","color"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\n\nimport {getData} from \"../services/api\";\nimport {isLoggedIn} from \"../services/auth\";\nimport { NavLinks } from \"../components\";\n\nfunction getMonthName(monthNum) {\n    switch (monthNum) {\n        case 0: return \"January\"\n        case 1: return \"February\"\n        case 2: return \"March\"\n        case 3: return \"April\"\n        case 4: return \"May\"\n        case 5: return \"June\"\n        case 6: return \"July\"\n        case 7: return \"August\"\n        case 8: return \"September\"\n        case 9: return \"October\"\n        case 10: return \"November\"\n        case 11: return \"December\"\n\n        default: return \"month\"\n\n    }\n}\n\nfunction GetMonthOffset(offset) {\n    let today = new Date()\n    today.setMonth(today.getMonth() + offset)\n\n    return getMonthName(today.getMonth()) + \" \" + today.getFullYear()\n}\n\nconst MonthlyAdoptionReport = () => {\n\n    const [state, setState] = useState({\n        data: {},\n        errorMessage: \"\",\n        loginRedirect: false,\n        cookie: {}\n    });\n\n    // check auth\n    useEffect(() => {\n        // const cookie = isLoggedIn();\n        // if (cookie.hasOwnProperty(\"isTrustedVolunteer\") && cookie.isTrustedVolunteer) {\n        //     setState({ ...state, cookie });\n        // }\n        /* eslint-disable react-hooks/exhaustive-deps */\n    }, []);\n\n    useEffect(() => {\n        var i =0;\n        for ( i = -11; i <= 0; i++ )\n        {\n            UpdateTables(i)\n        }\n\n    }, [state.cookie]);\n\n    function UpdateTables(ind) {\n\n        // if (state.cookie.hasOwnProperty(\"isTrustedVolunteer\") && state.cookie.isTrustedVolunteer) {\n        getData(\"/monthly-adoption-report?month=\"+ind)\n            .then(({ target }) => {\n                if (target.status === 200) {\n\n                    const dataDict = state.data\n                    dataDict[ind] =JSON.parse(target.response)\n\n                    setState({ ...state, data:dataDict});\n\n                } else {\n                    setState({ ...state, errorMessage: target.response });\n                }\n            })\n            .catch(error => {\n                console.log(error);\n                setState({ ...state, errorMessage: JSON.stringify(error) });\n            })\n        }\n    // }\n\n    function getTableValues(){\n        var indices = [];\n        var i = 0;\n        for (i = -11;i<=0; i++)\n        {\n            indices.push(i);\n        }\n\n        return (\n                indices.map(indx=>\n                    { if(indx in state.data) {\n\n\n                    return(\n                        <>\n                        <tr>\n                            <td>\n                                <h3>{GetMonthOffset(indx)}</h3></td>\n                            <td></td>\n                            <td></td>\n                            <td></td>\n                            <td></td>\n                            <td></td>\n                            <td></td>\n                        </tr>\n                            {state.data[indx].map(datum =>\n\n                                <tr>\n                                <td>{datum.breed}</td>\n                                <td>{datum.SurrenderCount.Float64}</td>\n                                <td>{datum.AdoptionCount.Float64}</td>\n                                <td>{datum.Expenses.Float64}</td>\n                                <td>{datum.AdoptionFees.Float64}</td>\n                                <td>{datum.Profit.Float64}</td>\n                            </tr>\n\n                    )}\n                        </>\n\n                    )\n\n                        }\n                    }\n\n                )\n\n        )\n    }\n\n    return (\n        <>\n            // <NavLinks isTrustedVolunteer={state.cookie.isTrustedVolunteer} />\n            <h1>Monthly Adoption Report</h1>\n\n            <table>\n                <thead>\n                    <td>Month</td>\n                    <td>Breed</td>\n                    <td>Surrender Count</td>\n                    <td>Adoption Count</td>\n                    <td>Expenses</td>\n                    <td>Adoption Fees</td>\n                    <td>Profit</td>\n                </thead>\n                <tbody>\n                {\ngetTableValues()\n                }\n                </tbody>\n            </table>\n\n            {state.errorMessage && (\n                <div styles={{ color: \"red\" }}>{state.errorMessage}</div>\n            )}\n        </>\n    );\n}\n\nexport default MonthlyAdoptionReport;\n\n"]},"metadata":{},"sourceType":"module"}