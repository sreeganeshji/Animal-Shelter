{"ast":null,"code":"var _jsxFileName = \"/Users/ganesh/Desktop/OMSCS/DBMS/Phase1/CS6400-2020-02-Team26/Phase_3/client/src/containers/DogDetails.js\";\nimport React, { useEffect, useReducer } from \"react\";\nimport { useParams, Redirect } from \"react-router-dom\";\nimport { getData, sendData } from \"../services/api\";\n\nconst DogDetails = () => {\n  const {\n    dogId\n  } = useParams();\n\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case \"setDog\":\n        return { ...state,\n          ...action.payload\n        };\n\n      case \"sex\":\n        return { ...state,\n          sex: action.payload\n        };\n\n      case \"alterationStatus\":\n        return { ...state,\n          alterationStatus: action.payload\n        };\n\n      case \"microchipId\":\n        return { ...state,\n          microchipId: action.payload\n        };\n\n      case \"expenses\":\n        return { ...state,\n          expenses: action.payload\n        };\n\n      case \"availableBreeds\":\n        return { ...state,\n          availableBreeds: action.payload\n        };\n\n      case \"errorMessage\":\n        return { ...state,\n          errorMessage: action.payload\n        };\n\n      case \"showModal\":\n        return { ...state,\n          id: action.payload,\n          showModal: true\n        };\n\n      case \"dogDashboard\":\n        return { ...state,\n          dashboardRedirect: true\n        };\n\n      case \"reloadPage\":\n        /* eslint-disable no-restricted-globals */\n        location.reload();\n        return;\n\n      case \"breed\":\n        let newBreed = state.breed;\n\n        if (action.payload.checked) {\n          newBreed[action.payload.breed] = true;\n\n          if (action.payload.breed === \"Mixed\" || action.payload.breed === \"Unknown\") {\n            // delete all other breeds\n            for (const key in newBreed) {\n              if (key !== action.payload.breed) {\n                delete newBreed[key];\n                document.querySelector(`#${key.split(\" \").join(\"-\")}`).checked = false;\n              }\n            }\n          }\n        } else {\n          delete newBreed[action.payload.breed];\n        }\n\n        return { ...state,\n          breed: newBreed\n        };\n\n      case \"canEditBreeds\":\n        return { ...state,\n          canEditBreeds: true\n        };\n\n      case \"canEditSex\":\n        return { ...state,\n          canEditSex: true\n        };\n\n      case \"canEditAlterationStatus\":\n        return { ...state,\n          canEditAlterationStatus: true\n        };\n\n      case \"canEditMicrochipId\":\n        return { ...state,\n          canEditMicrochipId: true\n        };\n\n      default:\n        throw new Error();\n    }\n  };\n\n  const [dog, dispatch] = useReducer(reducer, {\n    name: \"\",\n    breed: {},\n    sex: null,\n    alterationStatus: null,\n    dateOfBirth: \"\",\n    description: \"\",\n    microchipId: \"\",\n    surrenderDate: \"\",\n    surrenderReason: \"\",\n    surrenderedByAnimalControl: null,\n    volunteerId: -1,\n    expenses: [],\n    availableBreeds: [],\n    errorMessage: \"\",\n    showModal: false,\n    canEditBreeds: false,\n    canEditSex: false,\n    canEditAlterationStatus: false,\n    canEditMicrochipId: false\n  });\n  useEffect(() => {\n    getData(`/dog?id=${dogId}`).then(({\n      target\n    }) => {\n      const dog = JSON.parse(target.response); // convert breed[] to breed{}\n\n      let newBreed = {};\n\n      if (dog.breed) {\n        dog.breed.forEach(b => {\n          newBreed[b] = true;\n        });\n        dog.breed = newBreed;\n      } // derive permissions\n\n\n      if (dog.breed[\"Unknown\"] || dog.breed[\"Mixed\"]) {\n        dispatch({\n          type: \"canEditBreeds\"\n        });\n      }\n\n      if (dog.sex === \"unknown\") {\n        dispatch({\n          type: \"canEditSex\"\n        });\n      }\n\n      if (!dog.alterationStatus) {\n        dispatch({\n          type: \"canEditAlterationStatus\"\n        });\n      }\n\n      dog.microchipId = dog.microchipId.String;\n\n      if (!dog.microchipId) {\n        dispatch({\n          type: \"canEditMicrochipId\"\n        });\n      }\n\n      dispatch({\n        type: \"setDog\",\n        payload: dog\n      });\n\n      if (dog.breed[\"Unknown\"] || dog.breed[\"Mixed\"]) {\n        getData(\"/breed\").then(({\n          target\n        }) => {\n          dispatch({\n            type: \"availableBreeds\",\n            payload: JSON.parse(target.response)\n          });\n        }).catch(error => {\n          dispatch({\n            type: \"errorMessage\",\n            payload: error\n          });\n          console.log(\"error getting available breeds:\", error);\n        });\n      }\n    }).catch(error => {\n      dispatch({\n        type: \"errorMessage\",\n        payload: error\n      });\n      console.log(\"error getting dog data:\", error);\n    });\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, [dogId]);\n  useEffect(() => {\n    const radioButton = document.querySelector(`#${dog.sex}`);\n    if (radioButton) radioButton.checked = true;\n  }, [dog.sex]);\n  useEffect(() => {\n    const radioButton = document.querySelector(`#unaltered`);\n    if (radioButton) radioButton.checked = true;\n  }, [dog.alterationStatus]);\n  useEffect(() => {\n    for (const breed in dog.breed) {\n      const checkbox = document.querySelector(`#${breed.split(\" \").join(\"-\")}`);\n      if (checkbox) checkbox.checked = true;\n    }\n  }, [dog]);\n\n  const updateDog = () => {\n    const dogData = {\n      breed: Object.keys(dog.breed),\n      sex: dog.sex,\n      alterationStatus: dog.alterationStatus === \"true\" ? true : false\n    };\n    dogData.microchipId = {\n      \"String\": dog.microchipId,\n      \"Valid\": true\n    };\n\n    if (!Object.keys(dog.breed).length) {\n      dispatch({\n        type: \"errorMessage\",\n        payload: \"Please select at least one dog breed.\"\n      });\n      return;\n    }\n\n    sendData(dogData, `/dog/${dogId}`, \"put\").then(({\n      target\n    }) => {\n      if (target.status === 204) {\n        // show success modal\n        dispatch({\n          type: \"reloadPage\"\n        });\n      } else {\n        console.log(\"error adding dog (non-200):\", target.response);\n        dispatch({\n          type: \"errorMessage\",\n          payload: target.response\n        });\n      }\n    }).catch(error => {\n      // show error modal\n      console.log(\"error adding dog (catch):\", error);\n      dispatch({\n        type: \"errorMessage\",\n        payload: JSON.parse(error)\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, dog.dashboardRedirect && /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: `/dog-dashboard`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 39\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, \"Dog Details\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => dispatch({\n      type: \"dogDashboard\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, \"Back to Dog Dashboard\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 21\n    }\n  }, \"Name: \", dog.name)), dog.canEditBreeds ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"breed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 25\n    }\n  }, \"Dog Breed: (Please select at least one.)\"), dog.availableBreeds.map(({\n    id,\n    breed: b = \"\"\n  }) => {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      value: b,\n      id: b.split(\" \").join(\"-\"),\n      onChange: ({\n        target\n      }) => {\n        dispatch({\n          type: 'breed',\n          payload: {\n            breed: target.value,\n            checked: target.checked\n          }\n        });\n      },\n      disabled: (dog.breed[\"Mixed\"] || dog.breed[\"Unknown\"]) && !(b === \"Mixed\" || b === \"Unknown\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: b,\n      style: {\n        display: \"inline\",\n        paddingLeft: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 39\n      }\n    }, b));\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 29\n    }\n  }, \"Breed: \", Object.keys(dog.breed).join(\"/\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }, dog.canEditSex ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"sex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 29\n    }\n  }, \"Dog Sex:\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"male\",\n    name: \"sex\",\n    value: \"male\",\n    onChange: ({\n      target\n    }) => {\n      dispatch({\n        type: \"sex\",\n        payload: target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"male\",\n    style: {\n      display: \"inline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 33\n    }\n  }, \"Male\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"female\",\n    name: \"sex\",\n    value: \"female\",\n    onChange: ({\n      target\n    }) => {\n      dispatch({\n        type: \"sex\",\n        payload: target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"female\",\n    style: {\n      display: \"inline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 33\n    }\n  }, \"Female\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"unknown\",\n    name: \"sex\",\n    value: \"unknown\",\n    onChange: ({\n      target\n    }) => {\n      dispatch({\n        type: 'sex',\n        payload: target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"unknown\",\n    style: {\n      display: \"inline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 33\n    }\n  }, \"Unknown\"))) : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 29\n    }\n  }, \"Sex: \", dog.sex)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 17\n    }\n  }, dog.canEditAlterationStatus ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"alterationStatus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 29\n    }\n  }, \"Dog Alteration Status:\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"altered\",\n    name: \"alterationStatus\",\n    value: true,\n    onChange: ({\n      target\n    }) => {\n      dispatch({\n        type: 'alterationStatus',\n        payload: target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"altered\",\n    style: {\n      display: \"inline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 33\n    }\n  }, \"Spayed/Neutered\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"unaltered\",\n    name: \"alterationStatus\",\n    value: false,\n    onChange: ({\n      target\n    }) => {\n      dispatch({\n        type: 'alterationStatus',\n        payload: target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"unaltered\",\n    style: {\n      display: \"inline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 33\n    }\n  }, \"Unaltered\"))) : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 29\n    }\n  }, \"Alteration Status: \", dog.alterationStatus ? \"Spayed/Neutered\" : \"Unaltered\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 21\n    }\n  }, \"Date of Birth: \", new Date(dog.dateOfBirth).toDateString())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 21\n    }\n  }, \"Description: \", dog.description)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 17\n    }\n  }, dog.canEditMicrochipId ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 29\n    }\n  }, \"Microchip ID:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: dog.microchipId,\n    onChange: ({\n      target\n    }) => {\n      dispatch({\n        type: \"microchipId\",\n        payload: target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 29\n    }\n  })) : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 29\n    }\n  }, \"Microchip ID: \", dog.microchipId)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 21\n    }\n  }, \"Surrender Date: \", new Date(dog.surrenderDate).toDateString())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 21\n    }\n  }, \"Surrender Reason: \", dog.surrenderReason)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 21\n    }\n  }, \"Surrender was by Animal Control: \", dog.surrenderedByAnimalControl ? \"Yes\" : \"No\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 21\n    }\n  }, \"Surrender recorded by volunteer \", dog.volunteerId)), (dog.canEditBreeds || dog.canEditSex || dog.canEditAlterationStatus || dog.canEditMicrochipId) && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: updateDog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 29\n    }\n  }, \"Update Dog\"), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\",\n      paddingLeft: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 29\n    }\n  }, dog.errorMessage))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => dispatch({\n      type: \"dogDashboard\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 13\n    }\n  }, \" Back to Dog Dashboard\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 13\n    }\n  }, \"Expenses\"), dog.expenses.length ? dog.expenses.map(expense => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 33\n    }\n  }, \"Date: \", new Date(expense.date).toDateString())), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 33\n    }\n  }, \"Vendor: \", expense.vendor)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 33\n    }\n  }, \"Description: \", expense.description)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 33\n    }\n  }, \"Cost: $\", expense.amountInCents / 100)))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 22\n    }\n  }, \"No expenses entered yet.\"));\n};\n\nexport default DogDetails;","map":{"version":3,"sources":["/Users/ganesh/Desktop/OMSCS/DBMS/Phase1/CS6400-2020-02-Team26/Phase_3/client/src/containers/DogDetails.js"],"names":["React","useEffect","useReducer","useParams","Redirect","getData","sendData","DogDetails","dogId","reducer","state","action","type","payload","sex","alterationStatus","microchipId","expenses","availableBreeds","errorMessage","id","showModal","dashboardRedirect","location","reload","newBreed","breed","checked","key","document","querySelector","split","join","canEditBreeds","canEditSex","canEditAlterationStatus","canEditMicrochipId","Error","dog","dispatch","name","dateOfBirth","description","surrenderDate","surrenderReason","surrenderedByAnimalControl","volunteerId","then","target","JSON","parse","response","forEach","b","String","catch","error","console","log","radioButton","checkbox","updateDog","dogData","Object","keys","length","status","pathname","map","value","display","paddingLeft","Date","toDateString","color","expense","date","vendor","amountInCents"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer } from \"react\";\nimport { useParams, Redirect } from \"react-router-dom\";\n\nimport { getData, sendData } from \"../services/api\";\n\nconst DogDetails = () => {\n    const { dogId } = useParams();\n\n    const reducer = (state, action) => {\n        switch (action.type) {\n            case \"setDog\":\n                return { ...state, ...action.payload };\n            case \"sex\":\n                return { ...state, sex: action.payload };\n            case \"alterationStatus\":\n                return { ...state, alterationStatus: action.payload };\n            case \"microchipId\":\n                return { ...state, microchipId: action.payload };\n            case \"expenses\":\n                return { ...state, expenses: action.payload };\n            case \"availableBreeds\":\n                return { ...state, availableBreeds: action.payload };\n            case \"errorMessage\":\n                return { ...state, errorMessage: action.payload };\n            case \"showModal\":\n                return { ...state, id: action.payload, showModal: true };\n            case \"dogDashboard\":\n                return { ...state, dashboardRedirect: true };\n            case \"reloadPage\":\n                /* eslint-disable no-restricted-globals */\n                location.reload();\n                return;\n            case \"breed\":\n                let newBreed = state.breed;\n                if (action.payload.checked) {\n                    newBreed[action.payload.breed] = true;\n                    if (action.payload.breed === \"Mixed\" || action.payload.breed === \"Unknown\") {\n                        // delete all other breeds\n                        for (const key in newBreed) {\n                            if (key !== action.payload.breed) {\n                                delete newBreed[key];\n                                document.querySelector(`#${key.split(\" \").join(\"-\")}`).checked = false;\n                            }\n                        }\n                    }\n                } else {\n                    delete newBreed[action.payload.breed];\n                }\n                return { ...state, breed: newBreed };\n            case \"canEditBreeds\":\n                return { ...state, canEditBreeds: true };\n            case \"canEditSex\":\n                return { ...state, canEditSex: true };\n            case \"canEditAlterationStatus\":\n                return { ...state, canEditAlterationStatus: true };\n            case \"canEditMicrochipId\":\n                return { ...state, canEditMicrochipId: true };\n            default:\n                throw new Error();\n        }\n    };\n\n    const [dog, dispatch] = useReducer(\n        reducer,\n        {\n            name: \"\",\n            breed: {},\n            sex: null,\n            alterationStatus: null,\n            dateOfBirth: \"\",\n            description: \"\",\n            microchipId: \"\",\n            surrenderDate: \"\",\n            surrenderReason: \"\",\n            surrenderedByAnimalControl: null,\n            volunteerId: -1,\n            expenses: [],\n            availableBreeds: [],\n            errorMessage: \"\",\n            showModal: false,\n            canEditBreeds: false,\n            canEditSex: false,\n            canEditAlterationStatus: false,\n            canEditMicrochipId: false\n        });\n\n    useEffect(() => {\n        getData(`/dog?id=${dogId}`)\n            .then(({ target }) => {\n                const dog = JSON.parse(target.response);\n                // convert breed[] to breed{}\n                let newBreed = {};\n                if (dog.breed) {\n                    dog.breed.forEach(b => {\n                        newBreed[b] = true;\n                    });\n                    dog.breed = newBreed;\n                }\n                // derive permissions\n                if (dog.breed[\"Unknown\"] || dog.breed[\"Mixed\"]) {\n                    dispatch({ type: \"canEditBreeds\" });\n                }\n                if (dog.sex === \"unknown\") {\n                    dispatch({ type: \"canEditSex\" });\n                }\n                if (!dog.alterationStatus) {\n                    dispatch({ type: \"canEditAlterationStatus\" });\n                }\n                dog.microchipId = dog.microchipId.String;\n                if (!dog.microchipId) {\n                    dispatch({ type: \"canEditMicrochipId\" });\n                }\n                dispatch({ type: \"setDog\", payload: dog });\n                if (dog.breed[\"Unknown\"] || dog.breed[\"Mixed\"]) {\n                    getData(\"/breed\")\n                        .then(({ target }) => {\n                            dispatch({ type: \"availableBreeds\", payload: JSON.parse(target.response) });\n                        })\n                        .catch(error => {\n                            dispatch({ type: \"errorMessage\", payload: error });\n                            console.log(\"error getting available breeds:\", error);\n                        })\n                }\n            })\n            .catch(error => {\n                dispatch({ type: \"errorMessage\", payload: error });\n                console.log(\"error getting dog data:\", error);\n            })\n        /* eslint-disable react-hooks/exhaustive-deps */\n    }, [dogId]);\n\n    useEffect(() => {\n        const radioButton = document.querySelector(`#${dog.sex}`);\n        if (radioButton) radioButton.checked = true;\n    }, [dog.sex]);\n\n    useEffect(() => {\n        const radioButton = document.querySelector(`#unaltered`);\n        if (radioButton) radioButton.checked = true;\n    }, [dog.alterationStatus]);\n\n    useEffect(() => {\n        for (const breed in dog.breed) {\n            const checkbox = document.querySelector(`#${breed.split(\" \").join(\"-\")}`);\n            if (checkbox) checkbox.checked = true;\n        }\n    }, [dog]);\n\n    const updateDog = () => {\n        const dogData = {\n            breed: Object.keys(dog.breed),\n            sex: dog.sex,\n            alterationStatus: dog.alterationStatus === \"true\" ? true : false,\n        };\n        dogData.microchipId = { \"String\": dog.microchipId, \"Valid\": true };\n        if (!Object.keys(dog.breed).length) {\n            dispatch({ type: \"errorMessage\", payload: \"Please select at least one dog breed.\" });\n            return;\n        }\n        sendData(dogData, `/dog/${dogId}`, \"put\")\n            .then(({ target }) => {\n                if (target.status === 204) {\n                    // show success modal\n                    dispatch({ type: \"reloadPage\" });\n                } else {\n                    console.log(\"error adding dog (non-200):\", target.response);\n                    dispatch({ type: \"errorMessage\", payload: target.response });\n                }\n            })\n            .catch(error => {\n                // show error modal\n                console.log(\"error adding dog (catch):\", error);\n                dispatch({ type: \"errorMessage\", payload: JSON.parse(error) });\n            });\n    }\n\n    return (\n        <>\n            {dog.dashboardRedirect && <Redirect to={{ pathname: `/dog-dashboard` }} />}\n            <h1>Dog Details</h1>\n            <button type=\"button\" onClick={() => dispatch({ type: \"dogDashboard\" })}>Back to Dog Dashboard</button>\n            <form>\n                <div className=\"form-unit\">\n                    <span>Name: {dog.name}</span>\n                </div>\n                {dog.canEditBreeds ? (\n                    <div className=\"form-unit\">\n                        <label htmlFor=\"breed\">Dog Breed: (Please select at least one.)</label>\n                        {dog.availableBreeds.map(({ id, breed: b = \"\" }) => {\n                            return (\n                                <p key={id}>\n                                    <input type=\"checkbox\"\n                                        value={b}\n                                        id={b.split(\" \").join(\"-\")}\n                                        onChange={({ target }) => {\n                                            dispatch({ type: 'breed', payload: { breed: target.value, checked: target.checked } })\n                                        }}\n                                        disabled={(dog.breed[\"Mixed\"] || dog.breed[\"Unknown\"]) && !(b === \"Mixed\" || b === \"Unknown\")}\n                                    /><label htmlFor={b} style={{ display: \"inline\", paddingLeft: \"10px\" }}>{b}</label>\n                                </p>\n                            )\n                        })}\n                    </div>\n                ) : (\n                        <div className=\"form-unit\">\n                            <span>Breed: {Object.keys(dog.breed).join(\"/\")}</span>\n                        </div>\n                    )}\n                <div className=\"form-unit\">\n                    {dog.canEditSex ? (\n                        <>\n                            <label htmlFor=\"sex\">Dog Sex:</label>\n                            <p>\n                                <input type=\"radio\"\n                                    id=\"male\"\n                                    name=\"sex\"\n                                    value=\"male\"\n                                    onChange={({ target }) => {\n                                        dispatch({ type: \"sex\", payload: target.value })\n                                    }}\n                                />\n                                <label htmlFor=\"male\" style={{ display: \"inline\" }}>Male</label>\n                            </p>\n                            <p>\n                                <input type=\"radio\"\n                                    id=\"female\"\n                                    name=\"sex\"\n                                    value=\"female\"\n                                    onChange={({ target }) => {\n                                        dispatch({ type: \"sex\", payload: target.value })\n                                    }}\n                                />\n                                <label htmlFor=\"female\" style={{ display: \"inline\" }}>Female</label>\n                            </p>\n                            <p>\n                                <input type=\"radio\"\n                                    id=\"unknown\"\n                                    name=\"sex\"\n                                    value=\"unknown\"\n                                    onChange={({ target }) => {\n                                        dispatch({ type: 'sex', payload: target.value })\n                                    }}\n                                />\n                                <label htmlFor=\"unknown\" style={{ display: \"inline\" }}>Unknown</label>\n                            </p>\n                        </>\n                    ) : (\n                            <span>Sex: {dog.sex}</span>\n                        )}\n                </div>\n                <div className=\"form-unit\">\n                    {dog.canEditAlterationStatus ? (\n                        <>\n                            <label htmlFor=\"alterationStatus\">Dog Alteration Status:</label>\n                            <p>\n                                <input type=\"radio\"\n                                    id=\"altered\"\n                                    name=\"alterationStatus\"\n                                    value={true}\n                                    onChange={({ target }) => {\n                                        dispatch({ type: 'alterationStatus', payload: target.value })\n                                    }}\n                                />\n                                <label htmlFor=\"altered\" style={{ display: \"inline\" }}>Spayed/Neutered</label>\n                            </p>\n                            <p>\n                                <input type=\"radio\"\n                                    id=\"unaltered\"\n                                    name=\"alterationStatus\"\n                                    value={false}\n                                    onChange={({ target }) => {\n                                        dispatch({ type: 'alterationStatus', payload: target.value })\n                                    }}\n                                />\n                                <label htmlFor=\"unaltered\" style={{ display: \"inline\" }}>Unaltered</label>\n                            </p>\n                        </>\n                    ) : (\n                            <span>Alteration Status: {dog.alterationStatus ? \"Spayed/Neutered\" : \"Unaltered\"}</span>\n                        )}\n                </div>\n                <div className=\"form-unit\">\n                    <span>Date of Birth: {new Date(dog.dateOfBirth).toDateString()}</span>\n                </div>\n                <div className=\"form-unit\">\n                    <span>Description: {dog.description}</span>\n                </div>\n                <div className=\"form-unit\">\n                    {dog.canEditMicrochipId ? (\n                        <>\n                            <label>Microchip ID:</label>\n                            <input\n                                type=\"text\"\n                                value={dog.microchipId}\n                                onChange={({ target }) => {\n                                    dispatch({ type: \"microchipId\", payload: target.value })\n                                }} />\n                        </>\n                    ) : (\n                            <span>Microchip ID: {dog.microchipId}</span>\n                        )}\n                </div>\n                <div className=\"form-unit\">\n                    <span>Surrender Date: {new Date(dog.surrenderDate).toDateString()}</span>\n                </div>\n                <div className=\"form-unit\">\n                    <span>Surrender Reason: {dog.surrenderReason}</span>\n                </div>\n                <div className=\"form-unit\">\n                    <span>Surrender was by Animal Control: {dog.surrenderedByAnimalControl ? \"Yes\" : \"No\"}</span>\n                </div>\n                <div className=\"form-unit\">\n                    <span>Surrender recorded by volunteer {dog.volunteerId}</span>\n                </div>\n                {(\n                    dog.canEditBreeds || dog.canEditSex ||\n                    dog.canEditAlterationStatus || dog.canEditMicrochipId\n                ) && (\n                        <>\n                            <button type=\"button\" onClick={updateDog}>Update Dog</button>\n                            <span style={{ color: \"red\", paddingLeft: \"10px\" }}>{dog.errorMessage}</span>\n                        </>\n                    )}\n            </form>\n            <button type=\"button\" onClick={() => dispatch({ type: \"dogDashboard\" })}> Back to Dog Dashboard</button >\n            <hr></hr>\n            <h1>Expenses</h1>\n            {\n                dog.expenses.length ? (\n                    dog.expenses.map(expense => (\n                        <div>\n                            <div>\n                                <span>Date: {new Date(expense.date).toDateString()}</span>\n                            </div>\n                            <div>\n                                <span>Vendor: {expense.vendor}</span>\n                            </div>\n                            <div>\n                                <span>Description: {expense.description}</span>\n                            </div>\n                            <div>\n                                <span>Cost: ${expense.amountInCents / 100}</span>\n                            </div>\n                        </div>\n                    ))\n                ) : (<div>No expenses entered yet.</div>)\n            }\n        </>\n    );\n}\n\nexport default DogDetails;"]},"metadata":{},"sourceType":"module"}