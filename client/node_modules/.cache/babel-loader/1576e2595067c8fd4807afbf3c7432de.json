{"ast":null,"code":"var _jsxFileName = \"/Users/ganesh/Desktop/OMSCS/DBMS/Phase1/CS6400-2020-02-Team26/Phase_3/client/src/containers/AddApplication.js\";\nimport React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { getData, sendData } from \"../services/api\";\n\nconst AddApplication = () => {\n  const [applicant, setApplicant] = useState({\n    city: \"\",\n    email: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    phoneNumber: \"\",\n    state: \"\",\n    street: \"\",\n    zip: \"\"\n  });\n  const [application, setApplication] = useState({\n    coApplicantFirstName: \"\",\n    coApplicantLastName: \"\",\n    applicantIdFk: \"\",\n    date: \"\",\n    state: \"\"\n  });\n  const [state, setState] = useState({\n    showModal: false,\n    dashboardRedirect: false,\n    errorMessage: \"\",\n    timeout: -1,\n    applicationId: \"\"\n  });\n\n  const updateApplicant = attribute => {\n    let updatedState = applicant;\n    Object.assign(updatedState, attribute);\n    setApplicant({ ...updatedState\n    });\n  };\n\n  const updateApplication = attribute => {\n    let updatedState = application;\n    Object.assign(updatedState, attribute);\n    setApplication({ ...updatedState\n    });\n  };\n\n  const postApplicant = () => {\n    sendData(applicant, `/applicant`).then(({\n      target\n    }) => {\n      const applicant = JSON.parse(target.response);\n\n      if (target.status === 201 && applicant.email) {\n        // show success modal\n        setApplicant(applicant);\n        updateApplication({\n          applicantIdFk: applicant.id\n        });\n        postApplication();\n      } else {\n        console.log(\"error adding application (non-201):\", target.response);\n        setState({ ...state,\n          \"errorMessage\": target.response\n        });\n      }\n    }).catch(error => {\n      // show error modal\n      console.log(\"error adding application (catch):\", error);\n      setState({ ...state,\n        \"errorMessage\": error\n      });\n    });\n  };\n\n  const postApplication = () => {\n    sendData(application, `/application`).then(({\n      target\n    }) => {\n      if (target.status === 201) {\n        // show success modal\n        setState({ ...state,\n          applicationId: JSON.parse(target.response).id,\n          showModal: true\n        });\n      } else {\n        console.log(\"error adding application (non-201):\", target.response);\n        setState({ ...state,\n          \"errorMessage\": target.response\n        });\n      }\n    }).catch(error => {\n      // show error modal\n      console.log(\"error adding application (catch):\", error);\n      setState({ ...state,\n        \"errorMessage\": error\n      });\n    });\n  };\n\n  const submitApplication = () => {\n    if (application.applicantIdFk) {\n      postApplication();\n    } else {\n      postApplicant();\n    }\n  };\n\n  const resetPage = () => {\n    setApplicant({\n      city: \"\",\n      email: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      phoneNumber: \"\",\n      state: \"\",\n      street: \"\",\n      zip: \"\"\n    });\n    setApplication({\n      coApplicantFirstName: \"\",\n      coApplicantLastName: \"\",\n      applicantIdFk: \"\",\n      date: \"\",\n      state: \"\"\n    });\n    setState({\n      showModal: false,\n      dashboardRedirect: false,\n      errorMessage: \"\",\n      timeout: -1,\n      applicationId: \"\"\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, state.dashboardRedirect && /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: \"/dog-dashboard\",\n      state: {\n        from: \"/add-dog\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, \"Add Application\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, \"Applicant Email Address:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"applicant-email\",\n    value: applicant.email,\n    onChange: ({\n      target\n    }) => {\n      updateApplicant({\n        \"email\": target.value\n      }); // debounce for 300 milliseconds\n\n      clearTimeout(state.timeout);\n      setState({ ...state,\n        timeout: setTimeout(() => {\n          // make http call for applicant\n          getData(`/applicant/${applicant.email}`).then(({\n            target\n          }) => {\n            let applicant = JSON.parse(target.response);\n\n            if (target.status === 200 && applicant.email) {\n              setApplicant(applicant);\n              updateApplication({\n                applicantIdFk: applicant.id\n              });\n            }\n          }).catch(error => {\n            console.log(error);\n          });\n        }, 400)\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }, \"Applicant First Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"applicant-first-name\",\n    value: applicant.firstName,\n    onChange: ({\n      target\n    }) => updateApplicant({\n      \"firstName\": target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, \"Applicant Last Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"applicant-last-name\",\n    value: applicant.lastName,\n    onChange: ({\n      target\n    }) => updateApplicant({\n      \"lastName\": target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, \"Street Address:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"applicant-stree-address\",\n    value: applicant.street,\n    onChange: ({\n      target\n    }) => updateApplicant({\n      \"street\": target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 21\n    }\n  }, \"City:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"applicant-city\",\n    value: applicant.city,\n    onChange: ({\n      target\n    }) => updateApplicant({\n      \"city\": target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 21\n    }\n  }, \"State: (2 Letters)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"applicant-state\",\n    value: applicant.state,\n    onChange: ({\n      target\n    }) => updateApplicant({\n      \"state\": target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  }, \"Zip Code:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"applicant-zip-code\",\n    value: applicant.zip,\n    onChange: ({\n      target\n    }) => updateApplicant({\n      \"zip\": target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 21\n    }\n  }, \"Phone Number:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"applicant-phone-number\",\n    value: applicant.phoneNumber,\n    onChange: ({\n      target\n    }) => updateApplicant({\n      \"phoneNumber\": target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 21\n    }\n  }, \"Co-Applicant First Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"applicant-co-applicant-first-name\",\n    value: applicant.coApplicantFirstName,\n    onChange: ({\n      target\n    }) => updateApplication({\n      \"coApplicantFirstName\": target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 21\n    }\n  }, \"Co-Applicant Last Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"applicant-co-applicant-last-name\",\n    value: applicant.coApplicantLastName,\n    onChange: ({\n      target\n    }) => updateApplication({\n      \"coApplicantLastName\": target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: submitApplication,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  }, \"Submit Application\")), state.showModal && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      overflow: \"hidden\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"fixed\",\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      zIndex: 10,\n      backgroundColor: \"black\",\n      opacity: 0.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"fixed\",\n      left: \"50%\",\n      bottom: \"50%\",\n      marginLeft: \"-300px\",\n      marginBottom: \"-150px\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      zIndex: 100,\n      height: \"300px\",\n      width: \"600px\",\n      backgroundColor: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 29\n    }\n  }, \"Application successfully created.\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 29\n    }\n  }, \"Application #\", state.applicationId)), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 25\n    }\n  }, \"Would you like to go to\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: resetPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 29\n    }\n  }, \"Add another application\"), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      margin: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 29\n    }\n  }, \" or \"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setState({ ...state,\n      dashboardRedirect: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 29\n    }\n  }, \"Back to Dog Dashboard\")))));\n};\n\nexport default AddApplication;","map":{"version":3,"sources":["/Users/ganesh/Desktop/OMSCS/DBMS/Phase1/CS6400-2020-02-Team26/Phase_3/client/src/containers/AddApplication.js"],"names":["React","useState","Redirect","getData","sendData","AddApplication","applicant","setApplicant","city","email","firstName","lastName","phoneNumber","state","street","zip","application","setApplication","coApplicantFirstName","coApplicantLastName","applicantIdFk","date","setState","showModal","dashboardRedirect","errorMessage","timeout","applicationId","updateApplicant","attribute","updatedState","Object","assign","updateApplication","postApplicant","then","target","JSON","parse","response","status","id","postApplication","console","log","catch","error","submitApplication","resetPage","pathname","from","value","clearTimeout","setTimeout","display","flexDirection","alignItems","justifyContent","overflow","position","top","right","bottom","left","zIndex","backgroundColor","opacity","marginLeft","marginBottom","height","width","margin"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { getData, sendData } from \"../services/api\";\n\nconst AddApplication = () => {\n    const [applicant, setApplicant] = useState({\n        city: \"\",\n        email: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        phoneNumber: \"\",\n        state: \"\",\n        street: \"\",\n        zip: \"\"\n    });\n\n    const [application, setApplication] = useState({\n        coApplicantFirstName: \"\",\n        coApplicantLastName: \"\",\n        applicantIdFk: \"\",\n        date: \"\",\n        state: \"\"\n    });\n\n    const [state, setState] = useState({\n        showModal: false,\n        dashboardRedirect: false,\n        errorMessage: \"\",\n        timeout: -1,\n        applicationId: \"\"\n    });\n\n    const updateApplicant = (attribute) => {\n        let updatedState = applicant;\n        Object.assign(updatedState, attribute);\n        setApplicant({ ...updatedState });\n    };\n\n    const updateApplication = (attribute) => {\n        let updatedState = application;\n        Object.assign(updatedState, attribute);\n        setApplication({ ...updatedState });\n    };\n\n    const postApplicant = () => {\n        sendData(applicant, `/applicant`)\n            .then(({ target }) => {\n                const applicant = JSON.parse(target.response);\n                if (target.status === 201 && applicant.email) {\n                    // show success modal\n                    setApplicant(applicant)\n                    updateApplication({ applicantIdFk: applicant.id })\n                    postApplication()\n                } else {\n                    console.log(\"error adding application (non-201):\", target.response);\n                    setState({ ...state, \"errorMessage\": target.response });\n                }\n            })\n            .catch(error => {\n                // show error modal\n                console.log(\"error adding application (catch):\", error);\n                setState({ ...state, \"errorMessage\": error });\n            });\n    };\n\n    const postApplication = () => {\n        sendData(application, `/application`)\n            .then(({ target }) => {\n                if (target.status === 201) {\n                    // show success modal\n                    setState({ ...state, applicationId: JSON.parse(target.response).id, showModal: true });\n                } else {\n                    console.log(\"error adding application (non-201):\", target.response);\n                    setState({ ...state, \"errorMessage\": target.response });\n                }\n            })\n            .catch(error => {\n                // show error modal\n                console.log(\"error adding application (catch):\", error);\n                setState({ ...state, \"errorMessage\": error });\n            });\n    };\n\n    const submitApplication = () => {\n        if (application.applicantIdFk) {\n            postApplication();\n        } else {\n            postApplicant();\n        }\n    };\n\n    const resetPage = () => {\n        setApplicant({\n            city: \"\",\n            email: \"\",\n            firstName: \"\",\n            lastName: \"\",\n            phoneNumber: \"\",\n            state: \"\",\n            street: \"\",\n            zip: \"\"\n        });\n\n        setApplication({\n            coApplicantFirstName: \"\",\n            coApplicantLastName: \"\",\n            applicantIdFk: \"\",\n            date: \"\",\n            state: \"\"\n        });\n\n        setState({\n            showModal: false,\n            dashboardRedirect: false,\n            errorMessage: \"\",\n            timeout: -1,\n            applicationId: \"\"\n        });\n    }\n\n    return (\n        <>\n            {state.dashboardRedirect && <Redirect to={{ pathname: \"/dog-dashboard\", state: { from: \"/add-dog\" } }} />}\n            <h1>Add Application</h1>\n            <form>\n                <div className=\"form-unit\">\n                    <label htmlFor=\"\">Applicant Email Address:</label>\n                    <input\n                        type=\"text\"\n                        id=\"applicant-email\"\n                        value={applicant.email}\n                        onChange={({ target }) => {\n                            updateApplicant({ \"email\": target.value })\n                            // debounce for 300 milliseconds\n                            clearTimeout(state.timeout);\n                            setState({\n                                ...state, timeout: setTimeout(() => {\n                                    // make http call for applicant\n                                    getData(`/applicant/${applicant.email}`)\n                                        .then(({ target }) => {\n                                            let applicant = JSON.parse(target.response);\n                                            if (target.status === 200 && applicant.email) {\n                                                setApplicant(applicant);\n                                                updateApplication({ applicantIdFk: applicant.id })\n                                            }\n                                        })\n                                        .catch(error => {\n                                            console.log(error);\n                                        })\n                                }, 400)\n                            });\n                        }}\n                    />\n                </div>\n                <div className=\"form-unit\">\n                    <label htmlFor=\"\">Applicant First Name:</label>\n                    <input\n                        type=\"text\"\n                        id=\"applicant-first-name\"\n                        value={applicant.firstName}\n                        onChange={({ target }) => updateApplicant({ \"firstName\": target.value })}\n                    />\n                </div>\n                <div className=\"form-unit\">\n                    <label htmlFor=\"\">Applicant Last Name:</label>\n                    <input\n                        type=\"text\"\n                        id=\"applicant-last-name\"\n                        value={applicant.lastName}\n                        onChange={({ target }) => updateApplicant({ \"lastName\": target.value })}\n                    />\n                </div>\n                <div className=\"form-unit\">\n                    <label htmlFor=\"\">Street Address:</label>\n                    <input\n                        type=\"text\"\n                        id=\"applicant-stree-address\"\n                        value={applicant.street}\n                        onChange={({ target }) => updateApplicant({ \"street\": target.value })}\n                    />\n                </div>\n                <div className=\"form-unit\">\n                    <label htmlFor=\"\">City:</label>\n                    <input\n                        type=\"text\"\n                        id=\"applicant-city\"\n                        value={applicant.city}\n                        onChange={({ target }) => updateApplicant({ \"city\": target.value })}\n                    />\n                </div>\n                <div className=\"form-unit\">\n                    <label htmlFor=\"\">State: (2 Letters)</label>\n                    <input\n                        type=\"text\"\n                        id=\"applicant-state\"\n                        value={applicant.state}\n                        onChange={({ target }) => updateApplicant({ \"state\": target.value })}\n                    />\n                </div>\n                <div className=\"form-unit\">\n                    <label htmlFor=\"\">Zip Code:</label>\n                    <input\n                        type=\"text\"\n                        id=\"applicant-zip-code\"\n                        value={applicant.zip}\n                        onChange={({ target }) => updateApplicant({ \"zip\": target.value })}\n                    />\n                </div>\n                <div className=\"form-unit\">\n                    <label htmlFor=\"\">Phone Number:</label>\n                    <input\n                        type=\"text\"\n                        id=\"applicant-phone-number\"\n                        value={applicant.phoneNumber}\n                        onChange={({ target }) => updateApplicant({ \"phoneNumber\": target.value })}\n                    />\n                </div>\n                <div className=\"form-unit\">\n                    <label htmlFor=\"\">Co-Applicant First Name:</label>\n                    <input\n                        type=\"text\"\n                        id=\"applicant-co-applicant-first-name\"\n                        value={applicant.coApplicantFirstName}\n                        onChange={({ target }) => updateApplication({ \"coApplicantFirstName\": target.value })}\n                    />\n                </div>\n                <div className=\"form-unit\">\n                    <label htmlFor=\"\">Co-Applicant Last Name:</label>\n                    <input\n                        type=\"text\"\n                        id=\"applicant-co-applicant-last-name\"\n                        value={applicant.coApplicantLastName}\n                        onChange={({ target }) => updateApplication({ \"coApplicantLastName\": target.value })}\n                    />\n                </div>\n                <button type=\"button\" onClick={submitApplication}>Submit Application</button>\n            </form>\n            {state.showModal && (\n                <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\", overflow: \"hidden\" }}>\n                    <div style={{ position: \"fixed\", top: 0, right: 0, bottom: 0, left: 0, zIndex: 10, backgroundColor: \"black\", opacity: 0.5 }}></div>\n                    <div style={{ position: \"fixed\", left: \"50%\", bottom: \"50%\", marginLeft: \"-300px\", marginBottom: \"-150px\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\", zIndex: 100, height: \"300px\", width: \"600px\", backgroundColor: \"white\" }}>\n                        <div style={{ marginBottom: \"20px\" }}>\n                            <span>Application successfully created.</span>\n                        </div>\n                        <div style={{ marginBottom: \"20px\" }}>\n                            <span>Application #{state.applicationId}</span>\n                        </div>\n                        <div style={{ margin: \"20px\" }}>Would you like to go to</div>\n                        <div>\n                            <button onClick={resetPage}>Add another application</button>\n                            <span style={{ margin: \"20px\" }}> or </span>\n                            <button onClick={() => setState({ ...state, dashboardRedirect: true })}>Back to Dog Dashboard</button>\n                        </div>\n                    </div>\n                </div>\n            )}\n            {/*<div>{JSON.stringify(useLocation())}</div>*/}\n        </>\n    )\n\n\n}\n\nexport default AddApplication;"]},"metadata":{},"sourceType":"module"}