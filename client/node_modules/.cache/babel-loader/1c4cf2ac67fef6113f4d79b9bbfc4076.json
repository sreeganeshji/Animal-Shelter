{"ast":null,"code":"var _jsxFileName = \"/Users/ganesh/Desktop/OMSCS/DBMS/Phase1/CS6400-2020-02-Team26/Phase_3/client/src/containers/MonthlyAdoptionReport.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { getData } from \"../services/api\";\n\nconst MonthlyAdoptionReport = () => {\n  const [state, setState] = useState({\n    data: [],\n    errorMessage: \"\"\n  });\n  useEffect(() => {\n    // replace \"/monthly-adoption-report\" with correct endpoint name\n    getData(\"/monthly-adoption-report\").then(({\n      target\n    }) => {\n      console.log(target);\n\n      if (target.status === 200) {\n        setState({ ...state,\n          data: JSON.parse(target.response)\n        });\n      } else {\n        setState({ ...state,\n          errorMessage: target.response\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n      setState({ ...state,\n        errorMessage: JSON.stringify(error)\n      });\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"Monthly Adoption Report\"), state.data.length && state.data.map(datum => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-unit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 28\n      }\n    }, JSON.stringify(datum));\n  }), state.errorMessage && /*#__PURE__*/React.createElement(\"div\", {\n    styles: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, state.errorMessage));\n};\n\nexport default MonthlyAdoptionReport;","map":{"version":3,"sources":["/Users/ganesh/Desktop/OMSCS/DBMS/Phase1/CS6400-2020-02-Team26/Phase_3/client/src/containers/MonthlyAdoptionReport.js"],"names":["React","useEffect","useState","getData","MonthlyAdoptionReport","state","setState","data","errorMessage","then","target","console","log","status","JSON","parse","response","catch","error","stringify","length","map","datum","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,MAAMC,qBAAqB,GAAG,MAAM;AAEhC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC;AAC/BK,IAAAA,IAAI,EAAE,EADyB;AAE/BC,IAAAA,YAAY,EAAE;AAFiB,GAAD,CAAlC;AAKAP,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAE,IAAAA,OAAO,CAAC,0BAAD,CAAP,CACKM,IADL,CACU,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAgB;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAIA,MAAM,CAACG,MAAP,KAAkB,GAAtB,EAA2B;AACvBP,QAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYE,UAAAA,IAAI,EAAEO,IAAI,CAACC,KAAL,CAAWL,MAAM,CAACM,QAAlB;AAAlB,SAAD,CAAR;AACH,OAFD,MAEO;AACHV,QAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYG,UAAAA,YAAY,EAAEE,MAAM,CAACM;AAAjC,SAAD,CAAR;AACH;AACJ,KARL,EASKC,KATL,CASWC,KAAK,IAAI;AACZP,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACAZ,MAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYG,QAAAA,YAAY,EAAEM,IAAI,CAACK,SAAL,CAAeD,KAAf;AAA1B,OAAD,CAAR;AACH,KAZL;AAaH,GAfQ,EAeN,EAfM,CAAT;AAgBA,sBACI,uDACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,EAEKb,KAAK,CAACE,IAAN,CAAWa,MAAX,IACGf,KAAK,CAACE,IAAN,CAAWc,GAAX,CAAeC,KAAK,IAAI;AACpB,wBAAO;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BR,IAAI,CAACK,SAAL,CAAeG,KAAf,CAA5B,CAAP;AACH,GAFD,CAHR,EAOKjB,KAAK,CAACG,YAAN,iBACG;AAAK,IAAA,MAAM,EAAE;AAAEe,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgClB,KAAK,CAACG,YAAtC,CARR,CADJ;AAaH,CApCD;;AAsCA,eAAeJ,qBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { getData } from \"../services/api\";\n\nconst MonthlyAdoptionReport = () => {\n\n    const [state, setState] = useState({\n        data: [],\n        errorMessage: \"\"\n    });\n\n    useEffect(() => {\n        // replace \"/monthly-adoption-report\" with correct endpoint name\n        getData(\"/monthly-adoption-report\")\n            .then(({ target }) => {\n                console.log(target)\n                if (target.status === 200) {\n                    setState({ ...state, data: JSON.parse(target.response) });\n                } else {\n                    setState({ ...state, errorMessage: target.response });\n                }\n            })\n            .catch(error => {\n                console.log(error);\n                setState({ ...state, errorMessage: JSON.stringify(error) });\n            })\n    }, []);\n    return (\n        <>\n            <h1>Monthly Adoption Report</h1>\n            {state.data.length && (\n                state.data.map(datum => {\n                    return <div className=\"form-unit\">{JSON.stringify(datum)}</div>\n                })\n            )}\n            {state.errorMessage && (\n                <div styles={{ color: \"red\" }}>{state.errorMessage}</div>\n            )}\n        </>\n    );\n}\n\nexport default MonthlyAdoptionReport;"]},"metadata":{},"sourceType":"module"}